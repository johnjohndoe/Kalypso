<project default="fake">

		
	<!-- - - - - - - - - - - - - - - - - - 
          target: fake                      nur damit das Projekt nicht schreit
         - - - - - - - - - - - - - - - - - -->
	<target name="fake" />

	<!-- 
		 ================================= 
          target: create			Rechenvariante erzeugen
         ================================= 
    -->
	<target name="create" description="Erzeugung der Rechenvariante">
			<echo message="Rechenvariante anlegen: ${calc.dir}" />

			<copy file="${project.dir}/modell.gml" tofile="${calc.dir}/calcCase.gml"/>
		   	<copy file="${project.dir}/.templates/.calculation.template" tofile="${calc.dir}/.calculation"/>
			<copy todir="${calc.dir}">
				<fileset dir="${project.dir}/.templates">
					<include name="*.gtt"/>
					<include name="*.gmt"/>
					<include name="*.gft"/>
					<include name="*.ott"/>
					<include name="*.odt"/>
					<include name="Zeitreihen/*.ott"/>
					<include name="Zeitreihen/*.odt"/>
					<include name="Anfangswerte/*.zip"/>
					<include name="Ergebnisse/Zeitreihen/*.ott"/>
					<include name="Ergebnisse/Zeitreihen/*.odt"/>
					<include name="Ergebnisse/Zeitreihen_ohneVerschiebung/*.ott"/>
					<include name="Ergebnisse/Zeitreihen_ohneVerschiebung/*.odt"/>
				</fileset>
			</copy>
		
		<condition property="isMergeCase" value="true">
			<not>
				<equals trim="true" arg1="" arg2="${calc.merge.relpath}"/>
			</not>
		</condition>

		<kalypso.changeGml gmlURL="${calc.url}/.calculation">
			<property featurepath="" featureProperty="scenarioId" value="${kalypso.currentScenarioId}"/>
			<property featurepath="" featureProperty="scenarioName" value="${kalypso.currentScenarioName}"/>
			<property featurepath="" featureProperty="scenarioDescription" value="${kalypso.currentScenarioDescription}"/>
			<property featurepath="" featureProperty="startforecast" value="${kalypso.startforecast}"/>
			<property featurepath="" featureProperty="simulationDuration" value="6"/>
			<property featurepath="" featureProperty="forecastDuration" value="72"/>
			<property featurepath="" featureProperty="editor" value="${kalypso.currentUser}"/>
			<property featurepath="" featureProperty="description" value="- bitte ausfüllen -"/>
			<property featurepath="" featureProperty="comment" value="- bitte ausfüllen -"/>
			<property featurepath="" featureProperty="calctime" value="${kalypso.currentTime}"/>
			<property featurepath="" featureProperty="mergeCasePath" value="${calc.merge.relpath}"/>
			<property featurepath="" featureProperty="intervalAmount" value="1"/>
		</kalypso.changeGml>
		
		<antcall target="createIsMergeCase"/>
	</target>
	
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: createIsMergeCase                      
          This target is only needed, as the condition-task does not yet support 'else'
          So useAWerte is set to false (default); only if isMergeCase=true, we set if to true
         - - - - - - - - - - - - - - - - - -->
    <target name="createIsMergeCase" if="isMergeCase">
		<kalypso.changeGml gmlURL="${calc.url}/.calculation">
			<property featurepath="" featureProperty="useAWerte" value="${isMergeCase}"/>
			<property featurePath="" featureProperty="useAWerteText" value="Es sind Anfangswerte vorhanden."/>
		</kalypso.changeGml>
    </target>


	
    <!-- - - - - - - - - - - - - - - - - - 
          target: calculationProperties                      Initializes properties from .calculation
         - - - - - - - - - - - - - - - - - -->
    <target name="calculationProperties">
    	<property name="HOUR_OF_DAY" value="11"/>
    	<property name="DAY_OF_MONTH" value="5"/>

    	<!-- TRICK :-) Berechnen von startsim und stopsim in zweitem gmlPropertyTask, da dann die Ergebnisse des ersten auch zu Verfügung stehen...-->
		<kalypso.gmlProperty gmlURL="${calc.url}/.calculation">
			<property name="startforecast" featurepath="" featureProperty="startforecast"/>
			<property name="simulationDuration" featurepath="" featureProperty="simulationDuration"/>
			<property name="forecastDuration" featurepath="" featureProperty="forecastDuration"/>
			<property name="scenarioId" featurepath="" featureProperty="scenarioId" defaultValue=""/>
			<property name="interval.amount" featurepath="" featureProperty="intervalAmount" defaultValue=""/>
			<property name="calc.merge.path" featurepath="" featureProperty="mergeCasePath" defaultValue=""/>
		</kalypso.gmlProperty>
    	
		<kalypso.gmlProperty gmlURL="${calc.url}/.calculation">
			<!-- startsim = Tagesanfang(startforecast - simulationDuration d) -->
			<property name="startsim" featurepath="" featureProperty="startforecast" dateoffset="-${simulationDuration}" dateoffsetfield="${DAY_OF_MONTH}" dateTruncField="${DAY_OF_MONTH}" />
			<!-- stopsim = startforecast + forecastDuration h -->
			<!-- TODO: was passiert, wenn interval.amount <> 1 (im Zusammenhang zusehen mit dem Erzeugen der Eingabedateien für den Rechenkern)-->
			<property name="stopsim" featurepath="" featureProperty="startforecast" dateoffset="${forecastDuration}" dateoffsetfield="${HOUR_OF_DAY}" />
		</kalypso.gmlProperty>
    	
    	<!-- Construct the url of the calc case to merge and set the flag if merge is allowed.
        		 REMARK: add trailing '/', else url resolution does not work properly for
        		 the merge task
        	-->
        	<property name="calc.merge.dir" value="${project.dir}/${calc.merge.path}/"/>
        	<property name="calc.merge.url" value="${project.url}${calc.merge.path}/"/>
        	<condition property="doMergeCase">
        		<not>
        			<equals trim="true" arg1="" arg2="${calc.merge.path}"/>
        		</not>
        	</condition>
    	
    	<!-- Zeitschritt der Berechnung [h] aus .calculation-->
    		<property name="interval.field" value="HOUR_OF_DAY"/>

    	    <!-- define the requests -->
    		<property name="requestQ"
    			value="&lt;request xmlns=&quot;request.zml.kalypso.org&quot;&gt;&lt;axes&gt;date,Q&lt;/axes&gt;&lt;statusAxes&gt;Q&lt;/statusAxes&gt;&lt;/request&gt;" />

    		<property name="requestW"
    			value="&lt;request xmlns=&quot;request.zml.kalypso.org&quot;&gt;&lt;axes&gt;date,W&lt;/axes&gt;&lt;statusAxes&gt;W&lt;/statusAxes&gt;&lt;/request&gt;" />
    			
    		<property name="requestPolder"
    			value="&lt;request xmlns=&quot;request.zml.kalypso.org&quot;&gt;&lt;axes&gt;date,POLDER_CONTROL&lt;/axes&gt;&lt;statusAxes&gt;POLDER_CONTROL&lt;/statusAxes&gt;&lt;/request&gt;" />

    		<!-- Vordefinierte Filter -->
    	    <!-- Q: interpolation-filter -->
    		<property name="filterQ"
    			value="${requestQ}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;true&quot; /&gt;&lt;/filter&gt;" />
    		<property name="filterW"
    			value="${requestW}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;true&quot; /&gt;&lt;/filter&gt;" />
    		
	    <property name="filterQOhneFortsetzung"
			value="${requestQ}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;false&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;false&quot; /&gt;&lt;/filter&gt;" />

	    <property name="filterWOhneFortsetzung"
			value="${requestW}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;false&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;false&quot; /&gt;&lt;/filter&gt;" />

    		<!-- POLDER_CONTROL: ??? filter -->
    		<property name="filterPolder"
    			value="${requestPolder}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;false&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;true&quot; /&gt;&lt;/filter&gt;" />

    	 	
    		<!-- Ablage W: mit Rundung auf +/- 5cm -->
    		<property name="filterCommitPrognoseWDown" 
    			value="&lt;filter&gt;&lt;roundFilter factor=&quot;5&quot; mode=&quot;ROUND_DOWN&quot; axisType=&quot;W&quot; xmlns=&quot;filters.zml.kalypso.org&quot;/&gt;&lt;/filter&gt;"/>
    		<property name="filterCommitPrognoseWUp" 
    			value="&lt;filter&gt;&lt;roundFilter factor=&quot;5&quot; mode=&quot;ROUND_UP&quot; axisType=&quot;W&quot; xmlns=&quot;filters.zml.kalypso.org&quot;/&gt;&lt;/filter&gt;"/>

    		<!-- Ablage W, ohne Rundung (Filter für W und Q gleich?) -->
    			<property name="filterCommitPrognoseW"
    					value="&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;0&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot;  /&gt;&lt;/filter&gt;" />
    			
    		<!-- Ablage Q, ohne Rundung -->
    		<property name="filterCommitPrognoseQ"
    				value="&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;0&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot;  /&gt;&lt;/filter&gt;" />

    	
    	<echo message="Szenario der Rechenvariante ist: ${scenarioId}" />
    	
    	<!-- Unterscheide zwischen Katastrophentest und normalem Szenario -->
    			<kalypso.multiequals arg1="${scenarioId}" arg2="test">
    				<!-- Links fürs Abholen der Zeitreihen -->
    				<property name="pegelMessungLink" valueThen="in1ObservationLink" valueElse="inObservationLink"/>
    				<property name="pegelCzVorhersageLink" valueThen="in3ObservationLink" valueElse="in2ObservationLink"/>
    				<property name="zwischengebieteLink" valueThen="in1ObservationLink" valueElse="inObservationLink"/>
    				<property name="pegelMessungWInfoLink" valueThen="in3ObservationLink" valueElse="in2ObservationLink"/>
    				
    				<!-- Links für die Ablage der Vorhersage-Zeitreihen -->
    				<property name="vorhersageLinkNormal" valueThen="out5ObservationLink" valueElse="out2ObservationLink"/>
    				<property name="vorhersageLinkOben" valueThen="out4ObservationLink" valueElse="out1ObservationLink"/>
    				<property name="vorhersageLinkUnten" valueThen="out3ObservationLink" valueElse="outObservationLink"/>
    			</kalypso.multiequals>
    </target>
	
	<!-- 
		 ================================= 
          target: update			Zeitreihen aktualisieren & kombinieren...
         ================================= 
    -->
	<target name="update" depends="calculationProperties" description="Aktualisierung der Rechenvariante">
		<echo message="Zeitreihen aktualisieren: ${calc.dir}" />
		
		<copy todir="${calc.dir}/Zeitreihen">
			<fileset dir="${project.dir}/.templates/Zeitreihen">
				<include name="*.gmt"/>
				<include name="*.gtt"/>
				<include name="*.gft"/>
				<include name="*.ott"/>
				<include name="*.odt"/>
			</fileset>
		</copy>

		<!-- 
			Pegel und Polder
		-->
		<!-- Usti (Q): Messung kombiniert mit tschechischen Vorhersagen -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Usti.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Messwerte und Kombination mit tschechischen Vorhersagen (Usti)">
			<source property="${pegelMessungLink}" from="${startsim}" to="${startforecast}" filter="${filterQ}"/>
			<source property="${pegelCzVorhersageLink}" from="${startforecast}" to="${stopsim}" filter="${filterQ}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<!-- Elbepegel (W): nur Messung -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Elbepegel.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Messwerte der Elbepegel">
			<source property="${pegelMessungLink}" from="${startsim}" to="${startforecast}" filter="${filterW}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>

		<!-- Usti: zusätzlich "Messung" W, zur Information -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Usti_Cz_WMessung.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der W-Messwerte für Usti (zur Information)">
			<source property="${pegelMessungWInfoLink}" from="${startsim}" to="${startforecast}" filter="${filterWOhneFortsetzung}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>

		<!-- Usti: zusätzlich "Vorhersage" W, zur Information -->
		<!--
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Usti_Cz_WVorhersage.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der W-Prognosen für Usti (zur Information)">
			<source property="${pegelMessungWInfoLink}" from="${startforecast}" to="${stopsim}" filter="${filterWOhneFortsetzung}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		-->

		<!-- 
			Zwischengebiete (Q)(Vergangenheit und Prognose aus einem PSI-Container) 
		-->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Zwischengebiete.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Zwischengebietszuflüsse">
			<source property="${zwischengebieteLink}" from="${startsim}" to="${stopsim}" filter="${filterQ}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		<!-- 
			Löben (W) (wie Zwischengebiete - Vergangenheit und Prognose aus einem PSI-Container) 
		-->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Loeben.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der W-Zeitreihe für Löben">
			<source property="${zwischengebieteLink}" from="${startsim}" to="${stopsim}" filter="${filterW}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<!-- 
			Polder (Zustand = POLDER_CONTROL)
		-->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Polder.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Polder-Steuerung">
			<source property="${pegelMessungLink}" from="${startsim}" to="${stopsim}" filter="${filterPolder}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<antcall target="mergeCase"/>
	</target>
	
	<!-- 
		 ================================= 
          target: mergeCase			
         ================================= 
    -->
	<target name="mergeCase" if="doMergeCase">
		<!-- Usti (Q): Messung kombiniert mit tschechischen Vorhersagen -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Usti.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der Messwerte und Kombination mit tschechischen Vorhersagen (Usti)"/>
		
		<!-- Elbepegel (W): nur Messung -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Elbepegel.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der Messwerte der Elbepegel"/>

		<!-- Usti: zusätzlich "Messung" W, zur Information -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Usti_Cz_WMessung.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der W-Messwerte für Usti (zur Information)"/>
		
		<!-- 
			Zwischengebiete (Q)(Vergangenheit und Prognose aus einem PSI-Container) 
		-->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Zwischengebiete.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der Zwischengebietszuflüsse"/>
		<!-- 
			Löben (W) (wie Zwischengebiete - Vergangenheit und Prognose aus einem PSI-Container) 
		-->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Loeben.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der W-Zeitreihe für Löben"/>
		
		<!-- 
			Polder (Zustand = POLDER_CONTROL)
		-->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Polder.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink"  description="Zusammenführen der Polder-Steuerung"/>
		
		
		<!-- Anfangswerte übernehmen -->
		<copy file="${calc.merge.dir}/Ergebnisse/Anfangswerte/awerte.zip" tofile="${calc.dir}/Anfangswerte/awerte.zip" overwrite="true" failonerror="false" />
	
	</target>

	<!-- 
		 ================================= 
          target: runCalculation			
         ================================= 
    -->
	<target name="runCalculation" description="Durchführung der Simulationsrechnung">
		<echo message="Berechnung wird durchgeführt: ${calc.path}"/>
		<kalypso.runCalculation calccasefolder="${calc.path}" typeid="org.kalypso.model.wavos.elbe.sachsen.v1">
			<input id="CONTROL_GML" path=".calculation" relativeToCalcCase="true"/>
			<input id="GML" path="calcCase.gml" relativeToCalcCase="true"/>
			
			<input id="ZML_PEGEL" path="Zeitreihen/Pegel" relativeToCalcCase="true"/>
			<input id="ZML_ZUFLUESSE" path="Zeitreihen/Zufluesse" relativeToCalcCase="true"/>
			<input id="ZML_POLDER" path="Zeitreihen/Polder" relativeToCalcCase="true"/>
			<input id="AWERTE" path="Anfangswerte" relativeToCalcCase="true"/>
			
			<output id="LOG" path="Ergebnisse/Log-Datei/elbeWavosSachsen.log" relativeToCalcCase="true"/>
			<output id="ERGEBNISSE" path="Ergebnisse" relativeToCalcCase="true"/>
			<output id="NATIVE_IN_DIR" path="Ergebnisse/.native/in" relativeToCalcCase="true"/>
			<output id="NATIVE_OUT_DIR"  path="Ergebnisse/.native/out" relativeToCalcCase="true"/>
			
			<!-- Anfangswerte lieber nicht löschen, sonst sind sie beim Wiederaufnehmen nicht mehr da...-->
			<!--<clearAfterCalc path="Ergebnisse/Anfangswerte" relativeToCalcCase="true"/>-->
			<clearAfterCalc path="Ergebnisse/.native" relativeToCalcCase="true"/>
			<clearAfterCalc path="Ergebnisse/Zeitreihen/Pegel" relativeToCalcCase="true"/>
			<clearAfterCalc path="Ergebnisse/Zeitreihen_ohneVerschiebung/Pegel" relativeToCalcCase="true"/>
			<clearAfterCalc path="Ergebnisse/Log-Datei" relativeToCalcCase="true" />
		</kalypso.runCalculation>
	</target>
	
    <!-- ================================= 
          target: exportVorhersagen              
         ================================= -->
    <target name="exportVorhersagen" depends="calculationProperties" description="Export der Prognosen nach PSICompact">
        <echo message="Vorhersagezeitreihen werden nach PSICompact geschrieben..."/>
   		<echo message="Szenario-ID der Rechenvariante ist: ${scenarioId}" />
   		<echo message="" />


            <!-- Einmal normal und je einmal für die untere und die obere Umhüllende -->
            <!-- Pro Pegel werden 6 Prognosespuren definiert:
                    - 3 Spuren für den Wasserstand                           
                    .P1_MW untere Umhüllende      W                    
                    .P2_MW obere Umhüllende       W                          
                    .P3_MW berechnete Prognose    W    
                    
                    - 3 Spuren für den Durchfluss                   
                    .P4_MW untere Umhüllende      Q                 
                    .P5_MW obere Umhüllende       Q             
                    .P6_MW berechnete Prognose    Q-->
            
            
       	
            <echo message="Ablage der unteren Umhüllenden W"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognoseWDown}" localobs="local2" remoteobs="${vorhersageLinkUnten}" runasync="false" IgnoreIllegalFeaturePath="true"/>
            <echo message="Ablage der oberen Umhüllenden W"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognoseWUp}" localobs="local3" remoteobs="${vorhersageLinkOben}" runasync="false" IgnoreIllegalFeaturePath="true"/>
            <echo message="Ablage der Prognoseergebnisse W"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognoseW}" localobs="local1" remoteobs="${vorhersageLinkNormal}" runasync="false" IgnoreIllegalFeaturePath="true"/>
            
            <echo message="Ablage der unteren Umhüllenden Q"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognoseQ}" localobs="local2" remoteobs="${vorhersageLinkUnten}" runasync="false" IgnoreIllegalFeaturePath="true"/>
            <echo message="Ablage der oberen Umhüllenden Q"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognoseQ}" localobs="local3" remoteobs="${vorhersageLinkOben}" runasync="false" IgnoreIllegalFeaturePath="true"/>
            <echo message="Ablage der Prognoseergebnisse Q"/>
            <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognoseQ}" localobs="local1" remoteobs="${vorhersageLinkNormal}" runasync="false" IgnoreIllegalFeaturePath="true"/>
    
    
    </target>
</project>