/*
	This file was generated by XVT-Design 3.0, a product of:

		XVT Software Inc.
		4900 Pearl East Circle
		Boulder, CO USA 80301
		303-443-4223, fax 303-443-0969

	Generated on Thu May 04 13:15:57 1995
*/

#include <windows.h>
#include "xvt.h"
#include "wspwin.h"

#include "global_types.h"
#include "..\..\wspdlg\include\export.h"

#include "list.h"

#include "global.h"
#include "ctype.h"

#include "wsphilfe.h"

extern XVT_HELP_INFO hi;

/*
	Information about the dialog
*/
#define DLG_RES_ID DLG_209
#define DLG_FLAGS 0x0L
#define DLG_CLASS ""
#define DLG_MODE WD_MODAL

extern char char_vzk[5];
extern BOOLEAN aendern,
					konvert;
char zufluss1[3],
	  zufluss2[3],
	  abfluss1[3],
	  abfluss2[3],
	  qmenge[10],
	  string209[25],
	  qiterativ[3];
int zahl209=1,
	 i209=0,
	 j209=0;
BOOLEAN richtig1209,
		 abbruch209,
		 test209;

/*
	Handler for dialog DLG_209 ("Dialog 209")
	VERZWEIGUNGSPARAMETER
	*/
long XVT_CALLCONV1
#if XVT_CC_PROTO
DLG_209_eh XVT_CALLCONV2 (WINDOW xdWindow, EVENT *xdEvent)
#else
DLG_209_eh XVT_CALLCONV2 (xdWindow, xdEvent)
WINDOW xdWindow;
EVENT *xdEvent;
#endif
{
	short xdControlId = xdEvent->v.ctl.id;

	switch (xdEvent->type) {
	case E_CREATE:
		/*
			Dialog has been created; first event sent to newly-created
			dialog.
		*/
		{
		 abbruch209=FALSE;
		 //edit1209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_13); //Titel vzk
		 //edit2209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_6);  //zufluss1
		 //edit3209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_7);  // "2
		 //edit4209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_8);  //abfluss1
		 //edit5209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_9);  // "2
		 //edit6209=xvt_win_get_ctl(xdWindow,DLG_209_EDIT_10); //abflussmenge
		 //check209=xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17);
		 int test=-1;
		 if(!aendern)
			{
/*************/
			 char netzdatei[100];
			 char dateiname[20];
			 xvt_fsys_convert_dir_to_str(&STR_SPEC.dir, netzdatei, 50);
			 strcat(netzdatei,"\\");
			 strcpy(dateiname, STR_SPEC.name);
  //			 dateiname[2]='v';
  //			 dateiname[3]='z';
			 strcat(netzdatei, dateiname);
			 netzdatei[strlen(netzdatei)-3]='\0';
			 strcat(netzdatei,"vzk");
			 test=access(netzdatei,4); //if da test=0
/************/
			 if(test!=0)
			  {
				xvt_ctl_set_checked((xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17)),0);
				test209=FALSE;
				qiterativ[0]='\0';
				strcat(qiterativ,"\0");
			  }
			}
		 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_13)),char_vzk);

		 if((aendern) || ((!aendern)&&(!test)))
		  {
			 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_6)),zufluss1);
			 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_7)),zufluss2);
			 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_8)),abfluss1);
			 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_9)),abfluss2);
			 xvt_vobj_set_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_10)),qmenge);
			 if(qiterativ[0]=='1')
			  {
				xvt_ctl_set_checked((xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17)),1);
				test209=TRUE;
			  }
			 else
			  {
				xvt_ctl_set_checked((xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17)),0);
				test209=FALSE;
			  }
		  }
		 richtig1209=TRUE;
		 if (hi!=NULL_HELP_INFO)
			xvt_help_set_win_assoc(hi, xdWindow, HID_KAPITEL_5_5_1, 0L);
		}
		break;
	case E_DESTROY:
		/*
			Dialog has been closed; last event sent to dialog.
		*/
		{
		}
		break;
	case E_FOCUS:
		{
		/*
			Dialog has lost or gained focus.
		*/
		if (xdEvent->v.active)  {
			/*
				Dialog has gained focus
			*/
		} else {
			/*
				Dialog has lost focus
			*/
		}
		}
		break;
	case E_SIZE:
		/*
			Size of dialog has been set or changed; sent when dialog is
			created or subsequently resized by xvt_vobj_move.
		*/
		{
		}
		break;
	case E_CLOSE:
		/*
			Request to close dialog; user operated "close" menu item on
			dialog system menu, or operated "close" control on dialog
			frame. Dialog not closed unless xvt_vobj_destroy is called.
		*/
		{
		xvt_vobj_destroy(xdWindow);
		}
		break;
	case E_CHAR:
		/*
			Character typed.
		*/
		{
		}
		break;
	case E_CONTROL:
		/*
			User operated control in dialog.
		*/
		{

		switch(xdControlId) {
		case DLG_209_EDIT_6:			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
			xvt_vobj_get_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_6)),zufluss1,3);
			strcat(zufluss1,"\0");
			zufluss1[2]='\0';
			}
			}
			break;
		case DLG_209_EDIT_7:			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
				xvt_vobj_get_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_7)),zufluss2,3);
				strcat(zufluss2,"\0");
				zufluss2[2]='\0';
			}
			}
			break;
		case DLG_209_EDIT_8:			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
			xvt_vobj_get_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_8)),abfluss1,3);
			strcat(abfluss1,"\0");
			abfluss1[2]='\0';

			}
			}
			break;
		case DLG_209_EDIT_9:			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
			 xvt_vobj_get_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_9)),abfluss2,3);
			 strcat(abfluss2,"\0");
			 abfluss2[2]='\0';

			}
			}
			break;
		case DLG_209_EDIT_10: //ABFLUSS
					{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
			xvt_vobj_get_title((xvt_win_get_ctl(xdWindow,DLG_209_EDIT_10)),qmenge,9);
			strcat(qmenge,"\0");
//qmenge[3]='\0';

			}
			}
			break;
		case DLG_209_EDIT_13: //vzk-Titel
					{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				}
			} else {
				/*
					Contents of control were changed
				*/
			}
			}
			break;

		case DLG_209_CHECKBOX_17: /* "Abflussaufteilung" */
			{
			 xvt_ctl_set_checked((xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17)), !xvt_ctl_is_checked (xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17)));
			 test209=xvt_ctl_is_checked (xvt_win_get_ctl(xdWindow, DLG_209_CHECKBOX_17));

			}
			break;
		case DLG_209_PUSHBUTTON_15: /* "ABBRUCH" */
			{
				abbruch209=TRUE;
				xvt_vobj_destroy(xdWindow);
			}
			break;
		case DLG_209_PUSHBUTTON_16: /* "OK" */
			{
			 richtig1209=TRUE;

			 if(test209==TRUE)
				qiterativ[0]='1';
			 else
				qiterativ[0]='0';
			 strcat(qiterativ,"\0");

			 zahl209=isdigit(zufluss1[0]);
			 if (zahl209==NULL)
				richtig1209=FALSE;
			 if(strlen(zufluss1)>1)
				{
				 zahl209=isdigit(zufluss1[1]);
				 if (zahl209==NULL)
					richtig1209=FALSE;
				}
			 if(strlen(zufluss1)<1)
			  richtig1209=FALSE;

			 zahl209=isdigit(zufluss2[0]);
			 if (zahl209==NULL)
				richtig1209=FALSE;
			 if(strlen(zufluss2)>1)
				{
				 zahl209=isdigit(zufluss2[1]);
				 if (zahl209==NULL)
					richtig1209=FALSE;
				}
			 if(strlen(zufluss2)<1)
				richtig1209=FALSE;

			 zahl209=isdigit(abfluss1[0]);
			 if (zahl209==NULL)
				richtig1209=FALSE;
			 if(strlen(abfluss1)>1)
				{
				 zahl209=isdigit(abfluss1[1]);
				 if (zahl209==NULL)
					richtig1209=FALSE;
				}
			 if(strlen(abfluss1)<1)
				richtig1209=FALSE;

			 zahl209=isdigit(abfluss2[0]);
			 if (zahl209==NULL)
				richtig1209=FALSE;
			 if(strlen(abfluss2)>1)
				{
				 zahl209=isdigit(abfluss2[1]);
				 if (zahl209==NULL)
					richtig1209=FALSE;
				}
			 if(strlen(abfluss2)<1)
				richtig1209=FALSE;

			 zahl209 = isdigit(qmenge[0]);

			 for( int qlen = 0; qlen < (INT)strlen( qmenge ); qlen++ )
			 {
				 zahl209=isdigit(qmenge[qlen]);
				 if (qmenge[qlen] != '.' && qmenge[qlen] != ',' && zahl209==NULL)
					 richtig1209=FALSE;
			 }

			 if(strlen(qmenge)<1)
				richtig1209=FALSE;

			 if(richtig1209)
			  {
				string209[0]='\0';
				for (i209=0;i209<18; i209++)
					string209[i209]=' ';
				j209=0;
				for(i209=0;i209<(INT)strlen(char_vzk);i209++)
				 {
				  string209[i209]=char_vzk[j209];
				  j209++;
				 }
				string209[2]=' ';
				j209=0;
				for(i209=3;i209<((INT)strlen(zufluss1)+3);i209++)
				 {
				  string209[i209]=zufluss1[j209];
				  j209++;
				 }
				string209[5]=' ';
				j209=0;
				for(i209=6;i209<((INT)strlen(zufluss2)+6);i209++)
				 {
				  string209[i209]=zufluss2[j209];
				  j209++;
				 }
				string209[8]=' ';
				j209=0;
				for(i209=9;i209<((INT)strlen(abfluss1)+9);i209++)
				 {
				  string209[i209]=abfluss1[j209];
				  j209++;
				 }
				string209[11]=' ';
				j209=0;
				for(i209=12;i209<((INT)strlen(abfluss2)+12);i209++)
				 {
				  string209[i209]=abfluss2[j209];
				  j209++;
				 }
				string209[14]=' ';
				j209=0;
				for(i209=15;i209<((INT)strlen(qmenge)+15);i209++)
				 {
					if( qmenge[j209] == ',' )
						string209[i209] = '.';
					else
						string209[i209]=qmenge[j209];
				  j209++;
				 }
				string209[i209++]=' ';
				string209[i209++]=qiterativ[0];
				string209[i209++]='\0';
				xvt_vobj_destroy(xdWindow);
			  }
			 else
				 xvt_dm_post_note("Falsche Zahleneingabe (nur ganzzahlige Werte)! ");
			}
			break;

		default:
			break;
		}
		}
		break;
	case E_TIMER:
		/*
			Timer associated with window went off.
		*/
		{
		}
		break;
	case E_USER:
		/*
			Application initiated.
		*/
		{
		switch (xdEvent->v.user.id) {
		case -1:
		default:
			break;
		}
		}
		break;
	default:
		break;
	}
	return 0L;
}
