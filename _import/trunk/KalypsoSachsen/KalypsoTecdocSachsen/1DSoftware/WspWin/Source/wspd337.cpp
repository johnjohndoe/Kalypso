/*
	This file was generated by XVT-Design 3.0, a product of:

		XVT Software Inc.
		4900 Pearl East Circle
		Boulder, CO USA 80301
		303-443-4223, fax 303-443-0969

	Generated on Wed Nov 22 13:43:17 2000
*/

#include <windows.h>
#include "xvt.h"
#include "wspwin.h"

#include "resource.h"

#include "global_types.h"

#include "bce_allg.h"
#include "list.h"

#include "strang.h"
#include "typen.h"

#include "global.h"

#include "wsphilfe.h"

/* 
	Information about the dialog
*/
#define DLG_RES_ID DLG_337
#define DLG_FLAGS 0x0L
#define DLG_CLASS ""
#define DLG_MODE WD_MODELESS



buhne sonderbau;
WINDOW edit_buhne[3], WIN_DLG_337, radio_buhne[2];           
extern WINDOW dlg_sonderprofil;
extern BOOLEAN sichere_datenblock;
static WNDPROC defWndProc;
int aktuelles_editfeld=0;
LRESULT CALLBACK Dlg337WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	switch (uMsg)
	{
	case WM_HELP:
		{
			LPHELPINFO lphi = (LPHELPINFO)lParam;
    }
		break;

	default:
		break;
	}
	return CallWindowProc(defWndProc, hwnd, uMsg, wParam, lParam);
}
/*
	Handler for dialog DLG_337 ("Sonderbauwerke/Buhnen")
*/
long XVT_CALLCONV1
#if XVT_CC_PROTO
DLG_337_eh XVT_CALLCONV2 (WINDOW xdWindow, EVENT *xdEvent)
#else
DLG_337_eh XVT_CALLCONV2 (xdWindow, xdEvent)
WINDOW xdWindow;
EVENT *xdEvent;
#endif
{
	short xdControlId = xdEvent->v.ctl.id;

	switch (xdEvent->type) {
	case E_CREATE:
		/*
			Dialog has been created; first event sent to newly-created
			dialog.
		*/
		{

		  //Fenster verschieben Anfang von Brücke
         WIN_DLG_337=xdWindow;
		if (WIN_116!=NULL_WIN)
			SetParent((HWND)xvt_vobj_get_attr(xdWindow, ATTR_NATIVE_WINDOW), (HWND)xvt_vobj_get_attr(WIN_116, ATTR_NATIVE_WINDOW));
		 else if (WIN120!=NULL_WIN)
			SetParent((HWND)xvt_vobj_get_attr(xdWindow, ATTR_NATIVE_WINDOW), (HWND)xvt_vobj_get_attr(WIN120, ATTR_NATIVE_WINDOW));
		 defWndProc = (WNDPROC)GetWindowLong((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), GWL_WNDPROC);
		 SetWindowLong((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), GWL_WNDPROC, (LONG)&Dlg337WindowProc);
		 ChangeFontAndSize((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW));	// GHJ
		 RECT rect;
		 POINT pt1, pt2;
		 if (WIN_116!=NULL_WIN)
		 {
			 ::GetWindowRect(::GetDlgItem((HWND)xvt_vobj_get_attr(WIN_116,ATTR_NATIVE_WINDOW), WIN_GRAPH_116_LISTBUTTON_33), &rect);
			 pt1.x = rect.left;
			 pt1.y = rect.top;
			 ::ScreenToClient((HWND)xvt_vobj_get_attr(WIN_116,ATTR_NATIVE_WINDOW), &pt1);
			 pt1.y += 3*(rect.bottom-rect.top);
			 pt1.x -= 10;
			 ::GetWindowRect((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), &rect);
			 pt2.x = pt1.x + rect.right-rect.left;
			 pt2.y = pt1.y + rect.bottom-rect.top;
			 ::MoveWindow((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), pt1.x, pt1.y, pt2.x-pt1.x, pt2.y-pt1.y, TRUE);
		 }
		 else if (WIN120!=NULL_WIN)
		 {
			 ::GetWindowRect(::GetDlgItem((HWND)xvt_vobj_get_attr(WIN120,ATTR_NATIVE_WINDOW), WIN_120_LISTBUTTON_33), &rect);
			 pt1.x = rect.left;
			 pt1.y = rect.top;
			 ::ScreenToClient((HWND)xvt_vobj_get_attr(WIN120,ATTR_NATIVE_WINDOW), &pt1);
			 pt1.y += 3*(rect.bottom-rect.top);
			 pt1.x -= 10;
			 ::GetWindowRect((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), &rect);
			 pt2.x = pt1.x + rect.right-rect.left;
			 pt2.y = pt1.y + rect.bottom-rect.top;
			 ::MoveWindow((HWND)xvt_vobj_get_attr(xdWindow,ATTR_NATIVE_WINDOW), pt1.x, pt1.y, pt2.x-pt1.x, pt2.y-pt1.y, TRUE);
		 }
		 xvt_vobj_set_visible(xdWindow, TRUE);

		  //Fenster verschieben Ende von Brücke
			
		for (int i=0;i<=2;i++)
				edit_buhne[i]=xvt_win_get_ctl(xdWindow,DLG_337_EDIT_1+i);
         if(aktuelles_editfeld==0)
			 aktuelles_editfeld=1;
		 list->GetInfoline2(scr.datensatz, aktuelles_editfeld, &sonderbau);  //Zeile2 Infoblock holen

         list->Errechne_Buhnen_Neigung(scr.datensatz,aktuelles_editfeld, &sonderbau);
		 xvt_vobj_set_title(edit_buhne[1],sonderbau.neig_links_rueck);
		 xvt_vobj_set_title(edit_buhne[0],sonderbau.neig_links_vorne);
		 xvt_vobj_set_title(edit_buhne[2],sonderbau.hoehe_links);


		 for(int j=0; j<=1; j++)
			 radio_buhne[j]=xvt_win_get_ctl(xdWindow, DLG_337_RADIOBUTTON_1+j);

		if(sonderbau.lage[0]=='R')
			xvt_ctl_check_radio_button(radio_buhne[1],radio_buhne,2);
		else
		{
			xvt_ctl_check_radio_button(radio_buhne[0],radio_buhne,2);
			strcpy(sonderbau.lage,"L");
		}

		 dlg_sonderprofil = xdWindow;


		}
		break;
	case E_DESTROY:
		/*
			Dialog has been closed; last event sent to dialog.
		*/
//		xdRemoveHelpAssoc( xdWindow );
		{
		 dlg_sonderprofil = NULL_WIN;
		}
		break;
	case E_FOCUS:
		{
		/*
			Dialog has lost or gained focus.
		*/
		if (xdEvent->v.active)  {
			/*
				Dialog has gained focus
			*/
		} else {
			/*
				Dialog has lost focus
			*/
		}
		}
		break;
	case E_SIZE:
		/*
			Size of dialog has been set or changed; sent when dialog is
			created or subsequently resized by xvt_vobj_move.
		*/
		{
		}
		break;
	case E_CLOSE:
		/*
			Request to close dialog; user operated "close" menu item on
			dialog system menu, or operated "close" control on dialog
			frame. Dialog not closed unless xvt_vobj_destroy is called.
		*/
		{
		dlg_sonderprofil = NULL_WIN;
		xvt_vobj_destroy(xdWindow);
		}
		break;
	case E_CHAR:
		/*
			Character typed.
		*/
		{
		}
		break;
	case E_UPDATE:
		{

		}
		break;
	case E_CONTROL:
		/*
			User operated control in dialog.
		*/
		{

		switch(xdControlId) {
		case DLG_337_EDIT_1: //Neigung Rücken
			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else
				{
					/*
						focus has left the control
					*/
				 xvt_vobj_get_title(edit_buhne[0],sonderbau.neig_links_rueck,9);
				}
			} else {
				/*
					Contents of control were changed
				*/
				sichere_datenblock = TRUE;

			}
			}
			break;
		case DLG_337_EDIT_2: //Neigung Rücken links
			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				 xvt_vobj_get_title(edit_buhne[1],sonderbau.neig_links_vorne,9);

				}
			} else {
				/*
					Contents of control were changed
				*/
               sichere_datenblock=TRUE;
			}
			}
			break;
		case DLG_337_EDIT_3:			{
			/*
				Edit control was operated.
			*/
			if (xdEvent->v.ctl.ci.v.edit.focus_change) {
				if (xdEvent->v.ctl.ci.v.edit.active) {
					/*
						focus has entered the control
					*/
				} else {
					/*
						focus has left the control
					*/
				 xvt_vobj_get_title(edit_buhne[2],sonderbau.hoehe_links,9);

				}
			} else {
				/*
					Contents of control were changed
				*/
             sichere_datenblock=TRUE;
			}
			}
			break;
		case DLG_337_RADIOBUTTON_1:
			{
			xdCheckRadioButton(xdWindow, DLG_337_RADIOBUTTON_1,
				DLG_337_RADIOBUTTON_1, DLG_337_RADIOBUTTON_2);
			strcpy(sonderbau.lage,"L");
			}
			break;
		case DLG_337_RADIOBUTTON_2:
			{
			xdCheckRadioButton(xdWindow, DLG_337_RADIOBUTTON_2,
				DLG_337_RADIOBUTTON_1, DLG_337_RADIOBUTTON_2);
			strcpy(sonderbau.lage,"R");

			}
			break;
		case DLG_337_PUSHBUTTON_9: /* "OK" */
			{
			 int len[3];
			 int falsche_zahl=0;

			 xvt_vobj_get_title(edit_buhne[1],sonderbau.neig_links_vorne,9);
			 xvt_vobj_get_title(edit_buhne[2],sonderbau.hoehe_links,9);
			 xvt_vobj_get_title(edit_buhne[0],sonderbau.neig_links_rueck,9);


			 len[0]=is_zahl(sonderbau.hoehe_links);
			 len[1]=is_zahl(sonderbau.neig_links_rueck);
			 len[2]=is_zahl(sonderbau.neig_links_vorne);

			 if(len[0]>0)  //links
			 {
				for(int i=0;i<=2;i++)
					if (len[i]<=0)
						{
							char buf[200],buf2[200];//Dick 26.11.99
							xvt_res_get_str(STR_WERT_IN_FELD,buf,sizeof(buf));
							xvt_res_get_str(STR_EINGEBEN,buf2,sizeof(buf2));
							xvt_dm_post_note("%s %i %s",buf,i,buf2); //"Bitte Wert in Feld %i eingeben"
							xvt_vobj_set_title(edit_buhne[i],"\0");
							falsche_zahl=1;
						}
			 }

			 if (!falsche_zahl)
				  {
					list->SaveInfoline2(scr.datensatz, aktuelles_editfeld, &sonderbau);
					SaveProfilFile = TRUE;
					xvt_vobj_destroy(xdWindow);
				  }
			}
			break;
		case DLG_337_PUSHBUTTON_10: /* "Abbrechen" */
			{
			 char buf[200],buf2[200],buf3[200],buf4[200];
             xvt_res_get_str(STR_JA,buf,sizeof(buf));
             xvt_res_get_str(STR_NEIN,buf2,sizeof(buf2));
             xvt_res_get_str(STR_ABBRECHEN,buf3,sizeof(buf3));
             xvt_res_get_str(STR_SICHERE_DATENBLOCK,buf4,sizeof(buf4));
             if (sichere_datenblock)
                 switch (xvt_dm_post_ask(buf,buf2,buf3,"%s",buf4))
				//switch (xvt_dm_post_ask("Ja","Nein","Abbrechen","Daten wurden geändert !\nSpeichern vor Schließen\ndes Fensters ?"))
				 {
				  case RESP_DEFAULT:       //SICHERN
						 {
						  int len[6],fehler=0;

							len[0]=is_zahl(sonderbau.hoehe_links);
							len[1]=is_zahl(sonderbau.neig_links_rueck);
							len[2]=is_zahl(sonderbau.neig_links_vorne);

						  for(int i=0;i<=2;i++)
							 if (len[i]<=0)
							  {
                                //Dick 26.11.99
                                xvt_res_get_str(STR_WERT_IN_FELD,buf,sizeof(buf));
                                xvt_res_get_str(STR_EINGEBEN,buf2,sizeof(buf2));
                                xvt_dm_post_note("%s %i %s",buf,i,buf2);
								//xvt_dm_post_note("Bitte Wert in Feld %i eingeben",i);
								xvt_vobj_set_title(edit_buhne[i],"\0");
								fehler=1;
						  }
	 					else
							strcpy(sonderbau.lage,"L");

						  if (!fehler)
							{
//							 list->SaveInfoline2(scr.datensatz,&sonderbau);  //Zeile2 Infoblock sichern
							 list->SaveInfoline2(scr.datensatz, aktuelles_editfeld, &sonderbau);
							 SaveProfilFile = TRUE;
							 xvt_vobj_destroy(xdWindow);
							}
						 }
						  break;
				  case RESP_2:             // nicht sichere_datenblock
							xvt_vobj_destroy(xdWindow);
						  break;             //zurück
				  case RESP_3:break;
				 }
			 xvt_vobj_destroy(xdWindow);

			}
			break;
		default:
			break;
		}
		}
		break;
	case E_TIMER:
		/*
			Timer associated with window went off.
		*/
		{
		}
		break;
	case E_USER:
		/*
			Application initiated.
		*/
		{
		switch (xdEvent->v.user.id) {
		case -1:
		default:
			break;
		}
		}
		break;
	default:
		break;
	}
	return 0L;
}
