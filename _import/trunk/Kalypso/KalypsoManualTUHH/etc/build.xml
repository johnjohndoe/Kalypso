<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="kalypso-manual-tuhh" default="all" basedir="..">

	<!-- Main Document (ENTITIES) -->
	<!--
  <property name="doc.name" value="main_driver_ingbueros.xml"/>  
  <property name="doc.name" value="main_driver_sachsen.xml"/>  
  -->
	<property name="doc.name" value="Sachsen_Anhalt/main_driver_sachsen_anhalt.xml" />

	<!-- Source properties -->
	<property name="help.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="build.pdf.dir" value="${build.dir}/pdf" />
	<property name="build.html.dir" value="${build.dir}/html" />
	<property name="build.profiling.dir" value="${build.dir}/profiling" />
	<property name="build.tex.dir" value="${build.dir}/tex" />
	<property name="build.eclipse.dir" value="${build.dir}/eclipse" />
	<property name="build.fo.dir" value="${build.dir}/fo" />
	<property name="css.dir" value="${help.dir}/css" />
	<property name="image.dir" value="${help.dir}/img" />
	<property name="doc.profiled" value="${build.profiling.dir}/docbook-profiled.xml" />

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.pdf.dir}" />
		<mkdir dir="${build.html.dir}" />
		<mkdir dir="${build.profiling.dir}" />
		<mkdir dir="${build.tex.dir}" />
		<mkdir dir="${build.eclipse.dir}" />
		<mkdir dir="${build.fo.dir}" />
	</target>

	<target name="cleanup" description="Löscht alles unterhalb des ${build.dir}">
		<delete>
			<fileset dir="${build.dir}" includes="*/**" />
		</delete>
	</target>

	<target name="valid" description="Validiert das ${help.dir}/${doc.name}">
		<antcall target="xmlvalid">
			<param name="xmlvalid.xml" value="${help.dir}/${doc.name}" />
		</antcall>
	</target>

	<!-- MANUAL (html und pdf) -->
	<target name="html" depends="init,profiling" description="Erzeugt das Benutzerhandbuch - HTML-Version">
		<antcall target="xslproc">
			<param name="xslproc.out.dir" value="${build.html.dir}" />
			<param name="xslproc.out.name" value="manual.html" />
			<param name="xslproc.xsl" value="${help.dir}/manual-html.xsl" />
			<param name="xslproc.xml" value="${doc.profiled}" />
		</antcall>

		<copy todir="${build.html.dir}">
			<fileset dir="${css.dir}" includes="*.*" />
		</copy>

		<mkdir dir="${build.html.dir}/img" />
		<copy todir="${build.html.dir}/img">
			<fileset dir="${image.dir}" includes="**/*" />
		</copy>
	</target>

	<target name="eclipse-help" depends="init,profiling" description="Erzeugt das Benutzerhandbuch - Online-Help für Eclipse">

		<antcall target="xslproc">
			<param name="xslproc.out.dir" value="${build.eclipse.dir}" />
			<param name="xslproc.out.name" value="manual.html" />
			<param name="xslproc.xsl" value="${help.dir}/manual-eclipse.xsl" />
			<param name="xslproc.xml" value="${doc.profiled}" />
		</antcall>

		<copy todir="${build.eclipse.dir}">
			<fileset dir="${css.dir}" includes="*.*" />
		</copy>

		<mkdir dir="${build.eclipse.dir}/img" />
		<copy todir="${build.eclipse.dir}/img">
			<fileset dir="${image.dir}" includes="**/*" />
		</copy>

		<copy todir="." file="${build.eclipse.dir}/toc.xml" />
		<copy todir="." file="${build.eclipse.dir}/contexts.xml" />

		<zip destfile="./doc.zip" basedir="${build.eclipse.dir}" includes="**/*" excludes="*.xml" />
	</target>

	<target name="pdf" description="Erstellt das Handbuch im PDF Format" depends="init,profiling">
		<copy todir="${build.tex.dir}">
			<fileset dir="${help.dir}" casesensitive="no" includes="**/*.*" excludes="**/CVS/**" />
		</copy>

		<antcall target="pdfproc">
			<param name="pdfproc.out.dir" value="${build.pdf.dir}" />
			<param name="pdfproc.out.name" value="manual" />
			<param name="pdfproc.xsl" value="${help.dir}/manual-tex.xsl" />
			<param name="pdfproc.xml" value="${doc.profiled}" />
		</antcall>
	</target>

	<target name="pdf-fo" depends="init,profiling" description="Erzeugt das Benutzerhandbuch - PDF-Version mit FO">

		<antcall target="xslproc">
			<param name="xslproc.out.dir" value="${build.fo.dir}" />
			<param name="xslproc.out.name" value="manual.fo" />
			<param name="xslproc.xsl" value="${help.dir}/manual-fo.xsl" />
			<param name="xslproc.xml" value="${doc.profiled}" />
		</antcall>

		<antcall target="fop">
			<param name="fop.fo" value="${build.fo.dir}/manual.fo" />
			<param name="fop.pdf" value="${build.fo.dir}/manual.pdf" />
		</antcall>
	</target>

	<target name="pdfproc">
		<!-- Benötigte Parameter: 
  					'pdfproc.out.name'  Name der Ausgabedatei
  					'pdfproc.out.dir'  Ausgabeverzeichnis
  					'pdfproc.xsl		DocBook XSL
  					'pdfproc.xml'		DocBook XML
  					'tex.tmp.dir'		Temporäres Verzeichnis fürs texen
  	-->

		<antcall target="xslproc">
			<param name="xslproc.out.name" value="${pdfproc.out.name}.tex" />
			<param name="xslproc.out.dir" value="${build.tex.dir}" />
			<param name="xslproc.xsl" value="${pdfproc.xsl}" />
			<param name="xslproc.xml" value="${pdfproc.xml}" />
		</antcall>

		<exec executable="pdflatex.exe" dir="${build.tex.dir}">
			<arg value="${pdfproc.out.name}.tex" />
		</exec>

		<exec executable="makeindex.exe" dir="${build.tex.dir}">
			<arg value="${pdfproc.out.name}" />
		</exec>

		<exec executable="pdflatex.exe" dir="${build.tex.dir}">
			<arg value="${pdfproc.out.name}.tex" />
		</exec>

		<copy todir="${pdfproc.out.dir}" file="${build.tex.dir}/${pdfproc.out.name}.pdf">
		</copy>
	</target>

	<target name="xslproc">
		<!-- Benötigte Parameter: 
  					'xslproc.out.name'  Name der Ausgabedatei
  					'xslproc.out.dir'  Ausgabeverzeichnis
  					'xslproc.xsl
  					'xslproc.xml'
  	-->
		<!--Die Batchdatei xsltproc.bat muss verfügbar sein (Umgebungsvariable PATH zum Pfad besetzen, z.B. c:\bin) -->
		<exec executable="xsltproc.bat" failonerror="true">
			<arg line="-o ${xslproc.out.dir}/${xslproc.out.name} ${xslproc.xsl} ${xslproc.xml}" />
		</exec>
	</target>
	
	<target name="all" depends="html,pdf,eclipse-help" />

	<target name="xmlvalid">
		<!-- Benötigte Parameter: 'xmlvalid.xml'  -->
		<exec executable="xmllint.bat" failonerror="true">
			<arg line="--valid --postvalid ${xmlvalid.xml}" />
		</exec>
	</target>

	<target name="fop">
		<!-- Benötigte Parameter: 
    					'fop.fo'  Name der FO-Eingangsdatei
    					'fop.pdf' Name der PDF-Ausgangsdatei
    	-->

		<exec executable="fop.bat" failonerror="true">
			<arg line="-fo ${fop.fo} -pdf ${fop.pdf}" />
		</exec>
	</target>

	<target name="profiling" depends="init,valid">
		<!-- Benötigte Parameter: 
  					'build.profiling.dir'  Name der Ausgabedatei
  					'doc.name'				Name der Eingangsdatei
  					'help.dir'				Pfad der Eingangsdateien
	  	-->
		<antcall target="xslproc">
			<param name="xslproc.out.dir" value="${build.profiling.dir}" />
			<param name="xslproc.out.name" value="docbook-profiled.xml" />
			<param name="xslproc.xsl" value="${help.dir}/manual-profile.xsl" />
			<param name="xslproc.xml" value="${help.dir}/${doc.name}" />
		</antcall>
	</target>
</project>