<?xml version="1.0" encoding="UTF-8"?>
<!--  
	Provide schema to model a simulation models
	@author Patrice Congo
-->
<xs:schema	xmlns:gml="http://www.opengis.net/gml" 
			xmlns:xs="http://www.w3.org/2001/XMLSchema" 
			xmlns:wb="http://www.tu-harburg.de/wb/kalypso/schemata/1d2d"
			xmlns:xlink="http://www.w3.org/1999/xlink" 
			targetNamespace="http://www.tu-harburg.de/wb/kalypso/schemata/1d2d" 
			elementFormDefault="qualified" 
			attributeFormDefault="unqualified">
	<xs:import 
		namespace="http://www.opengis.net/gml" 
		schemaLocation="platform:/resource/KalypsoContributionsOGC31/src/org/kalypso/contribs/ogc31/schemata/gml/3.1.1/base/gml.xsd"/>
	<!-- ========================================================= -->
	
		
	<!-- ************** -->
	<xs:element 
		name="finiteElementCollection" 
		type="wb:FiniteElementCollectionPropertyType"/>
	<xs:complexType 
		name="FiniteElementCollectionPropertyType">
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:FiniteElementCollection"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element 
		name="FiniteElementCollection" 
		type="wb:FiniteElementCollectionType"/>
	<xs:complexType name="FiniteElementCollectionType">
		<xs:complexContent>
			<xs:extension base="gml:AbstractFeatureType">
				<xs:sequence>
					<xs:element ref="wb:finiteElement"/>
					<xs:element ref="wb:checkRule"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- +++ -->
	<!-- super type for fnite elements -->
	<xs:element 
		name="finiteElement" 
		type="wb:FiniteElementPropertyType"/>
	<xs:complexType name="FiniteElementPropertyType">
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:FiniteElement"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element 
		name="FiniteElement" 
		type="wb:AbstractFiniteElementType" 
		substitutionGroup="gml:_Geometry"/>
	<xs:complexType 
		name="AbstractFiniteElementType" 
		abstract="true">
		<xs:complexContent>
			<xs:extension base="gml:AbstractGeometryType"/>
		</xs:complexContent>
	</xs:complexType>
	<!-- ++++ -->
	<xs:element 
		name="vertex1" 
		type="gml:PointPropertyType"/>
		
	<xs:element 
		name="vertex2" 
		type="gml:PointPropertyType"/>
	
	<xs:element 
		name="vertex3" 
		type="gml:PointPropertyType"/>
	
	<xs:element 
		name="vertex4" 
		type="gml:PointPropertyType"/>
	
	<xs:element 
		name="midVertex12" 
		type="gml:PointPropertyType"/>

	<xs:element 
		name="midVertex23" 
		type="gml:PointPropertyType"/>

	<xs:element 
		name="midVertex31" 
		type="gml:PointPropertyType"/>

	<xs:element 
		name="midVertex34" 
		type="gml:PointPropertyType"/>
	
	<xs:element 
		name="midVertex41" 
		type="gml:PointPropertyType"/>
	
	<xs:element 
		name="Element1D" 
		type="wb:Element1DType" 
		substitutionGroup="wb:FiniteElement"/>
	<xs:complexType 
		name="Element1DType">
		<xs:complexContent>
			<xs:extension base="wb:AbstractFiniteElementType">
				<xs:sequence>
					<xs:element ref="wb:vertex1"/>
					<xs:element ref="wb:vertex2"/>
					<xs:element ref="wb:midVertex12" 
								minOccurs="0" 
								maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ++++ -->
	<xs:element 
		name="Element2D" 
		type="wb:Element2DType" 
		substitutionGroup="wb:FiniteElement"/>
	<xs:complexType 
		name="Element2DType">
		<xs:annotation>
			<xs:documentation>
				The 2D finite element type. A  2D element is either made of
				3 vertices and 3 mid-vertices or 4 vertices and 4 mid-vertices.
				Note that a mid-vertex determine the shape of the side and 
				must not be the actual middle of 2 edge vertices. 
				In case it is, the side is traight otherwise the shape is a
				quadratic kurve
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="wb:AbstractFiniteElementType">
				<xs:sequence>
					<xs:element ref="wb:vertex1"/>
					<xs:element ref="wb:vertex2"/>
					<xs:element ref="wb:vertex3"/>
					<xs:element ref="wb:midVertex12"/>
					<xs:element ref="wb:midVertex23"/>
					<xs:choice>
						<xs:sequence>
							<xs:element ref="wb:midVertex31"/>
						</xs:sequence>
						<xs:sequence>
							<xs:element ref="wb:vertex4"/>
							<xs:element ref="wb:midVertex34"/>
							<xs:element ref="wb:midVertex41"/>
						</xs:sequence>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ++++ -->
	<!-- rule super type -->
	<xs:element 
		name="checkRule" 
		type="wb:CheckRulePropertyType">
		<xs:annotation>
			<xs:documentation>
				Property element to hold a check rule for the model
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType 
		name="CheckRulePropertyType">
		<xs:annotation>
			<xs:documentation>
				Type for check rule property the property element.
				It basically holds a sequence of check rule elements
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:CheckRule"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element 
		name="CheckRule" 
		type="wb:AbstractCheckRuleType" 
		abstract="true" 
		substitutionGroup="gml:_GML">
		<xs:annotation>
			<xs:documentation>
				Substitution group head for all model check rules.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AbstractCheckRuleType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Base type for the check rules substitution group.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gml:AbstractGMLType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--  -->
	<xs:element name="TwoDSizeCheckRule" type="wb:TwoDSizeCheckRuleType" substitutionGroup="wb:CheckRule">
		<xs:annotation>
			<xs:documentation>
				Rule to specify a size constraint for 2d finite element.
				The constrain are specify by the maximal ratio for side-length
				or area
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TwoDSizeCheckRuleType">
		<xs:annotation>
			<xs:documentation>
				Type for the Rule to specify a size constraint for 2d finite element.
				The constrain are specify by the maximal ratio for side-length
				or area.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="wb:AbstractCheckRuleType">
				<xs:sequence>
					<xs:element name="maxLengthRatio" type="xs:double"/>
					<xs:element name="maxAreaRatio" type="xs:double"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ++++ -->
	<xs:element name="AngleCheckRule" type="wb:AngleCheckRuleType" substitutionGroup="wb:CheckRule">
		<xs:annotation>
			<xs:documentation>
				Element to specify an angle constraint. 
				This is done by specifying the allowable minimal angle value
				and optionaly a maximal value
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AngleCheckRuleType">
		<xs:annotation>
			<xs:documentation>
				Type for a check rule element to specify an angle constraint. 
				This is done by specifying the allowable minimal angle value
				and optionaly a maximal value.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="wb:AbstractCheckRuleType">
				<xs:sequence>
					<xs:element name="minAngle" type="xs:double"/>
					<xs:element name="maxAngle" type="xs:double" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- *************** -->
	<xs:element name="riverProfileNetworkProperty" type="wb:RiverProfileNetworkPropertyType"/>
	<xs:complexType name="RiverProfileNetworkPropertyType">
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:RiverProfileNetwork"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element name="RiverProfileNetwork" type="wb:RiverProfileNetworkType" substitutionGroup="gml:_Feature"/>
	<xs:complexType name="RiverProfileNetworkType">
		<xs:complexContent>
			<xs:extension base="gml:AbstractFeatureType">
				<xs:sequence>
					<xs:element ref="wb:profileProperty"/>
					<!-- xs:element ref="topology"/ -->
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="profileProperty" type="wb:ProfilePropertyType"/>
	<xs:complexType name="ProfilePropertyType">
		<xs:sequence>
			<xs:element ref="wb:RiverProfile"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element name="RiverProfile" type="wb:RiverProfileType" substitutionGroup="gml:_Geometry"/>
	<xs:complexType name="RiverProfileType">
		<xs:annotation>
			<xs:documentation>
				Base type for a river profile. 
				A river profile is abtracted as a geometry aggregate which 
				contains the actual profile as line string; a flow point 
				that specify where the water does flow and acts as a 
				connecting point between the profile. The abtraction also 
				model the network by introducing the next and previous 
				profile. The first element has only a next-connection; 
				the last element only a previous-connection and any other
				both connections.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gml:AbstractGeometricAggregateType">
				<xs:sequence>
					<xs:element ref="gml:lineStringProperty"/>
					<xs:element ref="wb:flowPointProperty"/>
					<xs:element ref="wb:nextProfile" minOccurs="0"/>
					<xs:element ref="wb:previousProfile" minOccurs="0"/>
					<!-- xs:choice>
						<xs:group ref="wb:FirstProfile"/>
						<xs:group ref="wb:LastProfile"/>
						<xs:group ref="wb:InterElement"/>						
					</xs:choice -->
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="LastProfile">
		<xs:sequence>
			<xs:element ref="wb:previousProfile"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="FirstProfile">
		<xs:sequence>
			<xs:element ref="wb:nextProfile"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="InterElement">
		<xs:sequence>
			<xs:element ref="wb:nextProfile"/>
			<xs:element ref="wb:previousProfile"/>
		</xs:sequence>
	</xs:group>
	<xs:element name="nextProfile" type="wb:ProfileConnectionPropertyType">
		<xs:annotation>
			<xs:documentation>
				property to hold the next following profile in the profile network
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="previousProfile" type="wb:ProfileConnectionPropertyType">
		<xs:annotation>
			<xs:documentation>
				property to hold the previous profile in the profile network
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProfileConnectionPropertyType">
		<xs:annotation>
			<xs:documentation>
				Base property type for previous and next profile properties.
				These 2 properties encodes the position of a profile in the 
				network.
				Note that in a real(with more than 1 element) a element,
				any element has at least a connection to another element.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:RiverProfile"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<!-- ++++ -->
	<xs:element name="flowPointProperty" type="wb:FlowPointPropertyType">
		<xs:annotation>
			<xs:documentation>
				A property that holds the property a river profile 
				flow point. Conceptionaly the water is flowing at this
				point and the point act consequently a the connection
				point between the network profiles.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="FlowPointPropertyType">
		<xs:sequence minOccurs="0">
			<xs:element ref="wb:FlowPoint"/>
		</xs:sequence>
		<xs:attributeGroup ref="gml:AssociationAttributeGroup"/>
	</xs:complexType>
	<xs:element name="FlowPoint" type="wb:FlowPointType"/>
	<xs:complexType name="FlowPointType">
		<xs:complexContent>
			<xs:extension base="gml:PointType"/>
		</xs:complexContent>
	</xs:complexType>
	
</xs:schema>
