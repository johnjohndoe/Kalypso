<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrelloTiU4Ba" href="/tmp/kde-avd/umbrelloTiU4Ba.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="13" name="Datentyp" />
   <UML:Stereotype visibility="public" xmi.id="25" name="Schnittstelle" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="12" name="int" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="14" name="char" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="15" name="boolean" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="16" name="float" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="17" name="double" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="18" name="byte" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="19" name="short" />
   <UML:DataType stereotype="13" visibility="public" xmi.id="20" name="string" />
   <UML:Class visibility="public" xmi.id="22" name="MapPanel" />
   <UML:Class visibility="public" xmi.id="23" name="Canvas" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="24" isAbstract="true" name="IModellEventProvider" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="26" isAbstract="true" name="ModellEventListener" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="27" isAbstract="true" name="IMapModell" />
   <UML:Class visibility="public" xmi.id="34" name="MapModell" />
   <UML:Class visibility="public" xmi.id="35" name="GisTemplateMapModell" />
   <UML:Class visibility="public" xmi.id="39" name="GisMapEditor" />
   <UML:Class visibility="public" xmi.id="40" name="AbstractEditorPart" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="41" isAbstract="true" name="IMapPanelProvider" />
   <UML:Class visibility="public" xmi.id="42" name="GisMapOutlinePage" />
   <UML:Class visibility="public" xmi.id="48" name="AbstractOutlineAction" />
   <UML:Class visibility="public" xmi.id="52" name="GisMapOutlineViewer" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="53" isAbstract="true" name="ICommandTarget" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="54" isAbstract="true" name="neue_schnittstelle" />
   <UML:Class visibility="public" xmi.id="55" name="AbstractCalcWizardPage" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="57" isAbstract="true" name="IKalypsoFeatureTheme" />
   <UML:Class visibility="public" xmi.id="60" name="JobExclusiveCommandTarget" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="69" isAbstract="true" name="IMapModellView" />
   <UML:Class visibility="public" xmi.id="72" name="WidgetManager" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="73" isAbstract="true" name="MouseListener" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="74" isAbstract="true" name="MouseMotionListener" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="75" isAbstract="true" name="IWidget" />
   <UML:Class visibility="public" xmi.id="82" name="XYWidgetDelegate" />
   <UML:Class visibility="public" xmi.id="83" name="AbstractWidgetActionDelegate" />
   <UML:Class visibility="public" xmi.id="84" name="AbstractGisEditorActionDelegate" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="87" isAbstract="true" name="IEditorActionDelegate" >
    <UML:Operation visibility="public" xmi.id="117" type="void" name="setActiveEditor" >
     <UML:Parameter visibility="public" xmi.id="118" value="" type="" name="IAction" />
     <UML:Parameter visibility="public" xmi.id="119" value="" type="" name="IEditorPart" />
    </UML:Operation>
   </UML:Interface>
   <UML:Interface stereotype="25" visibility="public" xmi.id="90" isAbstract="true" name="IAction" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="94" isAbstract="true" name="IWidgetWithOptions" />
   <UML:Class visibility="public" xmi.id="96" name="ActionOptionsView" />
   <UML:Class visibility="public" xmi.id="97" name="ViewPart" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="98" isAbstract="true" name="IWidgetChangeListener" />
   <UML:Interface stereotype="25" visibility="public" xmi.id="112" isAbstract="true" name="IActionDelegate" >
    <UML:Operation comment="den activen editor kann man sich von der workbench hohlen" visibility="public" xmi.id="114" type="void" name="run" >
     <UML:Parameter visibility="public" xmi.id="116" value="" type="" name="IAction" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="120" type="void" name="selectionChanged" >
     <UML:Parameter visibility="public" xmi.id="121" value="" type="" name="IAction" />
     <UML:Parameter visibility="public" xmi.id="122" value="" type="" name="ISelection" />
    </UML:Operation>
   </UML:Interface>
   <UML:Class visibility="public" xmi.id="123" name="AbstractThemeDelegate" />
   <UML:Generalization child="22" visibility="public" xmi.id="30" parent="23" />
   <UML:Association visibility="public" xmi.id="31" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="23" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="27" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="27" visibility="public" xmi.id="32" parent="24" />
   <UML:Generalization child="27" visibility="public" xmi.id="33" parent="26" />
   <UML:Generalization child="34" visibility="public" xmi.id="36" parent="27" />
   <UML:Generalization child="35" visibility="public" xmi.id="37" parent="27" />
   <UML:Association visibility="public" xmi.id="38" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="22" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="27" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="43" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="39" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="22" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="39" visibility="public" xmi.id="44" parent="40" />
   <UML:Generalization child="39" visibility="public" xmi.id="45" parent="41" />
   <UML:Association visibility="public" xmi.id="46" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="39" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="35" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="47" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="39" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="42" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="49" name="o..n" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="42" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="48" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="58" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="48" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="52" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="59" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="42" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="52" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="60" visibility="public" xmi.id="61" parent="53" />
   <UML:Generalization child="55" visibility="public" xmi.id="62" parent="53" />
   <UML:Generalization child="57" visibility="public" xmi.id="63" parent="53" />
   <UML:Generalization child="40" visibility="public" xmi.id="64" parent="53" />
   <UML:Generalization child="22" visibility="public" xmi.id="68" parent="24" />
   <UML:Generalization child="69" visibility="public" xmi.id="70" parent="26" />
   <UML:Generalization child="22" visibility="public" xmi.id="71" parent="69" />
   <UML:Generalization child="72" visibility="public" xmi.id="76" parent="73" />
   <UML:Generalization child="72" visibility="public" xmi.id="77" parent="74" />
   <UML:Association visibility="public" xmi.id="78" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="72" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="75" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="79" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="72" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="22" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="80" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="22" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="72" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="81" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="72" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="53" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="82" visibility="public" xmi.id="85" parent="83" />
   <UML:Generalization child="83" visibility="public" xmi.id="86" parent="84" />
   <UML:Generalization child="84" visibility="public" xmi.id="88" parent="87" />
   <UML:Generalization child="84" visibility="public" xmi.id="89" parent="26" />
   <UML:Association visibility="public" xmi.id="91" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="84" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="90" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="92" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="84" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="40" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="93" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="83" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="75" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="82" visibility="public" xmi.id="95" parent="94" />
   <UML:Generalization child="96" visibility="public" xmi.id="99" parent="97" />
   <UML:Generalization child="96" visibility="public" xmi.id="100" parent="98" />
   <UML:Association visibility="public" xmi.id="101" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="96" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="75" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="106" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="35" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="27" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="111" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="35" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="34" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="87" visibility="public" xmi.id="113" parent="112" />
   <UML:Generalization child="123" visibility="public" xmi.id="124" parent="87" />
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="21" documentation="" uniqueid="124" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="781" snapy="10" showatts="1" xmi.id="11" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Nimbus Sans L,12,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="654" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="1" usefillcolor="1" snapx="25" canvaswidth="1903" snapy="25" showatts="1" xmi.id="21" documentation="" type="402" showops="1" showpackage="0" name="Kalypso" localid="30000" showstereotype="0" showscope="1" snapcsgrid="1" font="Nimbus Sans L,12,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1324" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="75" showattsigs="601" usesdiagramusefillcolour="1" x="1138" linecolour="none" y="1000" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="22" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="75" showattsigs="601" usesdiagramusefillcolour="1" x="1088" linecolour="none" y="850" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="23" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="150" usesdiagramusefillcolour="1" x="1200" linecolour="none" y="850" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="24" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="150" usesdiagramusefillcolour="1" x="1250" linecolour="none" y="650" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="26" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="1300" linecolour="none" y="1100" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="27" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="75" showattsigs="601" usesdiagramusefillcolour="1" x="1213" linecolour="none" y="1250" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="34" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="150" showattsigs="601" usesdiagramusefillcolour="1" x="1325" linecolour="none" y="1250" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="35" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="100" showattsigs="601" usesdiagramusefillcolour="1" x="1400" linecolour="none" y="975" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="39" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="601" usesdiagramusefillcolour="1" x="1363" linecolour="none" y="550" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="40" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="125" usesdiagramusefillcolour="1" x="1463" linecolour="none" y="750" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="41" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="601" usesdiagramusefillcolour="1" x="1663" linecolour="none" y="1000" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="42" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="150" showattsigs="601" usesdiagramusefillcolour="0" x="1725" linecolour="#ff0000" y="1150" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="48" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="150" showattsigs="601" usesdiagramusefillcolour="1" x="1550" linecolour="none" y="1150" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="52" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="125" usesdiagramusefillcolour="1" x="1113" linecolour="none" y="125" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="53" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,50,1,1,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="175" showattsigs="601" usesdiagramusefillcolour="1" x="913" linecolour="none" y="275" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="55" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="150" usesdiagramusefillcolour="1" x="1150" linecolour="none" y="375" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="57" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="200" showattsigs="601" usesdiagramusefillcolour="1" x="625" linecolour="none" y="175" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="60" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="125" usesdiagramusefillcolour="1" x="1113" linecolour="none" y="775" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="69" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="100" showattsigs="601" usesdiagramusefillcolour="1" x="925" linecolour="none" y="1000" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="72" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="1000" linecolour="none" y="925" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="73" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="150" usesdiagramusefillcolour="1" x="800" linecolour="none" y="875" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="74" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="775" linecolour="none" y="1000" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="75" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="601" usesdiagramusefillcolour="1" x="488" linecolour="none" y="1100" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="82" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="200" showattsigs="601" usesdiagramusefillcolour="1" x="550" linecolour="none" y="1000" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="83" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="225" showattsigs="601" usesdiagramusefillcolour="1" x="738" linecolour="none" y="625" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="84" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="0" width="300" usesdiagramusefillcolour="0" x="600" linecolour="#ff0000" y="513" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="75" usefillcolor="1" isinstance="0" xmi.id="87" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="850" linecolour="none" y="775" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="90" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="0" width="125" usesdiagramusefillcolour="0" x="413" linecolour="#ff0000" y="1000" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="50" usefillcolor="1" isinstance="0" xmi.id="94" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="601" usesdiagramusefillcolour="1" x="788" linecolour="none" y="1200" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="96" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="75" showattsigs="601" usesdiagramusefillcolour="1" x="863" linecolour="none" y="1125" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="97" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="150" usesdiagramusefillcolour="1" x="1075" linecolour="none" y="1125" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="98" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="0" width="300" usesdiagramusefillcolour="0" x="600" linecolour="#ff0000" y="388" drawascircle="0" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="75" usefillcolor="1" isinstance="0" xmi.id="112" showoperations="1" showpackage="0" showscope="1" font="Nimbus Sans L,12,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="150" showattsigs="601" usesdiagramusefillcolour="1" x="550" linecolour="none" y="625" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="123" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Nimbus Sans L,12,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="4" indexa="1" totalcountb="2" indexb="1" widgetbid="23" widgetaid="22" xmi.id="30" >
      <linepath>
       <startpoint startx="1150" starty="1000" />
       <endpoint endx="1125" endy="900" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="2" widgetbid="24" widgetaid="27" xmi.id="32" >
      <linepath>
       <startpoint startx="1350" starty="1100" />
       <endpoint endx="1300" endy="900" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="3" indexb="2" widgetbid="26" widgetaid="27" xmi.id="33" >
      <linepath>
       <startpoint startx="1375" starty="1100" />
       <endpoint endx="1350" endy="700" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="27" widgetaid="34" xmi.id="36" >
      <linepath>
       <startpoint startx="1250" starty="1250" />
       <endpoint endx="1325" endy="1150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="27" widgetaid="35" xmi.id="37" >
      <linepath>
       <startpoint startx="1375" starty="1250" />
       <endpoint endx="1375" endy="1150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="4" indexb="1" widgetbid="27" widgetaid="22" xmi.id="38" >
      <linepath>
       <startpoint startx="1213" starty="1025" />
       <endpoint endx="1325" endy="1100" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="22" widgetaid="39" xmi.id="43" >
      <linepath>
       <startpoint startx="1400" starty="1000" />
       <endpoint endx="1213" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="40" widgetaid="39" xmi.id="44" >
      <linepath>
       <startpoint startx="1425" starty="975" />
       <endpoint endx="1425" endy="600" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="41" widgetaid="39" xmi.id="45" >
      <linepath>
       <startpoint startx="1475" starty="975" />
       <endpoint endx="1525" endy="800" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="35" widgetaid="39" xmi.id="46" >
      <linepath>
       <startpoint startx="1450" starty="1025" />
       <endpoint endx="1425" endy="1250" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="42" widgetaid="39" xmi.id="47" >
      <linepath>
       <startpoint startx="1500" starty="1000" />
       <endpoint endx="1663" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="48" widgetaid="42" xmi.id="49" >
      <linepath>
       <startpoint startx="1750" starty="1050" />
       <endpoint endx="1800" endy="1150" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="1775" linecolour="none" y="1113" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="25" usefillcolor="1" pretext="" isinstance="0" xmi.id="109" text="o..n" font="Nimbus Sans L,12,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="52" widgetaid="42" xmi.id="59" >
      <linepath>
       <startpoint startx="1700" starty="1050" />
       <endpoint endx="1625" endy="1150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="53" widgetaid="60" xmi.id="61" >
      <linepath>
       <startpoint startx="825" starty="200" />
       <endpoint endx="1113" endy="150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="53" widgetaid="55" xmi.id="62" >
      <linepath>
       <startpoint startx="1000" starty="275" />
       <endpoint endx="1150" endy="175" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" widgetbid="53" widgetaid="57" xmi.id="63" >
      <linepath>
       <startpoint startx="1225" starty="375" />
       <endpoint endx="1200" endy="175" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="53" widgetaid="40" xmi.id="64" >
      <linepath>
       <startpoint startx="1425" starty="550" />
       <endpoint endx="1225" endy="175" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="3" indexb="1" widgetbid="24" widgetaid="22" xmi.id="68" >
      <linepath>
       <startpoint startx="1200" starty="1000" />
       <endpoint endx="1250" endy="900" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="26" widgetaid="69" xmi.id="70" >
      <linepath>
       <startpoint startx="1175" starty="775" />
       <endpoint endx="1300" endy="700" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" totalcountb="2" indexb="1" widgetbid="69" widgetaid="22" xmi.id="71" >
      <linepath>
       <startpoint startx="1175" starty="1000" />
       <endpoint endx="1175" endy="825" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="2" indexb="1" widgetbid="73" widgetaid="72" xmi.id="76" >
      <linepath>
       <startpoint startx="1000" starty="1000" />
       <endpoint endx="1050" endy="975" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="1" totalcountb="2" indexb="1" widgetbid="74" widgetaid="72" xmi.id="77" >
      <linepath>
       <startpoint startx="950" starty="1000" />
       <endpoint endx="875" endy="925" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="75" widgetaid="72" xmi.id="78" >
      <linepath>
       <startpoint startx="925" starty="1025" />
       <endpoint endx="875" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="22" widgetaid="72" xmi.id="79" >
      <linepath>
       <startpoint startx="1025" starty="1025" />
       <endpoint endx="1138" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="72" widgetaid="22" xmi.id="80" >
      <linepath>
       <startpoint startx="1138" starty="1025" />
       <endpoint endx="1025" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" totalcountb="5" indexb="2" widgetbid="53" widgetaid="72" xmi.id="81" >
      <linepath>
       <startpoint startx="975" starty="1000" />
       <endpoint endx="1175" endy="175" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="83" widgetaid="82" xmi.id="85" >
      <linepath>
       <startpoint startx="575" starty="1100" />
       <endpoint endx="650" endy="1050" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="84" widgetaid="83" xmi.id="86" >
      <linepath>
       <startpoint startx="650" starty="1000" />
       <endpoint endx="825" endy="675" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="87" widgetaid="84" xmi.id="88" >
      <linepath>
       <startpoint startx="850" starty="625" />
       <endpoint endx="800" endy="588" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="26" widgetaid="84" xmi.id="89" >
      <linepath>
       <startpoint startx="963" starty="650" />
       <endpoint endx="1250" endy="675" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="90" widgetaid="84" xmi.id="91" >
      <linepath>
       <startpoint startx="900" starty="675" />
       <endpoint endx="900" endy="775" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="40" widgetaid="84" xmi.id="92" >
      <linepath>
       <startpoint startx="963" starty="650" />
       <endpoint endx="1363" endy="575" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="75" widgetaid="83" xmi.id="93" >
      <linepath>
       <startpoint startx="750" starty="1025" />
       <endpoint endx="775" endy="1025" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="94" widgetaid="82" xmi.id="95" >
      <linepath>
       <startpoint startx="525" starty="1100" />
       <endpoint endx="475" endy="1050" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="97" widgetaid="96" xmi.id="99" >
      <linepath>
       <startpoint startx="875" starty="1200" />
       <endpoint endx="900" endy="1175" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="98" widgetaid="96" xmi.id="100" >
      <linepath>
       <startpoint startx="913" starty="1225" />
       <endpoint endx="1075" endy="1150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="75" widgetaid="96" xmi.id="101" >
      <linepath>
       <startpoint startx="825" starty="1200" />
       <endpoint endx="825" endy="1050" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="34" widgetaid="35" xmi.id="111" >
      <linepath>
       <startpoint startx="1325" starty="1275" />
       <endpoint endx="1288" endy="1275" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="112" widgetaid="87" xmi.id="113" >
      <linepath>
       <startpoint startx="750" starty="513" />
       <endpoint endx="750" endy="463" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="87" widgetaid="123" xmi.id="124" >
      <linepath>
       <startpoint startx="625" starty="625" />
       <endpoint endx="700" endy="588" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Ansichten" >
    <listitem open="1" type="801" id="-1" label="Logische Ansicht" >
     <listitem open="0" type="807" id="21" label="Kalypso" />
     <listitem open="0" type="807" id="11" label="Klassendiagramm" />
     <listitem open="1" type="813" id="55" />
     <listitem open="1" type="813" id="40" />
     <listitem open="1" type="813" id="84" />
     <listitem open="1" type="813" id="48" />
     <listitem open="1" type="813" id="123" />
     <listitem open="1" type="813" id="83" />
     <listitem open="1" type="813" id="96" />
     <listitem open="1" type="813" id="23" />
     <listitem open="1" type="813" id="39" />
     <listitem open="1" type="813" id="42" />
     <listitem open="1" type="813" id="52" />
     <listitem open="1" type="813" id="35" />
     <listitem open="1" type="813" id="60" />
     <listitem open="1" type="813" id="34" />
     <listitem open="1" type="813" id="22" />
     <listitem open="1" type="813" id="97" />
     <listitem open="1" type="813" id="72" />
     <listitem open="1" type="813" id="82" />
     <listitem open="1" type="817" id="90" />
     <listitem open="1" type="817" id="112" >
      <listitem open="0" type="815" id="114" />
      <listitem open="0" type="815" id="120" />
     </listitem>
     <listitem open="1" type="817" id="53" />
     <listitem open="1" type="817" id="87" >
      <listitem open="0" type="815" id="117" />
     </listitem>
     <listitem open="1" type="817" id="57" />
     <listitem open="1" type="817" id="27" />
     <listitem open="1" type="817" id="69" />
     <listitem open="1" type="817" id="41" />
     <listitem open="1" type="817" id="24" />
     <listitem open="1" type="817" id="75" />
     <listitem open="1" type="817" id="98" />
     <listitem open="1" type="817" id="94" />
     <listitem open="1" type="817" id="26" />
     <listitem open="1" type="817" id="73" />
     <listitem open="1" type="817" id="74" />
     <listitem open="1" type="817" id="54" />
     <listitem open="0" type="830" id="-1" label="Datentypen" >
      <listitem open="1" type="829" id="15" />
      <listitem open="1" type="829" id="18" />
      <listitem open="1" type="829" id="14" />
      <listitem open="1" type="829" id="17" />
      <listitem open="1" type="829" id="16" />
      <listitem open="1" type="829" id="12" />
      <listitem open="1" type="829" id="19" />
      <listitem open="1" type="829" id="20" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Anwendungsfallansicht" />
    <listitem open="1" type="821" id="-1" label="Komponentenansicht" />
    <listitem open="1" type="827" id="-1" label="Verteilungsansicht" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Java" >
    <classifiercodedocument writeOutCode="true" package="" id="22" parent_class="22" fileExt=".java" fileName="MapPanel" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Canvas;&amp;#010;import IMapModell;&amp;#010;import GisMapEditor;&amp;#010;import IModellEventProvider;&amp;#010;import IMapModellView;&amp;#010;import WidgetManager;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="22" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class MapPanel&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public MapPanel ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			MapPanel.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="23" parent_class="23" fileExt=".java" fileName="Canvas" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="23" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class Canvas&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Canvas ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Canvas.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="24" parent_class="24" fileExt=".java" fileName="IModellEventProvider" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="24" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IModellEventProvider&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IModellEventProvider ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IModellEventProvider.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="26" parent_class="26" fileExt=".java" fileName="ModellEventListener" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="26" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface ModellEventListener&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ModellEventListener ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ModellEventListener.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="27" parent_class="27" fileExt=".java" fileName="IMapModell" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IModellEventProvider;&amp;#010;import ModellEventListener;&amp;#010;import MapPanel;&amp;#010;import GisTemplateMapModell;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="27" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IMapModell&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IMapModell ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IMapModell.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="34" parent_class="34" fileExt=".java" fileName="MapModell" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IMapModell;&amp;#010;import GisTemplateMapModell;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="34" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class MapModell&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="111" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public GisTemplateMapModell  = new GisTemplateMapModell ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public MapModell ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type GisTemplateMapModell to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type GisTemplateMapModell from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			MapModell.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:58&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="111" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public GisTemplateMapModell  = new GisTemplateMapModell ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type GisTemplateMapModell to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type GisTemplateMapModell from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="35" parent_class="35" fileExt=".java" fileName="GisTemplateMapModell" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IMapModell;&amp;#010;import GisMapEditor;&amp;#010;import MapModell;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="35" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class GisTemplateMapModell&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public GisTemplateMapModell ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			GisTemplateMapModell.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:58&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="111" field_type="16" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public MapModell  = new MapModell ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type MapModell to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type MapModell from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="39" parent_class="39" fileExt=".java" fileName="GisMapEditor" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import MapPanel;&amp;#010;import AbstractEditorPart;&amp;#010;import IMapPanelProvider;&amp;#010;import GisTemplateMapModell;&amp;#010;import GisMapOutlinePage;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="39" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class GisMapEditor&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public GisMapEditor ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			GisMapEditor.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="40" parent_class="40" fileExt=".java" fileName="AbstractEditorPart" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ICommandTarget;&amp;#010;import AbstractGisEditorActionDelegate;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="40" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractEditorPart&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractEditorPart ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractEditorPart.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="41" parent_class="41" fileExt=".java" fileName="IMapPanelProvider" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="41" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IMapPanelProvider&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IMapPanelProvider ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IMapPanelProvider.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="42" parent_class="42" fileExt=".java" fileName="GisMapOutlinePage" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import GisMapEditor;&amp;#010;import AbstractOutlineAction;&amp;#010;import GisMapOutlineViewer;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="42" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class GisMapOutlinePage&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public GisMapOutlinePage ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			GisMapOutlinePage.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="48" parent_class="48" fileExt=".java" fileName="AbstractOutlineAction" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import GisMapOutlinePage;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="48" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractOutlineAction&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractOutlineAction ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractOutlineAction.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="52" parent_class="52" fileExt=".java" fileName="GisMapOutlineViewer" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import GisMapOutlinePage;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="52" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class GisMapOutlineViewer&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public GisMapOutlineViewer ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			GisMapOutlineViewer.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="53" parent_class="53" fileExt=".java" fileName="ICommandTarget" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import WidgetManager;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="53" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface ICommandTarget&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ICommandTarget ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ICommandTarget.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:48:11&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="54" parent_class="54" fileExt=".java" fileName="neue_schnittstelle" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="54" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface Neue_schnittstelle&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Neue_schnittstelle ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			neue_schnittstelle.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="55" parent_class="55" fileExt=".java" fileName="AbstractCalcWizardPage" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ICommandTarget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="55" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractCalcWizardPage&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractCalcWizardPage ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractCalcWizardPage.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:48:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="57" parent_class="57" fileExt=".java" fileName="IKalypsoFeatureTheme" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ICommandTarget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="57" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IKalypsoFeatureTheme&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IKalypsoFeatureTheme ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IKalypsoFeatureTheme.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:48:23&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="60" parent_class="60" fileExt=".java" fileName="JobExclusiveCommandTarget" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ICommandTarget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="60" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class JobExclusiveCommandTarget&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JobExclusiveCommandTarget ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JobExclusiveCommandTarget.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:48:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="69" parent_class="69" fileExt=".java" fileName="IMapModellView" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ModellEventListener;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="69" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IMapModellView&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IMapModellView ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IMapModellView.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="72" parent_class="72" fileExt=".java" fileName="WidgetManager" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import MouseListener;&amp;#010;import MouseMotionListener;&amp;#010;import IWidget;&amp;#010;import MapPanel;&amp;#010;import ICommandTarget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="72" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class WidgetManager&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public WidgetManager ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			WidgetManager.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="73" parent_class="73" fileExt=".java" fileName="MouseListener" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="73" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface MouseListener&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public MouseListener ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			MouseListener.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="74" parent_class="74" fileExt=".java" fileName="MouseMotionListener" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="74" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface MouseMotionListener&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public MouseMotionListener ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			MouseMotionListener.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="75" parent_class="75" fileExt=".java" fileName="IWidget" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import WidgetManager;&amp;#010;import AbstractWidgetActionDelegate;&amp;#010;import ActionOptionsView;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="75" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IWidget&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IWidget ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IWidget.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="82" parent_class="82" fileExt=".java" fileName="XYWidgetDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import AbstractWidgetActionDelegate;&amp;#010;import IWidgetWithOptions;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="82" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class XYWidgetDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public XYWidgetDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			XYWidgetDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="83" parent_class="83" fileExt=".java" fileName="AbstractWidgetActionDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import AbstractGisEditorActionDelegate;&amp;#010;import IWidget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="83" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractWidgetActionDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractWidgetActionDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractWidgetActionDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="84" parent_class="84" fileExt=".java" fileName="AbstractGisEditorActionDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IEditorActionDelegate;&amp;#010;import ModellEventListener;&amp;#010;import IAction;&amp;#010;import AbstractEditorPart;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="84" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractGisEditorActionDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractGisEditorActionDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractGisEditorActionDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="87" parent_class="87" fileExt=".java" fileName="IEditorActionDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IActionDelegate;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="87" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IEditorActionDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IEditorActionDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks>
            <codeoperation parent_id="117" tag="operation_117" canDelete="false" indentLevel="1" role_id="-1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param IAction &amp;#010;@param IEditorPart &amp;#010;@return void  " />
             </header>
            </codeoperation>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IEditorActionDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 23:21:34&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="113" field_type="1095259649" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public IActionDelegate ;" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type IActionDelegate to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type IActionDelegate from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="124" field_type="6619204" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public AbstractThemeDelegate  = new AbstractThemeDelegate ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type AbstractThemeDelegate to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type AbstractThemeDelegate from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="90" parent_class="90" fileExt=".java" fileName="IAction" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import AbstractGisEditorActionDelegate;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="90" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IAction&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IAction ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IAction.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="94" parent_class="94" fileExt=".java" fileName="IWidgetWithOptions" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="94" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IWidgetWithOptions&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IWidgetWithOptions ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IWidgetWithOptions.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="96" parent_class="96" fileExt=".java" fileName="ActionOptionsView" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ViewPart;&amp;#010;import IWidgetChangeListener;&amp;#010;import IWidget;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="96" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class ActionOptionsView&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ActionOptionsView ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ActionOptionsView.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 23:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="97" parent_class="97" fileExt=".java" fileName="ViewPart" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="97" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class ViewPart&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ViewPart ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ViewPart.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 23:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="98" parent_class="98" fileExt=".java" fileName="IWidgetChangeListener" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="98" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IWidgetChangeListener&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IWidgetChangeListener ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IWidgetChangeListener.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 22:39:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="ANTDOC" fileExt=".xml" fileName="build" >
     <textblocks>
      <codeblockwithcomments tag="xmlDecl" text="&lt;?xml version=&quot;1.0&quot;?>" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <xmlelementblock nodeName="project" tag="projectDecl" canDelete="false" >
       <header>
        <codecomment tag="" text="Java ANT build document" />
       </header>
       <textblocks/>
      </xmlelementblock>
     </textblocks>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="112" parent_class="112" fileExt=".java" fileName="IActionDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="112" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Interface IActionDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IActionDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks>
            <codeoperation parent_id="114" tag="operation_114" canDelete="false" indentLevel="1" role_id="-1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="den activen editor kann man sich von der workbench hohlen" />
             </header>
            </codeoperation>
            <codeoperation parent_id="120" tag="operation_120" canDelete="false" indentLevel="1" role_id="-1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param IAction &amp;#010;@param ISelection &amp;#010;@return void  " />
             </header>
            </codeoperation>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IActionDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 23:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="113" field_type="6881382" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public IEditorActionDelegate ;" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type IEditorActionDelegate to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type IEditorActionDelegate from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="113" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="113" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="123" parent_class="123" fileExt=".java" fileName="AbstractThemeDelegate" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IEditorActionDelegate;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="123" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <javacodedocumentation tag="" text="Class AbstractThemeDelegate&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractThemeDelegate ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractThemeDelegate.java - Copyright avd&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fr Apr 15 2005 at 23:21:32&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="124" field_type="6619252" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public IEditorActionDelegate ;" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type IEditorActionDelegate to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type IEditorActionDelegate from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="124" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="124" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
