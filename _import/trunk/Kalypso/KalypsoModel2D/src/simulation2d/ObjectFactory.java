//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.09.14 at 10:26:16 CEST 
//


package simulation2d;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the simulation2d package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends simulation2d.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(23, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static simulation2d.impl.runtime.GrammarInfo grammarInfo = new simulation2d.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (simulation2d.ObjectFactory.class));
    public final static java.lang.Class version = (simulation2d.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((simulation2d.CoordType.class), "simulation2d.impl.CoordTypeImpl");
        defaultImplementations.put((simulation2d.FpParams.VaType.class), "simulation2d.impl.FpParamsImpl.VaTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2D.class), "simulation2d.impl.Simulation2DImpl");
        defaultImplementations.put((simulation2d.FpParams.VoType.class), "simulation2d.impl.FpParamsImpl.VoTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.TimeType.class), "simulation2d.impl.Simulation2DTypeImpl.TimeTypeImpl");
        defaultImplementations.put((simulation2d.FpParams.GoType.class), "simulation2d.impl.FpParamsImpl.GoTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.ArType.class), "simulation2d.impl.Simulation2DTypeImpl.ArTypeImpl");
        defaultImplementations.put((simulation2d.FpParams.GaType.class), "simulation2d.impl.FpParamsImpl.GaTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.FeType.class), "simulation2d.impl.Simulation2DTypeImpl.FeTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.RkType.class), "simulation2d.impl.Simulation2DTypeImpl.RkTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.CommentType.class), "simulation2d.impl.Simulation2DTypeImpl.CommentTypeImpl");
        defaultImplementations.put((simulation2d.FpParams.FpType.class), "simulation2d.impl.FpParamsImpl.FpTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.RasterFileType.class), "simulation2d.impl.Simulation2DTypeImpl.RasterFileTypeImpl");
        defaultImplementations.put((simulation2d.FpParams.class), "simulation2d.impl.FpParamsImpl");
        defaultImplementations.put((simulation2d.FpParams.ZuType.class), "simulation2d.impl.FpParamsImpl.ZuTypeImpl");
        defaultImplementations.put((simulation2d.Simulation2DType.class), "simulation2d.impl.Simulation2DTypeImpl");
        rootTagMap.put(new javax.xml.namespace.QName("http://elbe.wb.tu-harburg.de", "simulation2d"), (simulation2d.Simulation2D.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: simulation2d
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of CoordType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.CoordType createCoordType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.CoordTypeImpl();
    }

    /**
     * Create an instance of FpParamsVaType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.VaType createFpParamsVaType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.VaTypeImpl();
    }

    /**
     * Create an instance of Simulation2D
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2D createSimulation2D()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DImpl();
    }

    /**
     * Create an instance of FpParamsVoType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.VoType createFpParamsVoType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.VoTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeTimeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.TimeType createSimulation2DTypeTimeType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.TimeTypeImpl();
    }

    /**
     * Create an instance of FpParamsGoType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.GoType createFpParamsGoType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.GoTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeArType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.ArType createSimulation2DTypeArType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.ArTypeImpl();
    }

    /**
     * Create an instance of FpParamsGaType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.GaType createFpParamsGaType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.GaTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeFeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.FeType createSimulation2DTypeFeType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.FeTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeRkType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.RkType createSimulation2DTypeRkType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.RkTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeCommentType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.CommentType createSimulation2DTypeCommentType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.CommentTypeImpl();
    }

    /**
     * Create an instance of FpParamsFpType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.FpType createFpParamsFpType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.FpTypeImpl();
    }

    /**
     * Create an instance of Simulation2DTypeRasterFileType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType.RasterFileType createSimulation2DTypeRasterFileType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl.RasterFileTypeImpl();
    }

    /**
     * Create an instance of FpParams
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams createFpParams()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl();
    }

    /**
     * Create an instance of FpParamsZuType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.FpParams.ZuType createFpParamsZuType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.FpParamsImpl.ZuTypeImpl();
    }

    /**
     * Create an instance of Simulation2DType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public simulation2d.Simulation2DType createSimulation2DType()
        throws javax.xml.bind.JAXBException
    {
        return new simulation2d.impl.Simulation2DTypeImpl();
    }

}
