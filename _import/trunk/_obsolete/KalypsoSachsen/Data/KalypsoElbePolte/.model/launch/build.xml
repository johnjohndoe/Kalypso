<project default="fake">

	<!-- Zeitschritt der Berechnung: 3h-->
		<property name="interval.field" value="HOUR_OF_DAY"/>
		<property name="interval.amount" value="3"/>
	
    <!-- define the requests -->
	<property name="requestQ"
		value="&lt;request xmlns=&quot;request.zml.kalypso.org&quot;&gt;&lt;axes&gt;date,Q&lt;/axes&gt;&lt;statusAxes&gt;Q&lt;/statusAxes&gt;&lt;/request&gt;" />
	<property name="requestW"
		value="&lt;request xmlns=&quot;request.zml.kalypso.org&quot;&gt;&lt;axes&gt;date,W&lt;/axes&gt;&lt;statusAxes&gt;W&lt;/statusAxes&gt;&lt;/request&gt;" />
	
	<!-- Vordefinierte Filter -->
    <!-- Q: interpolation-filter -->
	<property name="filterQ"
		value="${requestQ}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;true&quot; /&gt;&lt;/filter&gt;" />
	<property name="filterW"
		value="${requestW}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;true&quot; /&gt;&lt;/filter&gt;" />
	
    <property name="filterQOhneFortsetzung"
		value="${requestQ}&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;2&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;false&quot; xmlns=&quot;filters.zml.kalypso.org&quot; fillLastWithValid=&quot;false&quot; /&gt;&lt;/filter&gt;" />

 	
	<!-- Ablage: mit Rundung auf +/- 5cm -->
	<property name="filterCommitPrognoseWDown" 
		value="&lt;filter&gt;&lt;roundFilter factor=&quot;5&quot; mode=&quot;ROUND_DOWN&quot; axisType=&quot;W&quot; xmlns=&quot;filters.zml.kalypso.org&quot;/&gt;&lt;/filter&gt;"/>
	<property name="filterCommitPrognoseWUp" 
		value="&lt;filter&gt;&lt;roundFilter factor=&quot;5&quot; mode=&quot;ROUND_UP&quot; axisType=&quot;W&quot; xmlns=&quot;filters.zml.kalypso.org&quot;/&gt;&lt;/filter&gt;"/>

	<!-- Ablage Q bzw. W normal , ohne Rundung -->
	<property name="filterCommitPrognose"
			value="&lt;filter&gt;&lt;interpolationFilter amount=&quot;${interval.amount}&quot; calendarField=&quot;${interval.field}&quot; defaultStatus=&quot;0&quot; defaultValue=&quot;0.0&quot; forceFill=&quot;true&quot; xmlns=&quot;filters.zml.kalypso.org&quot;  /&gt;&lt;/filter&gt;" />
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: fake                      nur damit das Projekt nicht schreit
         - - - - - - - - - - - - - - - - - -->
	<target name="fake" />

	<!-- 
		 ================================= 
          target: create			Rechenvariante erzeugen
         ================================= 
    -->
	<target name="create" description="Erzeugung der Rechenvariante">
		<echo message="Rechenvariante anlegen: ${calc.dir}" />

		<copy file="${project.dir}/modell.gml" tofile="${calc.dir}/calcCase.gml"/>
		<copy file="${project.dir}/.templates/.calculation.template" tofile="${calc.dir}/.calculation"/>
		<copy todir="${calc.dir}">
			<fileset dir="${project.dir}/.templates">
				<include name="*.gtt"/>
				<include name="*.gmt"/>
				<include name="*.gft"/>
				<include name="*.ott"/>
				<include name="*.odt"/>
				<include name="Zeitreihen/*.ott"/>
				<include name="Zeitreihen/*.odt"/>
				<include name="Ergebnisse/Zeitreihen/*.ott"/>
				<include name="Ergebnisse/Zeitreihen/*.odt"/>
			</fileset>
		</copy>
	
		<kalypso.changeGml gmlURL="${calc.url}/.calculation">
			<property featurepath="" featureProperty="scenarioId" value="${kalypso.currentScenarioId}"/>
			<property featurepath="" featureProperty="scenarioName" value="${kalypso.currentScenarioName}"/>
			<property featurepath="" featureProperty="scenarioDescription" value="${kalypso.currentScenarioDescription}"/>
			<property featurepath="" featureProperty="startforecast" value="${kalypso.startforecast}"/>
			<property featurepath="" featureProperty="editor" value="${kalypso.currentUser}"/>
			<property featurepath="" featureProperty="description" value="- bitte ausfüllen -"/>
			<property featurepath="" featureProperty="comment" value="- bitte ausfüllen -"/>
			<property featurepath="" featureProperty="calctime" value="${kalypso.currentTime}"/>
			<property featurepath="" featureProperty="mergeCasePath" value="${calc.merge.relpath}"/>
		</kalypso.changeGml>
	</target>
	
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: calculationProperties                      Initializes properties from .calculation
         - - - - - - - - - - - - - - - - - -->
    <target name="calculationProperties">
    	<property name="HOURS_OF_DAY" value="11"/>

		<kalypso.gmlProperty gmlURL="${calc.url}/.calculation">
			<property name="startforecast" featurepath="" featureProperty="startforecast"/>
			<!-- startsim = startforecast - 15d + 1x intervallLänge (=360h)  -->
			<property name="startsim" featurepath="" featureProperty="startforecast" dateoffset="-357" dateoffsetfield="${HOURS_OF_DAY}" />
			<!-- stopsim = startforecast + 72h -->
			<property name="stopsim" featurepath="" featureProperty="startforecast" dateoffset="72" dateoffsetfield="${HOURS_OF_DAY}"/>
			<property name="scenarioId" featurepath="" featureProperty="scenarioId" defaultValue=""/>
			<property name="calc.merge.path" featurepath="" featureProperty="mergeCasePath" defaultValue=""/>
		</kalypso.gmlProperty>
    	<echo message="Szenario der Rechenvariante ist: ${scenarioId}" />

    	<!-- Construct the url of the calc case to merge and set the flag if merge is allowed.
    		 REMARK: add trailing '/', else url resolution does not work properly for
    		 the merge task
    	-->
    	<property name="calc.merge.url" value="${project.url}${calc.merge.path}/"/>
    	<condition property="doMergeCase">
    		<not>
    			<equals trim="true" arg1="" arg2="${calc.merge.path}"/>
    		</not>
    	</condition>
    	
    	<!-- Unterscheide zwischen Katastrophentest und normalem Szenario -->
    			<kalypso.multiequals arg1="${scenarioId}" arg2="test">
    				<!-- Links fürs Abholen der Zeitreihen -->
    				<property name="pegelMessungLink" valueThen="in1ObservationLink" valueElse="inObservationLink"/>
    				<property name="pegelCzVorhersageLink" valueThen="in3ObservationLink" valueElse="in2ObservationLink"/>
    				<property name="zwischengebieteLink" valueThen="in1ObservationLink" valueElse="inObservationLink"/>
    				<property name="pegelMessungWInfoLink" valueThen="in3ObservationLink" valueElse="in2ObservationLink"/>
    				
    				<!-- Links für die Ablage der Vorhersage-Zeitreihen -->
    				<property name="vorhersageLinkNormal" valueThen="out5ObservationLink" valueElse="out2ObservationLink"/>
    				<property name="vorhersageLinkOben" valueThen="out4ObservationLink" valueElse="out1ObservationLink"/>
    				<property name="vorhersageLinkUnten" valueThen="out3ObservationLink" valueElse="outObservationLink"/>
    			</kalypso.multiequals>
    </target>
	
	<!-- 
		 ================================= 
          target: update			Zeitreihen aktualisieren & kombinieren...
         ================================= 
    -->
	<target name="update" depends="calculationProperties" description="Aktualisierung der Rechenvariante">
		<echo message="Zeitreihen aktualisieren: ${calc.dir}" />
		
		<copy todir="${calc.dir}/Zeitreihen">
			<fileset dir="${project.dir}/.templates/Zeitreihen">
				<include name="*.gmt"/>
				<include name="*.gtt"/>
				<include name="*.gft"/>
				<include name="*.ott"/>
				<include name="*.odt"/>
			</fileset>
		</copy>

		<!-- 
			Pegel 
		-->
		<!-- Startpegel: Messung kombiniert mit tschechischen Vorhersagen -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Startpegel.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Messwerte und Kombination mit tschechischen Vorhersagen (Startpegel)">
			<source property="${pegelMessungLink}" from="${startsim}" to="${startforecast}" filter="${filterQ}"/>
			<source property="${pegelCzVorhersageLink}" from="${startforecast}" to="${stopsim}" filter="${filterQ}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<!-- Elbepegel: nur Messung -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Elbepegel.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Messwerte der Elbepegel">
			<source property="${pegelMessungLink}" from="${startsim}" to="${startforecast}" filter="${filterQ}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>

		<!-- Usti: zusätzlich tschechische Vorhersage (ohne Fortsetzung/Auffüllung der Werte) -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Usti_Cz_Vorhersage.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der tschechischen Vorhersage für Usti (zum Vergleich)">
			<source property="${pegelCzVorhersageLink}" from="${startforecast}" to="${stopsim}" filter="${filterQOhneFortsetzung}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>

		<!-- Usti: zusätzlich Messung W, zur Information -->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Usti_Cz_WMessung.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der W-Messwerte für Usti (zur Information)">
			<source property="${pegelMessungWInfoLink}" from="${startsim}" to="${startforecast}" filter="${filterW}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<!-- 
			Zwischengebiete 
		-->
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/Zwischengebiete.gml" featurePath="mappingMember" context="${calc.url}" targetObservation="outObservationLink" forecastFrom="${startforecast}" forecastTo="${stopsim}" description="Abholen der Zwischengebietszuflüsse">
			<source property="${zwischengebieteLink}" from="${startsim}" to="${stopsim}" filter="${filterQ}"/>
			<metadata name="Szenario" value="${scenarioId}"/>
		</kalypso.copyObservation>
		
		<antcall target="mergeCase"/>
	</target>

	<!-- 
		 ================================= 
          target: mergeCase			
         ================================= 
    -->
	<target name="mergeCase" if="doMergeCase">
		<!-- Startpegel: Messung kombiniert mit tschechischen Vorhersagen -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Startpegel.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink" description="Zusammenführen der Messwerte und Kombination mit tschechischen Vorhersagen (Startpegel)"/>
		
		<!-- Elbepegel: nur Messung -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Elbepegel.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink" description="Zusammenführen der Messwerte der Elbepegel"/>

		<!-- Usti: zusätzlich tschechische Vorhersage (ohne Fortsetzung/Auffüllung der Werte) -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Usti_Cz_Vorhersage.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink" description="Zusammenführen der tschechischen Vorhersage für Usti (zum Vergleich)"/>

		<!-- Usti: zusätzlich Messung W, zur Information -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Usti_Cz_WMessung.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink" description="Zusammenführen der W-Messwerte für Usti (zur Information)"/>
		
		<!-- Zwischengebiete -->
		<kalypso.mergeObservation gml="${project.url}/.model/observationConf/Zwischengebiete.gml" featurePath="mappingMember" context="${calc.url}" sourceContext="${calc.merge.url}" observationProperty="outObservationLink" description="Zusammenführen der Zwischengebietszuflüsse"/>
	</target>
	
	<!-- 
		 ================================= 
          target: runCalculation			
         ================================= 
    -->
	<target name="runCalculation" description="Durchführung der Simulationsrechnung">
		<echo message="Berechnung wird durchgeführt: ${calc.path}"/>
		<kalypso.runCalculation calccasefolder="${calc.path}" typeid="org.kalypso.model.elbepolte">
			<input id="CONTROL_GML" path=".calculation" relativeToCalcCase="true"/>
			<input id="GML" path="calcCase.gml" relativeToCalcCase="true"/>
			
			<input id="ZML_PEGEL" path="Zeitreihen/Pegel" relativeToCalcCase="true"/>
			<input id="ZML_ZWGE" path="Zeitreihen/Zwischengebiete" relativeToCalcCase="true"/>
			
			<output id="LOG" path="Log-Dateien/elbePolte.log" relativeToCalcCase="true"/>
			<output id="ERGEBNISSE" path="Ergebnisse" relativeToCalcCase="true"/>
			<output id="NATIVE_IN_DIR" path="Ergebnisse/.native/in" relativeToCalcCase="true"/>
			<output id="NATIVE_OUT_DIR"  path="Ergebnisse/.native/out" relativeToCalcCase="true"/>
			
			<clearAfterCalc path="Ergebnisse/**/*.zml" relativeToCalcCase="true"/>
			<clearAfterCalc path="Log-Dateien" relativeToCalcCase="true" />
		</kalypso.runCalculation>
	</target>
	
    <!-- ================================= 
          target: exportVorhersagen              
         ================================= -->
    <target name="exportVorhersagen" depends="calculationProperties" description="Export der Prognosen nach PSICompact">
        <echo message="Vorhersagezeitreihen werden nach PSICompact geschrieben..."/>
   		<echo message="Szenario-ID der Rechenvariante ist: ${scenarioId}" />
   		<echo message="" />

            <!-- Einmal normal und je einmal für die untere und die obere Umhüllende -->
            <!-- Pro Pegel werden 6 Prognosespuren definiert:
                    - 3 Spuren für den Wasserstand                           
                    .P1_MW untere Umhüllende      W                    
                    .P2_MW obere Umhüllende       W                          
                    .P3_MW berechnete Prognose    W    
                    
                    - 3 Spuren für den Durchfluss                   
                    .P4_MW untere Umhüllende      Q                 
                    .P5_MW obere Umhüllende       Q             
                    .P6_MW berechnete Prognose    Q-->
            
                <echo message="Ablage der unteren Umhüllenden W"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognoseWDown}" localobs="local2" remoteobs="${vorhersageLinkUnten}" runasync="false" IgnoreIllegalFeaturePath="true"/>
                <echo message="Ablage der oberen Umhüllenden W"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognoseWUp}" localobs="local3" remoteobs="${vorhersageLinkOben}" runasync="false" IgnoreIllegalFeaturePath="true"/>
                <echo message="Ablage der Prognoseergebnisse W"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingW.gml" sourcefilter="${filterCommitPrognose}" localobs="local1" remoteobs="${vorhersageLinkNormal}" runasync="false" IgnoreIllegalFeaturePath="true"/>
                
                <echo message="Ablage der unteren Umhüllenden Q"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognose}" localobs="local2" remoteobs="${vorhersageLinkUnten}" runasync="false" IgnoreIllegalFeaturePath="true"/>
                <echo message="Ablage der oberen Umhüllenden Q"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognose}" localobs="local3" remoteobs="${vorhersageLinkOben}" runasync="false" IgnoreIllegalFeaturePath="true"/>
                <echo message="Ablage der Prognoseergebnisse Q"/>
                <kalypso.commitPrognoses context="${calc.url}" featurepath="${exportPrognosenFeaturePath}" gml="${project.url}/.model/observationConf/VorhersageMappingQ.gml" sourcefilter="${filterCommitPrognose}" localobs="local1" remoteobs="${vorhersageLinkNormal}" runasync="false" IgnoreIllegalFeaturePath="true"/>

            
            
 </target>
</project>