Der Perspektiven-Wizard
------------------------

Die Anforderung aus dem Projekt FLOWS fordern eine frei configurierbare benutzergeführte
Wizard-Anwendung. Der zur Zeit bestehende CalcWizard ist sehr statisch und schlecht wieder-
verwendbar. Da es noch keine Möglichkeit gibt das Layout der WizardPage, ohne Programierung
zu verändern, ist dieser schlecht für die Anwendung im DSS-Planercleint in FLOWS geeingnet.
Die bestehenden Funktionalitäten des Wizard sollten im Zuge der Neuerung nicht verloren
gehen.

Neues Konzept:

Die WizardPage wird als Eclipse-Perspektive umgesetzt. 
Vorteile sind z.B.:
* Wiederverwendbarkeit von Views/Editoren in der Page bzw. die für eine Perspectiven-Wizard-
  Page programierte View kann auch als ganz normale View geöffnet werden
* die Action- und Menubars der einzelnen Komponenten stehen immer noch zur Verfügung
* die Aufteilung der Page ist durch das eclipse-eigenen page-mechanismus frei konfigurierbar
* ein wesentlicher Schritt Richtung customisation des Kalypso-Frameworks
* etc. (Gernod und Andreas bitte ergänzen)

Variante 1:
Die Steuerung des Wizards (Steuerungsleiste, Html-Navigator) wird durch die in Eclipse 3.1 
eingebaute WebBrowserView ersetzt. Damit ist es möglich die Wizard-Dialog-Navi mittels Html-
Seiten und css-Stylesheets zu realisieren. Damit können alle Komponenten in einer Html-Seite
dargestellt werden. In der Html-Seite gibt es dann aber nicht nur Links auf URLs sondern, z.B. 
durch den Einsatz von Groovy-Scripten können Funktionalitäten wie öffnen eines Editors mit einer
bestimmten Kartenansicht aus dem Framework gestart werden.

Variante 2:
Es gilt zu prüfen ob der WebBrowser auch durch das in Eclipse bereits vorhandene Cheatsheet Plugin
realisiert werden kann.

Dies gilt für Variante 1 und 2:
Für jede spezielle Linkaction, z.B Berechnung starten, kann ein spezieller Listener implementiert werden. 
Der alles mitbringt was zum Ausführen der Action nötig ist (z.B. IFolder-Objekt mit dem Rechnefall-
verzeichnis drin). Das Groovy-Script kann die Methoden des Objektes ausführen und so mehr als nur ein 
Link auf die nächste Seite enthalten. Dieser Listener sollte als ein Extension-Point die Möglichkeit 
geben die Perspektiven-Wizard-Steuerung mit andern Linklisteners zu versehen. Diese Listener sind 
dann speziell auf den Bedarf des Links konfiguriert und halten damit dieses Business aus dem 
Html-Viewer raus.

-------------------------------------------------
TODO's für die Umsetzung (noch nicht vollständig)
-------------------------------------------------
* WebBrowserView aus Eclipse 3.1 umändern, dass
	- die Eingabefelder für URL und alle andern
	  Buttons weg sind
	- einen andern LinkListener(kalypsospezifisch) 
	  auf die href setzen
* nochmal prüfen wie eine Perspektive aus einer Datei aufgerufen und angezeigt werden kann.
* Prüfen wie eine Perspektive inclusive geöffnete Editoren und Views gestartet, angezeigt
  und wieder gespeichert werden kann.
* Da nicht zwei Editoren (z.B TableEditor und MapEditor) gleichzeitig auf der gleichen Datei
  offen sein können, müssen jetztige Editoren in Views umgeschrieben werden. Die View müssten
  sehr stark von aussen konfigurierbar sein, d.h. viele set-Methoden die von aussen die View 
  konfigurieren können. 
  Beispiel: Der Mapeditor ist auf der modell.gml Datei geöffnet. Die TableView muss je nach 
  			selektion in der Karte nur ein bestimmte Spalten und Properties anzeigen. Da die
  			View nicht auf einer Vorlage aufgehen kann, müssen diese Dinge von aussen gesetzt
  			werden können.
 * Da die Rechenvariaten-Verwaltung nicht aus dem Wizard übernommen wird, muss diese neu 
   implementiert werden. Diese müssen da auch mittels eines CalcCaseLinkListeners gestartet
   werden können.
 * Programierung der neuen speziellen Views (z.B. Gazzattier-Service für FLOWS)
 
 Im Verlauf der Diskusion wurde eine weiter Frage der Customization aufgeworfen. Wann wird ent-
 schieden mit welcher Perspektive der Kalypso-Client startet. Es wurde angedacht den KalypsoUserService
 evtl. so anzupassen, dass der User in Abhänigkeit der Benutzerrechte (LDAP) aus einer Liste wählen
 kann. Danach wird je nach dem eine andere Application (IWorkbenchadviser) benutzt und Kalypso ge-
 startet.
