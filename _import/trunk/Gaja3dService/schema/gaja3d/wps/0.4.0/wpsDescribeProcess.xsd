<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wps="http://www.opengeospatial.net/wps" xmlns:ows="http://www.opengeospatial.net/ows" targetNamespace="http://www.opengeospatial.net/wps" elementFormDefault="qualified" version="0.4.0" xml:lang="en">
	<annotation>
		<appinfo>$Id: wpsDescribeProcess.xsd 103 2007-02-12 16:01:33Z albert $</appinfo>
		<documentation>This XML Schema Document encodes the WPS DescribeProcess operation request and response. 
		Copyright (c) Open Geospatial Consortium (2005). </documentation>
	</annotation>
	<!-- =============================================================
		includes and imports
	============================================================== -->
	<include schemaLocation="wpsCommon.xsd"/>
	<import namespace="http://www.opengeospatial.net/ows" schemaLocation="../../ows/1.0.0/owsDataIdentification.xsd"/>
	<import namespace="http://www.opengeospatial.net/ows" schemaLocation="../../ows/1.0.0/owsDomainType.xsd"/>
	<!-- =============================================================
		elements and types
	============================================================== -->
	<element name="DescribeProcess">
		<annotation>
			<documentation>WPS DescribeProcess operation request. </documentation>
		</annotation>
		<complexType>
			<complexContent>
				<extension base="wps:RequestBaseType">
					<sequence>
						<element ref="ows:Identifier" maxOccurs="unbounded">
							<annotation>
								<documentation>Unordered list of one or more identifiers of the processes for which the client is requesting detailed descriptions. This element shall be repeated for each process for which a description is requested. These Identifiers are unordered, but the WPS shall return the descriptions in the order in which they were requested. </documentation>
							</annotation>
						</element>
					</sequence>
				</extension>
			</complexContent>
		</complexType>
	</element>
	<!-- =========================================================== -->
	<element name="ProcessDescriptions">
		<annotation>
			<documentation>WPS DescribeProcess operation response. </documentation>
		</annotation>
		<complexType>
			<sequence>
				<element name="ProcessDescription" type="wps:ProcessDescriptionType" maxOccurs="unbounded">
					<annotation>
						<documentation>Ordered list of one or more full Process descriptions, listed in the order in which they were requested in the DescribeProcess operation request. </documentation>
					</annotation>
				</element>
			</sequence>
		</complexType>
	</element>
	<!-- =========================================================== -->
	<complexType name="ProcessDescriptionType">
		<annotation>
			<documentation>Full description of a process. </documentation>
		</annotation>
		<complexContent>
			<extension base="wps:ProcessBriefType">
				<sequence>
					<element name="DataInputs" minOccurs="0">
						<annotation>
							<documentation>List of the inputs to this process. In almost all cases, at least one process input is required. However, no process inputs may be identified when all the inputs are predetermined fixed resources.  In this case, those resources shall be identified in the ows:Abstract element that describes the process.</documentation>
						</annotation>
						<complexType>
							<sequence>
								<element name="Input" type="wps:InputDescriptionType" maxOccurs="unbounded">
									<annotation>
										<documentation>Unordered list of one or more descriptions of the inputs that can be accepted by this process, including all required and optional inputs.  Where an input is optional because a default value exists, that default value must be identified in the "ows:Abstract" element for that input, except in the case of LiteralData, where the default must be indicated in the corresponding ows:DefaultValue element. Where an input is optional because it depends on the value(s) of other inputs, this must be indicated in the ows:Abstract element for that input. </documentation>
									</annotation>
								</element>
							</sequence>
						</complexType>
					</element>
					<element name="ProcessOutputs">
						<annotation>
							<documentation>List of outputs which will or can result from executing the process. </documentation>
						</annotation>
						<complexType>
							<sequence>
								<element name="Output" type="wps:OutputDescriptionType" maxOccurs="unbounded">
									<annotation>
										<documentation>Unordered list of one or more descriptions of all the outputs that can result from executing this process. At least one output is required from each process. </documentation>
									</annotation>
								</element>
							</sequence>
						</complexType>
					</element>
				</sequence>
				<attribute name="storeSupported" type="boolean" use="optional" default="false">
					<annotation>
						<documentation>Indicates if the ComplexData outputs from this process can be stored by the WPS server as web-accessible resources. If "storeSupported" is "true", the Execute operation request may include "store" equals "true", directing that all ComplexData outputs of the process be stored so that the client can retrieve them as required. By default for this process, storage is not supported and all outputs are returned encoded in the Execute response. </documentation>
					</annotation>
				</attribute>
				<attribute name="statusSupported" type="boolean" use="optional" default="false">
					<annotation>
						<documentation>Indicates if the Execute operation response can be returned quickly with status information, or will not be returned until process execution is complete. If "statusSupported" is "true", the Execute operation request may include "status" equals "true", directing that the Execute operation response be returned quickly with status information. By default, status information is not provided for this process, and the Execute operation response is not returned until process execution is complete. </documentation>
					</annotation>
				</attribute>
			</extension>
		</complexContent>
	</complexType>
	<!-- =================INPUT PARAMETERS======================== -->
	<!-- =========================================================== -->
	<complexType name="InputDescriptionType">
		<annotation>
			<documentation>Description of an input to a process. </documentation>
		</annotation>
		<complexContent>
			<extension base="wps:DescriptionType">
				<annotation>
					<documentation>In this use, the DescriptionType shall describe this process input. </documentation>
				</annotation>
				<sequence>
					<group ref="wps:InputFormChoice"/>
					<element name="MinimumOccurs" minOccurs="0">
						<annotation>
							<documentation>The minimum number of times that values for this parameter are required. If MinimumOccurs is "0", this data input is optional. If MinimumOccurs is "1" or if this element is omitted, this process input is required. </documentation>
						</annotation>
						<simpleType>
							<restriction base="nonNegativeInteger">
								<enumeration value="0"/>
								<enumeration value="1"/>
							</restriction>
						</simpleType>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<group name="InputFormChoice">
		<annotation>
			<documentation>Identifies the form of this output and provides supporting information. </documentation>
		</annotation>
		<choice>
			<element name="ComplexData" type="wps:SupportedComplexDataType">
				<annotation>
					<documentation>Indicates that this input shall be a complex data structure (such as a GML document), and provides a list of formats and encodings supported for this Input. The value of this ComplexData structure can be input either embedded in the Execute request or remotely accessible to the server.
					This element also provides a list of formats, encodings, and schemas supported for this output. The client can select from among the identified combinations of formats, encodings, and schemas to specify the form of the output. This allows for complete specification of particular versions of GML, or image formats. </documentation>
				</annotation>
			</element>
			<element name="LiteralData" type="wps:LiteralInputType">
				<annotation>
					<documentation>Indicates that this input shall be a simple numeric value or character string that is embedded in the execute request, and describes the possible values. </documentation>
				</annotation>
			</element>
			<element name="BoundingBoxData" type="wps:SupportedCRSsType">
				<annotation>
					<documentation>Indicates that this input shall be a BoundingBox data structure that is embedded in the execute request, and provides a list of the CRSs supported for this Bounding Box. </documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<!-- =========================================================== -->
	<complexType name="LiteralInputType">
		<annotation>
			<documentation>Description of a process input that consists of a simple literal value (e.g., "2.1"). (Informative: This type is a subset of the ows:UnNamedDomainType defined in owsDomaintype.xsd.) </documentation>
		</annotation>
		<complexContent>
			<extension base="wps:LiteralOutputType">
				<sequence>
					<group ref="wps:LiteralValuesChoice"/>
					<element ref="ows:DefaultValue" minOccurs="0">
						<annotation>
							<documentation>Optional default value for this quantity, which should be included when this quantity has a default value. </documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ========================================================== -->
	<group name="LiteralValuesChoice">
		<annotation>
			<documentation>Identifies the type of this literal input and provides supporting information. </documentation>
		</annotation>
		<choice>
			<element ref="ows:AllowedValues">
				<annotation>
					<documentation>Indicates that there are a finite set of values and ranges allowed for this input, and contains list of all the valid values and/or ranges of values. Notice that these values and ranges can be displayed to a human client. </documentation>
				</annotation>
			</element>
			<element ref="ows:AnyValue">
				<annotation>
					<documentation>Indicates that any value is allowed for this input. This element shall be included when there are no restrictions, except for data type, on the allowable value of this input. </documentation>
				</annotation>
			</element>
			<element ref="ows:ValuesReference">
				<annotation>
					<documentation>Indicates that there are a finite set of values and ranges allowed for this input, which are specified in the referenced list. </documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<!-- ================= INPUT AND OUTPUT TYPES =================== -->
	<!-- =========================================================== -->
	<complexType name="SupportedUOMsType">
		<annotation>
			<documentation>List of supported units of measure for a process input or output. </documentation>
		</annotation>
		<sequence>
			<element ref="ows:UOM" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>Unordered list of references to the Units of Measure supported for this input or output. This element shall not be included if there is only one (i.e., the default) UOM supported. </documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="defaultUOM" type="anyURI" use="optional">
			<annotation>
				<documentation>Reference to the default UOM supported for this input or output, if any. The process shall expect input in or produce output in this UOM unless the Execute request specifies another supported UOM. </documentation>
			</annotation>
		</attribute>
	</complexType>
	<!-- =========================================================== -->
	<complexType name="SupportedCRSsType">
		<annotation>
			<documentation>List of supported Coordinate Reference Systems. </documentation>
		</annotation>
		<sequence>
			<element name="CRS" type="anyURI" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>Unordered list of references to the coordinate reference systems supported. This element shall not be included if there is only one (i.e., the default) CRS supported. </documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="defaultCRS" type="anyURI" use="required">
			<annotation>
				<documentation>Reference to the CRS that will be used unless the Execute operation request specifies another supported CRS. </documentation>
			</annotation>
		</attribute>
	</complexType>
	<!-- =========================================================== -->
	<complexType name="SupportedComplexDataType">
		<annotation>
			<documentation>Formats, encodings, and schemas supported by a process input or output. </documentation>
		</annotation>
		<sequence>
			<element name="SupportedComplexData" type="wps:ComplexDataType" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>Unordered list of combinations of format, encoding, and schema supported for this Input or Output (an example of one such combination is format=text/XML, encoding=UTF-8, schema=GML 2.1). This element should be included when this process supports more than one combination of format/encoding/schema for this Input/Output. This element shall be repeated for each combination of Format/Encoding/Schema that is supported for this Input/Output. This element shall not be included if there is only one (i.e., the default) Format/Encoding/Schema combination. </documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="defaultFormat" type="ows:MimeType" use="optional">
			<annotation>
				<documentation>Identifier of the default Format supported for this input or output. The process shall expect input in or produce output in this Format unless the Execute request specifies another supported Format. This parameter shall be included when the default Format is other than text/XML. This parameter is optional if the Format is text/XML. 
</documentation>
			</annotation>
		</attribute>
		<attribute name="defaultEncoding" type="anyURI" use="optional">
			<annotation>
				<documentation>Reference to the default encoding supported for this input or output. The process will expect input using or produce output using this encoding unless the Execute request specifies another supported encoding. This parameter shall be included when the default Encoding is other than the encoding of the XML response document (e.g. UTF-8). This parameter shall be omitted when there is no Encoding required for this input/output. </documentation>
			</annotation>
		</attribute>
		<attribute name="defaultSchema" type="anyURI" use="optional">
			<annotation>
				<documentation>Reference to the definition of the default XML element or type supported for this input or output. This XML element or type shall be defined in a separate XML Schema Document. The process shall expect input in or produce output conformant with this XML element or type unless the Execute request specifies another supported XML element or type. This parameter shall be omitted when there is no XML Schema associated with this input/output (e.g., a GIF file). This parameter shall be included when this input/output is XML encoded using an XML schema. When included, the input/output shall validate against the referenced XML Schema. Note: If the input/output uses a profile of a larger schema, the server administrator should provide that schema profile for validation purposes. </documentation>
			</annotation>
		</attribute>
	</complexType>
	<!-- =========================================================== -->
	<complexType name="ComplexDataType">
		<annotation>
			<documentation>A combination of format, encoding, and/or schema supported by a process input or output. </documentation>
		</annotation>
		<sequence>
			<element name="Format" type="ows:MimeType" minOccurs="0">
				<annotation>
					<documentation>Format supported for this input or output (e.g., text/XML). This element shall be included when the format for this ComplexDataType differs from the defaultFormat for this Input/Output. This element shall not be included if there is only one (i.e., the default) format supported for this Input/Output, or Format does not apply to this Input/Output. </documentation>
				</annotation>
			</element>
			<element name="Encoding" type="anyURI" minOccurs="0">
				<annotation>
					<documentation>Reference to an encoding supported for this input or output (e.g., UTF-8). This element shall be included when the encoding for this ComplexDataType differs from the defaultEncoding for this Input/Output. This element shall not be included if there is only one (i.e., the default) encoding supported for this Input/Output, or Encoding does not apply to this Input/Output. </documentation>
				</annotation>
			</element>
			<element name="Schema" type="anyURI" minOccurs="0">
				<annotation>
					<documentation>Reference to a definition of XML elements or types supported for this Input or Output (e.g., GML 2.1 Application Schema). Each of these XML elements or types shall be defined in a separate XML Schema Document. This element shall be included when the schema for this ComplexDataType differs from the defaultSchema for this Input/Output. This element shall not be included if there is only one (i.e., the default) XML Schema Document supported for this Input/Output, or Schema does not apply to this Input/Output. </documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- =================OUTPUT PARAMETERS======================= -->
	<!-- =========================================================== -->
	<complexType name="OutputDescriptionType">
		<annotation>
			<documentation>Description of a process Output. </documentation>
		</annotation>
		<complexContent>
			<extension base="wps:DescriptionType">
				<annotation>
					<documentation>In this use, the DescriptionType shall describe this process output. </documentation>
				</annotation>
				<group ref="wps:OutputFormChoice"/>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<group name="OutputFormChoice">
		<annotation>
			<documentation>Identifies the form of this output, and provides supporting information. </documentation>
		</annotation>
		<choice>
			<element name="ComplexOutput" type="wps:SupportedComplexDataType">
				<annotation>
					<documentation>Indicates that this Output shall be a complex data structure (such as a GML fragment) that is returned by the execute operation response. The value of this complex data structure can be output either embedded in the execute operation response or remotely accessible to the client. When this output form is indicated, the process produces only a single output, and "store" is "false, the output shall be returned directly, without being embedded in the XML document that is otherwise provided by execute operation response. 
					This element also provides a list of format, encoding, and schema combinations supported for this output. The client can select from among the identified combinations of formats, encodings, and schemas to specify the form of the output. This allows for complete specification of particular versions of GML, or image formats. </documentation>
				</annotation>
			</element>
			<element name="LiteralOutput" type="wps:LiteralOutputType">
				<annotation>
					<documentation>Indicates that this output shall be a simple literal value (such as an integer) that is embedded in the execute response, and describes that output. </documentation>
				</annotation>
			</element>
			<element name="BoundingBoxOutput" type="wps:SupportedCRSsType">
				<annotation>
					<documentation>Indicates that this output shall be a BoundingBox data structure, and provides a list of the CRSs supported in these Bounding Boxes. This element shall be included when this process output is an ows:BoundingBox element. </documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<!-- =========================================================== -->
	<complexType name="LiteralOutputType">
		<annotation>
			<documentation>Description of a literal output (or input). </documentation>
		</annotation>
		<sequence>
			<element ref="ows:DataType" minOccurs="0">
				<annotation>
					<documentation>Data type of this set of values (e.g. integer, real, etc). This data type metadata should be included for each quantity whose data type is not a string. </documentation>
				</annotation>
			</element>
			<element name="SupportedUOMs" type="wps:SupportedUOMsType" minOccurs="0">
				<annotation>
					<documentation>List of supported units of measure for this input or output. This element should be included when this literal has a unit of measure (e.g., "meters", without a more complete reference system). Not necessary for a count, which has no units. </documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
</schema>
