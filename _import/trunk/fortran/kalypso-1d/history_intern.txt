Version 273 xx.6.2004
---------------------
- Bordvollberechnung stationär-ungleichförmig: die Fehlerhafte Ausgabe der Längsschnitte bei
  Berechnungen von mehr als 53 Profilen wurde korrigiert

Version 274 20.7.2004
---------------------
- Bordvollberechnung stationär-ungleichförmig:
	- Eingabeparameter (qmax, qmin, qstep) werden beim Einlesen wieder auf die Konsole ausgegeben
	- die Dateien für die W/Q Beziehung bzw. die einzelnen WSP-Berechnungen werden jetzt mit
        ausreichend Stellen benamt, so dass
         a) Abflüsse > 1000 m3 möglich sind und
         b) keine Dateien mehr gleich benamt werden

Kalypso 0.9.2  28.07.2004
-------------------------
- Umwandlung des codes in FORTRAN90
- Test-Projekt Will_pad funktioniert noch einwandfrei!

Kalypso 0.9.3  28.07.2004
-------------------------
Behebung folgender Übergabefehler:
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\AnWSP.f90", line 480: warning: anf-kopf:  the type of the argument 6 is different (dummy Character*1 actual Integer*4)
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\intda.f90", line 509: warning: intdat-ju0chr:  the number of arguments is different (dummy arguments 8 actual arguments 7)
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\SaWSP.f90", line 312: warning: select-ju0chr:  the rank of the argument 2 is different (dummy argument 1 actual argument 0)
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\SaWSP.f90", line 312: warning: select-ju0chr:  the rank of the argument 6 is different (dummy argument 1 actual argument 0)
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\SoWSP.f90", line 913: warning: sorprof-sortrc:  the rank of the argument 5 is different (dummy argument 2 actual argument 1)
"P:\Software\KALYPSO-1D\Vers_0.9.2\source\SoWSP.f90", line 913: warning: sorprof-sortrc:  the rank of the argument 7 is different (dummy argument 2 actual argument 1)

Behebung einer Reihe von FORTRAN-Standard Verletzungen mit Hilfe des Visual Analysers.



Kalypso 1.0  12.08.2004
-------------------------
Das Programm KALYPSO-1D und alle seine Subroutinen wurden unter die
GNU Lesser General Public License gestellt und sind damit offene Codes!

Aufgrund eines Problems mit einer Brückenberechnung (Scholz -> Polenz, km 6.188) wurden
folgende Subroutinen kontrolliert und in eine übersichtlichere Form gebracht:
- abfluss
- br_konv
- geomet
- normber
- wspber
- xverwsp1
- xverwsp2
Verschiedenen Testrechnungen zeigen, dass es nicht möglich ist, bei einer Brückenberechnung eine
Überströmung des Vorlandes mit zu berücksichtigen! Auch wenn im WSPWin-Editor der Wasserspiegel
über das gesamte Profil eingezeichnet wird, steht intern nur der Abschnitt der Brücke für den
Abfluss zur Verfügung.



Kalypso 1.0.1 19.10.2004
------------------------
Fehler beim Lesen der Kommentarzeile (Subroutine READCOMMENT in proep.f90)
in Profildateien wurde behoben. Fehler ist aufgetreten bei deutschen Sonderzeichen, 
die FORTRAN nicht lesen kann. Durch Verwendung von IOSTAT in READ-Befehl konnte
dieser abgefangen werden.
                                            Wolf Plöger 19.10.2004

Kalypso 1.0.2 13.01.2005
------------------------
Es trat ein Fehler auf, wenn ein Kreisprofil und gleichzeitig eine
Oberkante Brücke angegeben wurde, so wie in Dokumentation von WSPWin 8.0
für KNAUF-Kern beschrieben. PASCHE-Kern kann diese Kombination nicht!
Trotzdem wurde nocheinmal das Einlesen der Kreisprofile in SUB PROE_PRO
angepasst: In Zeile 536 wurde das Erhöhen von NN bei Sonderprofilen
gelöscht, da dies schon global in Zeile 518 passiert. Demnach sind die 
Änderungen von DK hier nicht sinnvoll!
Zusätzlich wurden der Code in einigen Subroutinen dem FORTRAN90-Standard
angepasst.

                                            Wolf Plöger 13.01.2005

Kalypso 1.0.3 02.02.2005
------------------------
Bisher konnten maximal 200 Profile mit Kalypso-1D gerechnet werden.

Im Code waren in verschiedenen Stellen diverse PARAMETER-Definitionen zu der
maximalen Profilzahl (MAXGER). Zusätzlich wurden weitere Parameter jeweils
in verschiedenen Subroutinen definiert, und auch mit sich widersprechenden
Namen versehen.

Jetzt Einführung von drei verschiedenen Modulen, die jeweils verschiedene
Parameter global verfügbar machen:

MODULE dim_variablen   (Dimensionierung von Arrays, wie max. Profilanzahl
                        und max. Abflussereignisse...)
MODULE konstanten      (globale Konstanten wie g, rho, nue,...)
MODULE bewuchs         (Parameter für die Berechnung von Bewuchs)

Diese Module sind in einer neuen FORTRAN90 Datei abgelegt: 
 
   source/globale_definitionen.f90

Falls nun weitere Änderungen an der Dimensionierung der Felder notwendig sind,
brauchen nur die entsprechenden Parameter in dieser Datei geändert werden!
In allen anderen SUBROUTINEN muss nichts mehr geändert werden!!!!

Im Zuge dieser Änderung wurde in diversen SUBROUTINEN je nach Notwendigkeit
der Aufruf

USE DIM_VARIABLEN
USE KONSTANTEN
USE BEWUCHS

noch vor den eigentlichen Variablendeklarationen eingefügt.

Aktuelle Werte in DIM_VARIABLEN:

INTEGER, parameter :: nch80 = 80       ! Max. Laenge von Zeichenketten, z.B. Dateinamen
INTEGER, parameter :: merg = 10        ! Max. Anzahl von Abflussereignissen
INTEGER, parameter :: maxkla = 200     ! Max. Anzahl von Punkten pro Profil
INTEGER, parameter :: maxger = 1000    ! Max. Anzahl von Profilen
INTEGER, parameter :: ipro = 16        ! Max. Anzahl von Bloecken in Profildatei (? WP)
INTEGER, parameter :: itmax = 99       ! Max. Anzahl von Iterationen in versch. Subroutinen
INTEGER, parameter :: maxw = 50        ! Max. Anzahl von Wehrfeldern
INTEGER, parameter :: mpts = 200       ! ?? WP wahrscheinlich = maxkla
INTEGER, parameter :: max2 = 10        ! ?? WP wird nur in wenigen SUBs verwendet
INTEGER, parameter :: min2 =100        ! ?? WP wird nur in wenigen SUBs verwendet

INTEGER, parameter :: idim = 200       ! ?? WP wird nur in wenigen SUBs verwendet
INTEGER, parameter :: idim4 = 20       ! ?? WP wird nur in wenigen SUBs verwendet
INTEGER, parameter :: idim2 = 16       ! ?? WP wird nur in wenigen SUBs verwendet


                                            Wolf Plöger 02.02.2005



Kalypso 1.0.4 28.02.2005
------------------------
Als Kennung fuer den Block mit den Rauhigkeitswerten ist jetzt neben
'RAUHIGKEIT' auch 'RAUHEIT' erlaubt. Aenderungen nur an zwei Stellen in
INTDAT.F90.
(Problem ist aufgetreten, weil der WSPWIN Mapper beim Einlesen des Triple-Formats
nur die Kennung 'RAUHEIT KS' erlaubt. Somit werden durch den Mapper teilweise
Profildateien erzeugt, die statt RAUHIGKEIT die Kennung RAUHEIT aufweisen.)

                                            Wolf Plöger 28.02.2005

Kalypso 1.0.5  April 2005
-------------------------
Einige Änderungen in der Programmstruktur:

1.) Anlegen von zwei MODULEN in "globale_definitionen.f90":
    - MODULE Zeit    (beinhaltet die Variablen für die aktuelle Zeit)
    - MODULE Version (beinhaltet die Versionsnummer, muss dann nur noch 
                      hier geändert werden)

2.) Anlegen einer neuen Datei für globale Funktionen "globale_funktionen.f90":
    - MODULE GET_LAMBDA (berechnet den Lambdabeiwert nach COLEBROOK-White)

3.) Überall wo im Code der Fließwiderstand LAMBDA berechnet wurde, wird nun die
    globale Funktion GET_LAMBDA aufgerufen! Änderungen an mehreren Stellen, insbesondere
    in "SoWSP.f90", "Abfluss.f90" und "lindy.f90".

4.) In der Subroutine WHEN in "when.f90" wird nun nur noch die Standard FORTRAN90-Routine
    DATE_AND_TIME verwendet. Hier werden die Variablen für das MODULE Zeit belegt.
    Andere Subroutinen zur Zeitbestimmung sind nicht mehr erforderlich.
    Subroutine ZU0SDT komplett gelöscht.

5.) Minimale Änderungen in Subroutine ERFOUD ("erfro.f90"). Anpassung an F90-Standard.

6.) In "X_wsp.f90" die Vergabe der Versionsnummer geändert (siehe Punkt 1.)

7.) Im gesamten Code wurde der Aufruf von NBLANK() durch die Standard F90 Routine LEN_TRIM()
    ersetzt.

8.) Erweiterung des Codes, so dass im DATH-Ordner die Datei "laengsschnitt.txt" erzeugt wird.
    Diese beinhaltet den gleichen Längsschnitt, wie die standardmäßig ausgegebenen WSPWin-Datei,
    allerdings in einer einfachen Tabellenform, die leicht in EXCEL importiert werden kann!
    
    - Erweiterung in "WSPbr.f90" so dass ein Pfad- und Dateiname bezogen auf den Projektordner
      für "laengsschnitt.txt" erzeugt wird.
    - Dieser wird in "lapro.f90" eingesetzt.
    - "QaWSP.f90", wo LAPRO1 aufgerufen wird, wird entsprechend geändert und Variable definiert.
    - "lapro.f90" wird entsprechend geändert, und der Aufruf von ZEILA geändert.
    - in "Z_WSP.f90" wird die Subroutine ZEILA erweitert, so dass die Datei "laengsschnitt.txt"
      als Tabellenausdruck ausgegeben wird.

9.) Weitere Änderung der Subroutine PROE_PRO (siehe Version 1.0.1). Jetzt können auch Kommentare 
    mit mehr als einer Zeile verarbeitet werden, wenn Sie nicht am Ende der Profildatei stehen.
    Entscheidend ist hierbei die Zeile nach den beiden Beschreibungstextzeilen BETE1 und BETE12. In
    dieser Zeile steht normalerweise 9 mal die Null. Nur wenn ein Sonderprofil vorliegt, variiert
    die letzte Zahl dieser Zeile (im Code NSYMB(j), z.B. NSYMB(j) = 7 für Kreisprofil oder
    NSYMB(j) = 17 für Kommentar). Für alle Sonderprofile muss offenbar der Beschreibungstext BETE12
    wiederholt eingelesen werden???? Bei dem Kommentarblock darf dies aber nicht geschehen!

10.) Die Übergabe der Variablen in Subroutine PASCHE wurde mit INTENT-Argumenten versehen, um
     die Wartbarkeit des Codes zu verbessern.

11.) In Subroutine SOHLEF wurden die Variablen L_TR(1) und L_TR(2) mit 0.0 initialisiert. Nun ist
     auch das Compilieren des Codes mit vollen Checks (-CHK und _STCHK) möglich!

12.) Einrückungen und Strukturverbesserungen in Subroutine LINDY, allerdings ohne Berechnungen
     zu verändern.

13.) Einrückungen und Strukturverbesserungen in Subroutine EB2KS, allerdings ohne Berechnungen
     zu verändern.

                                              Wolf Plöger, 21.04.2005



Kalypso 1.0.6  02.05.2005
-----------------------------
A C H T U N G:  In der Vorgängerversion 1.0.5 haben sich zwei kleine Bugs eingeschlichen, 
deshalb bitte ab sofort nur noch die Version 1.0.6 benutzen!

A C H T U N G:  Durch die erhöhte Genauigkeit kann die Berechnung teils deutlich
länger dauern. Auch die Ergebnisse können teilweise leicht von den Ergebnissen
der Vorgängerversionen abweichen!

Es wurden wiederum einige strategische Veränderungen vorgenommen. Insbesondere die
Abbildung von komplizierten oder iterativen Formeln in einzelne gekapselte Funktionen
wurde weiter vorangetrieben.


1.)  Nun liegen folgende Funktionen für globale Anwendung vor:
     - GET_LAMBDA   Je nach Reynoldszahl iterative Berechnung von lambda 
     - GET_CW_UN    Berechnung des CW-Wertes eine einzeln stehenden Zylinders
     - GET_A_NL     Berechnung der Nachlauflänge
     - GET_A_NB     Berechnung der Nachlaufbreite
     - GET_OMEGA    Berechnung des Bewuchsparameters
     - GET_CT       Berechnung des Bewuchsparameters
     - GET_REL_V_AN Berechnung der relativen Anströmgeschwindigkeit

     Durch die Anwendung dieser Funktionen wird der Code der Subroutinen PASCHE und LINDY
     deutlich übersichtlicher. Die iterativen Berechnungen haben nun eine höhere Genauigkeit.

2.)  Überarbeitung der Subroutine POSIT, da hier ein Fehler aufgetreten ist. Durch Anpassung an
     FORTRAN90-Standard wird dieser behoben.

3.)  Umbenennung der Kontrolldatei von "Kontroll" nach "Kontroll.log". Allerdings gilt das nur
     für die normale Berechnung. Bei BORDVOLL-Berechnungen wird eine weitere Kontrolldatei, die
     auch "Kontroll" heißt, angelegt. Es werden in WSP und QBORDV die gleichen UNIT-Bezeichner
     und Variablen verwendet. Das ganze ist sehr verwirrend, deshalb in QBORDV erstmal keine
     Änderung.

4.)  Änderung der Ausgabe in der MS-DOS Box. Statt der Uhrzeit, des Datums und der Versionsnummer
     erscheint nun das aktuell berechnete Profil.

5.)  Anpassung der Subroutine WSP_OPEN, da es hier zu einem Konflikt bei der Variablenübergabe
     zu WHEN gekommen ist.

6.)  In Subroutine ABFLUSS zur Berechnung des Brückenabflusses wurde der Anfangswert für den
     Fließwiderstand LAMBDA initialisiert und die iterative Berechnung von LAMBDA mit dem
     letzten berechneten Wert relaxiert. Dadurch verbesserte Konvergenzeigenschaften bei der
     Brückenberechnung.

7.)  Einige Dateinamen wurden geändert! Verwirrende und abgekürzte Bezeichnungen wurden nun 
     ersetzt durch den vollständigen Namen der in der Datei enthaltenen Subroutine(n).
     Die Subroutine MAEAND bekommt ebenso wie PROE_PRO eine eigene Datei.

                                                Wolf Plöger 02.05.2005


Kalypso 1.0.7  11.05.2005
-----------------------------
1.) Bei der Bordvollberechnung werden die beiden Dateien *.qb1 und *.qb2 wieder ausgegeben (dies
    war ein Bug seit Version 1.0.5).
    Problem war hierbei, dass der Ausgabedatei "laengsschnitt.txt" in ZEILA eine feste Fortran-Unit
    zugewiesen wurde und somit eventuell in Konflikt mit anderen Dateien stand. Diese UNIT-Nr. wird 
    nun über die Funktion JU0GFU bestimmt.

2.) Nochmalige deutliche Bereinigungsarbeiten im Code (und nimmt kein Ende...). Anpassungen diverser 
    Art an den FORTRAN90-Standard. Ich weiß, hier sollte etwas Detaillierteres stehen. Aber es sind
    sooooo viele Kleinigkeiten .....

3.) Explizite Definition aller Variablen in den COMMON-Blöcken in den Subroutinen:
    - ZEILA
    - LAPRO1
    - WSPBER
    - QBORDV

4.) Problem in POSIT umgangen. Bei der Brückenberechnung wird in verschiedenen geschachtelten Routinen
    zunächst ein Polygonzug zusammengebaut (z.B. linke Uferlinie über alle Sohlpunkte bis rechte Uferlinie
    und als Wasserspiegel wieder zurück). Dieser wird dann geprüft, ob weitere Punkte hinzugefügt werden
    sollen. Hierbei ist mir unklar, warum das überhaupt gemacht wird, vielleicht ein Relikt aus alten Zeiten?
    Auf jeden Fall gab es ein Problem, wenn der Wasserspiegel die Böschung so schneidet, dass der nächste
    definierte Sohlpunkt sehr nah war (Abstand < 1 mm). Dann wurde über die Subroutine HEREI versucht, dort
    ein Punkt einzufügen, wo die Punte ehe schon sehr dicht waren. Dieses Einfügen habe ich in POSIT komplett
    deaktiviert.

                                                Wolf Plöger 11.05.2005


Kalypso 1.0.8  Mai.05.2005
-----------------------------
1.)  Löschen des COMMON-Blocks / IMP / , da er nur im WSP-Hauptprogramm verwendet wird.

2.)  Deklarierung aller COMMON-Blöcke im Hauptprogramm WSP. Aufräumen von WSP.

3.)  Wenn KALYPSO-1D über WSPWin gestartet wird, wird in die Startdatei BAT.001 (die nach Ablauf
     des Programms wieder gelöscht wird) immer ein 'j' in die erste Zeile geschrieben. Dies soll
     markieren, dass die Eingabe über Masken erfolgt. Dies trifft immer zu! Eine andere Möglichkeit
     wird nicht weiter gepflegt. Deshalb kann im Hauptprogramm die Abfrage IF antwort=='j' entfallen
     und die Subroutine SELECT wird nie wieder aufgerufen. Auch die Subrotine SUN_BEF wird nie wieder
     erreicht und wird somit ebenfalls komplett gelöscht.
     Damit werden auch SORPROF und SORTRC überflüssig, da nur von SELECT aufgerufen.
     -> Subroutine SELECT gelöscht!
     -> Subroutine SUN_BEF gelöscht!
     -> Subroutine SORPROF gelöscht!
     -> Subroutine SORTRC gelöscht!

     SOHLEF bekommt damit eigene Datei mit dem Namen SOHLEF.F90.

4.)  Variable YMAX in allen COMMON-Blöcken / HEADER / wird gelöscht, da nie verwendet!

5.)  Löschen des COMMON-Blocks stoerpro1 und der dazu gehörenden Variablen. Wurde in PROE_PRO belegt,
     aber nie verwendet.

6.)  Löschen der Subroutine GENKEIT und der Datei genkeit.f90 -> Wurde nie verwendet!

7.)  Löschen des COMMON-Blocks verdacht in geomet, wurde außerhalb von geomet nie verwendet.

8.)  Löschen des COMMON-Blocks mae in pasche, wurde sowohl in als auch außerhalb von pasche 
     nie verwendet.

9.)  Löschen des COMMON-Blocks werte in proe_pro, wurde sowohl in als auch außerhalb von 
     proe_pro nie verwendet.

10.) Löschen des COMMON-Blocks bzh1 in proe_pro, wurde sowohl in als auch außerhalb von 
     proe_pro nie verwendet.

11.) In die Subroutine NEWTON wurde die Variable IKENN übergeben, dort aber nie verwendet! Deshalb
     wird IKENN aus der Übergabeliste in NEWTON entfernt.

12.) Löschen des COMMON-Blocks peg in newton, wurde hier nie verwendet.

13.) Anpassung der Subroutine NEWTON an den FORTRAN90-Standard.

14.) Löschen der Datei GETCWD.F90 inclusive der darin enthaltenen Subroutine. Wird nicht mehr benötigt!
     -> Subroutine GETCWD gelöscht!

15.) Änderung der Versionsausgabe im Hauptprogramm WSP. Deshalb werden XVERSWSP1 und 2 überflüssig.
     -> Datei X_WSP.F90 wird gelöscht.

16.) Löschen des COMMON-Blocks GRNZ_GEN, Übernahme der Variablen GRENZ_IT und GRNZ_SCH in Modul
     DIM_VARIABLEN in GLOBALE_DEFINITIONEN.F90. Änderung in LESDATIN.F90 und GRNZH.F90.

17.) Löschen von LESDATIN.F90. Keine Verwendung mehr. Alternative Dateineingabe wird nicht weiter verfolgt.
     -> Subroutine LESDATIN gelöscht!

18.) Neues Modul in GLOBALE_DEFINITIONEN.F90: STEUERUNG_BERECHNUNG. Dort wird eingetragen: GENAUDRU, ehemals
     im COMMON-Block GENAU. Löschen des COMMON-Blocks GENAU.

19.) Ersetzen der Fehlerdokumentation in WSPBER und LU0EOF, damit wird U0ERPR überflüssig und komplett
     gelöscht. Damit werden auch die Subroutinen LNBLNK, PERROR und ABORT überflüssig.
     -> Subroutine U0ERPR gelöscht!
     -> Subroutine LNBLNK gelöscht!
     -> Subroutine PERROR gelöscht!
     -> Subroutine ABORT gelöscht!

20.) Subroutine LU0EOF wird nicht mehr verwendet und wird komplett gelöscht.
     -> Subroutine LU0EOF gelöscht!

21.) Die Variable IMETH = 2 (im Hauptprogramm definiert) wurde an QBORDV und WSPBER weitergegeben, dort 
     allerdings nie verwendet! Deshalb wurde diese Variable aus WSP, QBORDV und WSPBER komplett gelöscht.

22.) Aufraeumen des Hauptprgramms WSP.

23.) Ersetzen der Funktion JU0NCH im gesamten Code durch die Standard F90-Routine LEN_TRIM.
     -> Subroutine JU0NCH gelöscht!

24.) Ersetzen der Bildschirmausgabe durch normale WRITE Befehle, damit wird die Subroutine U0TNOA
     überflüssig und wird komplett gelöscht!
     -> Subroutine U0TNOA gelöscht!

25.) Die Datei U_WSP.F90 wird aufgelöst und durch die Dateien UF.F90, UCASE.F90 und U0LJST.F90 ersetzt.
     Diese enthalten nun nur noch die entsprechenden Subroutinen.

26.) Die Subroutine U0LJST im gesamten Code durch die Standard F90-Funktion ADJUSTL() ersetzt und dann gelöscht.
     -> Subroutine U0LJST gelöscht!

Insgesamt wurden 15 Subroutinen und 1269 Codezeilen gelöscht!

                                                    Wolf Plöger, 25.05.2005


Kalypso 1.0.9  Mai.05.2005
-----------------------------
1.)  Deklarierung aller Charactervariablen mit einer Länge von 80 Zeichen über die Anweisung (LEN=nch80). 
     Die Variable nch80 wird im Modul DIM_VARIABLEN gesetzt. Somit steht  E I N E  globale Variable für
     die maximale Länge von Charactervariablen, die Pfadangaben bearbeiten, zur Verfügung.
     Die Variable wurde auf 250 gesetzt. Diese Erhöhung der maximalen Zeichenlänge funktioniert nun auf
     FORTRAN-Seite, allerdings kann die Oberfläche WSPWin 8.0.3 diese langen Dateinamen noch nicht bearbeiten.

2.)  Weitere Arbeiten am Code: Deklarierung von Common-Blöcken usw.

3.)  Lambda-Beiwert an Brücken wird wieder mit (4.4 / Re_br * lambda_br) statt mit standard lambda-Formel
     berechnet (Subroutine Abfluss).

                                                    Wolf Plöger, 30.05.2005

Kalypso 1.0.10   Juli 2005
--------------------------
1.)  Löschen der Dokumentationssubroutinen WSP_DOKU und WSP_OPEN. Dabei auch Löschen des COMMON-Blocks
     SUBVERJA und der darin definierten Variablen in den Routinen WSP, WSPANF, WSPBER, GRENZH.

2.)  Bug-Fix bei der Lambdawert Berechnung für kleine Wassertiefen in GET_LAMBDA.

3.)  Die Funktion "borda" wurde umbenannt nach GET_BORDA und in die Datei "globale_funktionen.f90"
     verschoben.

4.)  Einführung des Formbeiwertes nach MARCHI (BWK, Merkblatt 1, 1999, S. 20). Hierbei Erweiterung der 
     Common-Blöcke PROFHR ( formbeiwert(maxkla) ) und ERG ( fbwp(maxger, maxkla) ). Zuweisung des
     Formbeiwertes geschieht in UF über die Funktion GET_FORM (globale_funktionen.f90), wird dann 
     in EB2KS bzw. QKS an PASCHE bzw. SOHLEF direkt übergeben und schließlich in GET_LAMBDA verwendet.

5.)  Änderung des Formates der Tabellenausgabe. Formbeiwert wird mit ausgegeben.

6.)  Löschen des Parameters GENAUDRU und des Modules STEUERUNG_AUSGABE. In KOPF und DRUCKTAB wird
     nur noch ein (neues) Format unterstützt!

7.)  Die COMMON-Blöcke ZEI1 - ZEI5 werden nur in LAPRO1 und ZEILA verwendet. Sie werden ersetzt durch
     das globale Modul AUSGABE_LAENGS.

8.)  Das Modul AUSGABE_LAENGS bekommt alle Werte, die zur Ausgabe des Laengsschnittes notwendig sind.
     Zusätzlich zu den in ZEI1-ZEI5 definierten Variablen kommen noch die Variablen Fließgeschwindigkeit, 
     Querschnitt, Widerstandsbeiwert und Spiegelbreite für die Teilabschnitte hinzu. Auch die Stationierung,
     Bordvollhoehe (links, rechts, Minimum) und Sohlschubspannung (im Flussschlauch) werden mit aufgenommen.

9.)  In ZEILA wird zusätzlich die Sohlschubspannung für den Flussschlauch berechnet:

       tau = lambda_fl/8 * rho * v_fl^2

     Dieser Wert wird im Modul AUSGABE_LAENGS abgelegt und in Laengsschnitt.txt ausgegeben.

10.) Überarbeitung der Ausgabedatei LAENGSSCHNITT.TXT. 

                                                    Wolf Plöger, 13.07.2005

Kalypso 1.0.11  Juli 2005
-------------------------
1.)  Einführung einer Subroutine um einen außerplanmäßigen Programmabruch
     zu steuern bzw. um während der Programmausführung USER-Interaktion
     zu ermöglichen.
     Durch den Aufruf von STOP_PROGRAMM(zahl) wird in Abhängigkeit von Zahl
     über die Subroutine CHECK_DIALOG() eine Warnung in Form eines POP-Up 
     Fensters ausgegeben. Z.B. wird der Benutzer bei einer fehlerhaften Eingabe
     der Wehrgeometrie gefragt, ob das Programm beendet oder mit einer Annahme 
     (z.B. Wehre nicht mitrechnen) weiter ausgeführt werden sollen.
     Soll das Programm wirklich beendet werden, wird die Subroutine CLOSE_UNITS()
     aufgerufen, die alle offenen Units schließt und somit einen ordnungsgemäßen
     Programmabbruch vorbereitet.
     Erst nachdem diese Subroutine alle offenen Units geschlossen hat, wird
     über den STOP-Befehl das Programm beendet.

     => vier neue Dateien:   stop_programm.f90
                             check_dialog.f90
                             close_units.f90
                             winter.f90          (Source für WiSK)

     PS: Die Ausgabe des Pop-up Fensters wird über die Bilbliotheken des
         Winteracter Starter Kits von Lahey realisiert. Der Text der Fehlerausgabe
         wird in die Datei RESOURCE.RC eingegeben.

     PS: Durch die Benutzung des Winteracter Starter Kits haben sich auch die
         Compileroptionen in der AUTOMAKE.FIG geändert!

2.)  Überarbeitung der Subroutine WSPANF.

3.)  Überarbeitung der Subroutine INTDAT.

                                                    Wolf Plöger, 19.07.2005

Kalypso 1.0.12  August 2005
---------------------------
1.)  Überarbeitung der Subroutine GRNZH. Dabei Löschen des Übergabeparameters ifgrnz,
     da in nie verwendet.

2.)  Ändern der Funktionsaufrufe MAX0 und MIN0 in MAX und MIN im gesamten Code.

3.)  Überarbeitung der Subroutine SCHNPKT.

4.)  Überarbeitung der Subroutine BR_KONV. Löschen des Übergabeparameters STATN, 
     da nie verwendet.
     Es ist ein Problem aufgetreten, wenn es bei der Brückenberechnung Senken
     auf dem Vorland gibt.
     Am Anfang der Brückenberechnung wird einmal die Normalberechnung ohne Brücke
     an diesem Profl durchgeführt. Dabei wurden aber schon die Profilparameter
     x1(i), h1(i) und s(i) falsch verändert. Die Schnittpunkte der Wasserspiegellinie
     konnten deswegen in UF nicht richtig bestimmt werden. Daher kam es zu 
     unvorhergesehenen Programmabstürzen bei der Grenztiefenberechnung.
     -> Senken müssen entfernt werden.

     (getestet, aber nicht erfolgreich: Bevor jetzt in BR_KONV die Subroutine NORMBER 
     aufgerufen wird, werden zunächst die originalen Werte von x1(i), h1(i) 
     und s(i) zurückgeladen. Achtung: Es tritt weiterhinein Problem auf, wenn die 
     Senke ganz am linken äußeren Rand des Profils liegt. Diese Senke sollte 
     zunächst durch Anheben des Punktes entfernt werden. -> hier gibt es noch einiges ToDo!)

5.)  Überarbeitung der Subroutine PROBV1. Löschen der Übergabeparameter ST_O, ST_U
     und QVAR da nie verwendet.

6.)  Überarbeitung der Subroutine BOVOG1.

7.)  Löschen des Parameters ANTWORT aus den Übergabelisten an WSPBER und QBORV, da
     in WSP immer ANTWORT='n' gesetzt wurde. Andere Varianten werden nicht mehr
     unterstützt!
     -> Dadurch können eine Vielzahl von Codezeilen in QBORDV und WSPBER entfallen!
     -> Anpassungen in QBORDV, LAPRO, WSPBER und ZEILA.

8.)  Neuer COMMON-Block dateiname_prof, in der in einem Array alle absoluten
     Profildateinamen abgelegt werden. Wird in WSPBER belegt und in SCHREIB_ERG_STAT_UNGLF
     verwendet um die *.km Dateien zu erzeugen.

9.)  Neue Subroutine SCHREIB_ERG_STAT_UNGLF: Hier werden die berechneten Werte der
     stationär-ungleichförmigen Berechnung ausgegeben, wenn KM-Parameter berechnet
     werden sollen.
     Für jede Profildatei (*.prf im PROF-Ordner) wird eine entsprechende *.km-Datei
     erzeugt mit folgendem Syntax:

       0.0000  Station [km]
    NR         WSP          QQ        QVOR          FB        FVOR          BB        BVOR       I_WSP
     1       1.150      10.000       0.000      12.827       0.000      12.301       0.000  0.00050236
     2       1.451      15.000       0.000      16.617       0.000      12.902       0.000  0.00050199
    
     In der ersten Zeile steht die Station (F12.4) in Kilometer. Dann folgt eine 
     Tabelle mit einer W-Q Beziehung für dieses Profil. Es wird unterschieden 
     in Flussschlauch (zwischen den Trennflächen) und Vorland. Es werden ausgegeben:
     - Wasserspiegelhöhe (WSP)
     - Abfluss Hauptgerinne (QQ)
     - Abfluss Vorland (QVOR)
     - Fließquerschnitt Hauptgerinne (FB)
     - Fließquerschnitt Vorland (FVOR)
     - Breite des Wasserspiegels Hauptgerinne (BB)
     - Breite des Wasserspiegels Vorland (BVOR) 
     - Wasserspiegelgefälle (I_WSP)
     Hierbei wird das Gefaelle an einer Station aus dem Wasserspiegelunterschied
     zwischen aktuellem und unterwasserseitigem Profil berechnet. Nur beim ersten
     (Unterwasser-) Profil wird der Wasserstand des zweiten (oberwasserseitigen) 
     Profils verwendet.

                                                    Wolf Plöger, 02.09.2005

Kalypso 1.0.13  September 2005
------------------------------
1.)  Tabelle der KM-Ausgabedatei bekommt neuen und leichter verständlichen Kopf.

2.)  Bei der Berechnung von Sonderprofilen wird der Formbeiwert nicht mehr
     berücksichtigt. Formbeiwert wird in Subroutine UF für jeden Abflussquerschnitt
     (Vorland links, rechts und Flusschlauch) seperat bestimmt.

                                                    Wolf Plöger, 05.09.2005


Kalypso 1.0.14   Dezember 2005
------------------------------
Es wird eine Datei angelegt, in der die einzelnen berechneten Lambdawerte über die
Querschnitte ausgegeben werden.

1.)  Neuer COMMON-Block / ausgabelambda / in WSP angelegt. Darin enthalten sind
     die UNIT-Nummer (jw_lambdai), der Dateiname (LAMBDAI) und die einzelnen
     Widerstandsbeiwerte fuer die einzelnen Punkte des Profils.

2.)  Datei mit UNIT jw_lambdai und dem Namen lambda_i.txt wird im Ordner /DATH/ 
     angelegt.

3.)  Die Lambda-Werte im Flussschlauch ergeben sich aufgrund der Iteration nach
     Einstein. Auf dem Vorland bzw. außerhalb der Trennflächen werden die 
     gemittelten Werte ausgegeben.

4.)  Zusätzlich wird für die einzelnen Knoten die jeweilige mittlerer 
     Fließgeschwindigkeit des Abschnittes (Vorland links, rechts, Flussschlauch)
     ausgegeben.

5.)  Verbesserung der Fehlerausgabe in INTDAT, wenn keine Grundrauheit angegeben
     wurde (z.B. fehlerhafte Verschneidung im WSPWIN Mapper).

                                                    Wolf Plöger, 08.12.2005



Kalypso 1.0.15   Januar 2006
----------------------------
1.)  Bei einer sehr komplexen Brücke ist ein Problem aufgetreten. Durch die Anhebung der 
     Dimensions-Variablen MIN2=500 und MAX2=20 in globale_definitionen.f90 konnte das 
     Problem behoben werden.

                                                    Wolf Plöger, 17.01.2006



Kalypso 1.0.16   Februar 2006
-----------------------------
1.)  Änderung der Variablenbezeichnung von az zu ay in LINDY (konform den anderen
     Subroutinen).

2.)  Zusätzliche Prüfung der eingegebenen Bewuchsparameter. Bewuchs zwischen den
     Trennflächen wird direkt gelöscht, Inkonsistente Dateieneingabe, z.B.
     ax= 5.0,  ay = 5.0,  dp = 0.0 wird geprüft und dann Bewuchs an dieser Stelle
     entfernt. Warnhinweise werden in error2.log geschrieben.

3.)  Verbesserung der Iteration zur Bestimmung von V_TR in Sub PASCHE. Einführung 
     einer semi-adaptiven Unterrelaxation.

4.)  Deklarierung der Übergabevariablen in LINDY. Löschen der Variable ks_mi aus
     Übergabeliste, da nie verwendet! -> Änderungen in EB2KS und QKS_QKST.

                                                    Wolf Plöger, 02.02.2006

Kalypso 1.0.17   März 2006
--------------------------
1.)  Einführung eines neuen globalen Moduls IO_UNITS, das alle UNITs verwaltet.

2.)  Ersetzen aller UNIT-Variablen im Code (z.B. jw2, jw8 usw.) durch neue
     Variablen. Löschen aller alten Unit-Variablen aus Übergabeparametern von 
     Subroutinen. In allen Subroutinen, in denen Ausgaben produziert werden,
     muss ab sofort das Modul IO_UNITS eingebunden werden. Ausnahmen bleiben
     bis auf weiteres die Subroutinen KOPF und DRUCKTAB.

3.)  Löschen des COMMON-Blocks /FUNIT/, da überflüssig geworden.

4.)  Löschen aller alten UNIT-Variablen in den entsprechenden COMMON-Blöcken.

5.)  Löschen des Common-Blocks /AUSGABEART/, da nun überflüssig.

6.)  Entfernen aller Abfragen IF (lein==3) THEN, da Kontroll.log jetzt immer
     vorhanden ist. Hierbei Änderung in den folgenden Subroutinen:
      - anf
      - normber
      - br_konv
      - wspanf
      - w_ber
      - preo_pro
      - verluste
      - newton
      - pegasus
      - station
      - abfluss
      - geomet
      - g_wehr
      - eb2ks
      - eb2kst
      - qks
      - qkst
      - lindy
      - pasche
      - sohlef

7.)  Einführung eines neuen Moduls zur globalen Ergebnisspeicherung MOD_ERG.
     Hierin werden die TYPEn out_IND(prof,abfluss,1-3) und out_PROF(prof, abfluss)
     definiert. Diese neu definierten Varialen Typen sollen alle jemals
     berechneten Ergebnisse zentral speichern. Wurde vorher in Commonblock /ERG/
     und weiteren Blöcken sehr unübersichtlich vorgenommen. Insbesondere bei
     stationär-ungleichförmiger Berechnung sind Probleme durch Fehlzuweisungen
     aufgetreten.

8.)  Komplettes Reworking der Ausgabe der *.KM Dateien. Es hat sich gezeigt, dass
     bei der stat.-unglf. Berechnung bei unterschiedlichen Abflüssen eine
     unterschiedliche Anzahl von Profilen interpoliert werden (z.B. bei Brücken).
     Deshalb kam es in der Vergangenheit zu Verschiebungen bei der Ausgabe
     der Ergebnisse.
     Jetzt werden zunächst A L L E jemals erzeugten Berechnungsergebnisse in
     dem globalen Modul MOD_ERG abgelegt. Hierbei wird insbesondere auch die
     Information, ob ein Profil mit Nummer i bei Abfluss j interpoliert wurde,
     abgelegt.
     Für die Datenausgabe werden in einer neuen Subroutine die entsprechenden
     Rückverschiebungen durchgeführt:

     !---------------------------------------------------------------------------
     subroutine shift_left_array_out(nr_prof, j)
     !
     ! Beschreibung:
     ! -------------
     ! Aufgrund der Komplexitaet der verwendeten Berechnungsmethoden, werden
     ! in bestimmten Faellen (z.B. Bruecken) Profile interpoliert. Die Anzahl
     ! der interpolierten Profile haengt von dem jeweiligen Abflussereignis.
     !
     ! AbflussNr   Stat[km]  Stat[km]  Stat[km]  Stat[km] Stat[km]  Stat[km]  Stat[km]  Stat[km]
     !    1         1.000     1.500     1.520     1.600    1.980     2.000     2.020     2.500
     !    2         1.000     1.500     1.600     1.980    2.000     2.020     2.500
     !    3         1.000     1.500     1.600     2.000    2.500
     !    4         1.000     1.500     1.520     1.600    1.980     2.000     2.500
     !    5         1.000     1.500     1.600     1.980    2.000     2.500
     !
     ! In diesem Beispiel sind alle ungeraden Werte (1.520, 1.980, 2.020)
     ! interpolierte Profile. Die urspruenglich 5 Profile wurden bei Abfluss
     ! Nr. 1 auf 8 Profile erweitert.
     ! Fuer die Ausgabe von WQ-Beziehungen bzw. Tabellen fuer die Kalinin-Miljukow
     ! Berechnung muessen die interpolierten Werte entfernt werden und der
     ! Rest der Zeile nach links geschoben werden.
 

9.)  Neue verbesserte Fehlerausgabe, wenn bei Bordvollberechung kein Abfluss
     berechnet wurde.

                                                    Wolf Plöger, 13.03.2006

Kalypso 1.0.18   April 2006
---------------------------
1.)  Erhoehung der Anzahl der maximal möglichen Abflussänderungen in einem Flusslauf von 10 auf 50.

2.)  Auflösung der COMMON-Blöcke BRUECK2 und BRUECK3. Die enthaltenen Variablen werden zu BRUECK
     hinzugefügt.

3.)  Verwendung des Moduls MOD_ERG nun auch für "Normale" Berechnung und Längsschnittausgabe.

4.)  Erweiterung der Ausgabe in laengsschnitt.txt mit:
     - Profilkennung (n = Normal, i = interpoliert, k = Kreis, m = Maul, t = Trapez, e = Ei)
     - Wehroberkante
     - Brückenunterkante
     - Brückenoberkante
     - Brückenbreite
     - Durchmesser von Durchlässen

                                                    Wolf Plöger, 26.04.2006


Kalypso 1.1b   24. Mai 2006
---------------------------
1.)  Erweiterung des Codes um eine neue Möglichkeit der Dateneingabe für die neue
     KALYPSO-1D Oberfläche:

     - Einführung eines neuen Moduls MOD_INI, das alle Daten der neuen 
       Konfigurationsdatei (aus KALYPSO-Oberfläche) beinhaltet. Diese Datei
       ist im Windows INI-Format geschrieben und kann beliebige Kommentare (#)
       und Leerzeilen enthalten.

     - Neue Subroutine "read_config_file" zum Lesen der Konfigurationsdatei.
       Die gelesenen Werte werden in MOD_INI gespeichert.

2.)  Wenn die neue Konfigurationsdatei vorhanden ist, wird sie erkannt und der
     interne Modus (RUN_MODUS) auf Kalypso gesetzt. Die Popup Fenster bei bestimmten 
     Fehlermeldungen werden dann unterdrückt.

3.)  Komplette Umstrukturierung der IO-Operationen. Jede IO-Einheit bekommt einen 
     festen Namen (gespeichert im Modul IO_NAMES). Die Variablen unit1 und fnam1
     verlieren ihre Bedeutung.

4.)  Änderung des IO-Handlings bei stationär-ungleichförmiger Berechnung: Die 
     Subroutinen FSEEK und LU0TRF werden nicht mehr verwendet, dafür beim
     Öffnen der *.PRO dateien das Attribut POSITION = 'APPEND'. 

5.)  Änderung der Einleseroutine der Datei "teilg.001". 

6.)  In der Längsschnitt-Datei wird zusätzlich noch der Abfluss ausgegeben.

7.)  Löschen des Commonblocks /IPRINT/ da Inhalt nicht mehr verwendet.

8.)  Getestet bis jetzt mit "WSPWIN"-Oberfläche: Normale Wasserspiegelberechnung,
     Bordvollberechnung und stat-ungl. Berechnung.
     Getestet bis jetzt mit "KALYPSO"-Eingabe: Normale Wasserspiegelberechnung.

9.)  ToDo: Testen aller Berechnungsmöglichkeiten mit allen Optionen für 
     WSPWIN-Oberfläche und Testen der Bordvoll sowie stat.-ungl. Berechnung
     mit KALYPSO-Eingabe.

10.) ToDO: Aufräumen des Codes, insbesonderer:
     - Prüfen der CHARACTER-Variablen FLUSS und EREIGNIS, eventl auch in MOD_INI?
     - Verwendung der neuen Variablen für die Berechnungsoperationen in allen
       Subroutinen, insbesondere ifg =1/0, FLIESSGESETZ Pasche/Colebrook.
     - Löschen der Subroutinen FSEEK und LU0TRF.
     - Übergabefehler in MENGLA (siehe Visual Analyser)
     - Prüfen der Common-Blöcke:
       - w_a
       - bloed
       - nr_ausg
       - flg_typ
       - reib
       - dateiname_prof
       - ob_alpha
       - P1

                                                    Wolf Plöger, 28.05.2006


Kalypso 1.1b   02. Juni 2006
---------------------------
1.)  Löschen des COMMON-Blocks P1. Alle variablen stehen nun über
     MOD_INI zur Verfügung.

2.)  Löschen des COMMON-Blocks FLG_TYP. Fliessgesetz wird nun
     in MOD_INI durch die Variable FLIESSGESETZ definiert.

3.)  Löschen des COMMON-Blocks P4. ifg wurde komplett durch
     Fliessgesetzdefinition in MOD_INI ersetzt. BETTA wird nur
     in VERLUSTE verwendet und dort lokal definiert.

4.)  Löschen des COMMON-Blocks W_A. Iterationsart wird nun in
     MOD_INI gespeichert.

5.)  Löschen des COMMON-Blocks REIB. Art des Reibungsverlustes
     wird nun in MOD_INI gespeichert.

6.)  Löschen des COMMON-Blocks BLOED. Wurde nur in WSP verwendet.

                                                    Wolf Plöger, 02.06.2006

Kalypso 1.1c   03. Juni 2006
---------------------------
1.)  Analysieren des Übergabefehlers von MENGF-OVRLA und MENGL-PUNLA.

                                                    Wolf Plöger, 03.06.2006

Kalypso 1.1d   06. Juni 2006
---------------------------
1.)  Behebung des Übergabefehlers von MENGF-OVRLA und MENGL-PUNLA.

                                                    Wolf Plöger, 06.06.2006

Kalypso 1.1e   06. Juni 2006
---------------------------
1.)  Explizite Definition aller Variablen in WSPBER, dabei Behebung eines
     Fehlers beim Hochzaehlen der Blattnummer (NBLATT). Trotzdem immer
     BUG bei der Blattzahl bei WQ-Tabellen.

2.)  Bei Berechnung mit KALYPSO-Oberfläche wird die Ausgabe der 
     WQ-Tabellen und Ergebnislisten immer aktiviert.

3.)  Löschen der Datei "mitvor.f90" und Definition einer neuen REAL FUNCTION
     zur Berechnung der mitwirkenden Vorlandbreite GET_MITVOR in
     "globale_funktionen.f90". Aenderung beim Aufruf in PASCHE.

                                                    Wolf Plöger, 06.06.2006