cipk  last update JUNE 22 2005 ADD TO rma10
cipk  last update JULY 30 2004 fix bug in 2-d/1-d test
CIPK  LAST UPDATE JUL 7 2004 ALLOW FOR 1-d ELEMENTS RESTORE TRANSELV 
cipk  last update Dec 13 2000 correct for types other 10
      SUBROUTINE SUBSET
C-

      USE BLK10MOD
      USE BLKSUBMOD
CIPK AUG05      INCLUDE 'BLK10.COM'
CIPK AUG05      INCLUDE 'BLKSUB.COM'
*-
*...... Test for and set submerged weir elements
*-
      if(maxn .eq. 1) then
        DO N=1,NP
	    IF(NFIX(N)/100 .EQ. 12) THEN
            ISUBM(N)=0
	    ELSEIF(NFIX(N)/100 .EQ. 102) THEN
            ISUBM(N)=0
          ELSEIF(NFIX(N)/100 .GT. 100) THEN
C
C     This indicates a boundary node
C
            ISUBM(N)=0
          ELSE
            ISUBM(N)=-1
          ENDIF
        ENDDO
      endif
   
CIPK JUL04 Use TRC to allow for units
      IF(GRAV .GT. 30.) THEN
	  TRC=0.25
	ELSE
	  TRC=0.1
	ENDIF

      DO  NN=1,NE
        IF(IMAT(NN) .NE. 0) THEN
          IF(IMAT(NN) .GT. 903   .AND.  IMAT(NN) .LT. 990) THEN
CIPK JUN05
           IF(NCTREF(IMAT(NN)) .EQ. 0) THEN
cipk dec00
	        if(njt(imat(nn)-900) .eq. 10) then
                if(maxn .ne. 1) go to 332
                ISUBMEL(nn)=0
cipk jul04
                ncn=ncorn(nn)
                IF(NCN .EQ. 8) THEN
                  WRITE(75,6001) 
     +            NN,N,NOP(NN,1),WSLL(NOP(NN,1)),WSLL(NOP(NN,7)),
     +            WHGT(NOP(NN,1)),WHGT(NOP(NN,7)),TRANSEL(NOP(NN,1))
 6001           FORMAT(' SUBSET1',3I6,5F12.3)

CIPK JUL04            IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))+.35) THEN
                  IF(WSLL(NOP(NN,1)) .LT. TRANSEL(NOP(NN,1))) THEN
                    IF(ABS(WSLL(NOP(NN,1))-WSLL(NOP(NN,7))) .LT. TRC)
     +                THEN
     +      
                      IF(WSLL(NOP(NN,7)) .LT. WHGT(NOP(NN,7))) THEN
                        GO TO 331
	                ENDIF
                      IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF

                  WRITE(75,6001) 
     +            NN,N,NOP(NN,3),WSLL(NOP(NN,3)),WSLL(NOP(NN,5)),
     +            WHGT(NOP(NN,3)),WHGT(NOP(NN,5)),TRANSEL(NOP(NN,3))

CIPK JUL04            IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))+.35) THEN
                  IF(WSLL(NOP(NN,3)) .LT. TRANSEL(NOP(NN,3))) THEN
                    IF(ABS(WSLL(NOP(NN,3))-WSLL(NOP(NN,5))) .LT. TRC)
     +                THEN
            
                      IF(WSLL(NOP(NN,5)) .LT. WHGT(NOP(NN,5))) THEN
                        GO TO 331
 	                ENDIF
                      IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF

                  WRITE(75,6001) 
     +            NN,N,NOP(NN,5),WSLL(NOP(NN,5)),WSLL(NOP(NN,3)),
     +            WHGT(NOP(NN,5)),WHGT(NOP(NN,3)),TRANSEL(NOP(NN,5))

CIPK JUL04            IF(WSLL(NOP(NN,5)) .LT. WHGT(NOP(NN,5))+.35) THEN
                  IF(WSLL(NOP(NN,5)) .LT. TRANSEL(NOP(NN,5))) THEN
                    IF(ABS(WSLL(NOP(NN,3))-WSLL(NOP(NN,5))) .LT. TRC)
     +                THEN
             
                      IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))) THEN
                        GO TO 331
	                ENDIF
                      IF(WSLL(NOP(NN,5)) .LT. WHGT(NOP(NN,5))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF

                  WRITE(75,6001) 
     +            NN,N,NOP(NN,7),WSLL(NOP(NN,7)),WSLL(NOP(NN,1)),
     +            WHGT(NOP(NN,7)),WHGT(NOP(NN,1)),TRANSEL(NOP(NN,7))

CIPK JUL04            IF(WSLL(NOP(NN,7)) .LT. WHGT(NOP(NN,7))+.35) THEN
                  IF(WSLL(NOP(NN,7)) .LT. TRANSEL(NOP(NN,7))) THEN
                    IF(ABS(WSLL(NOP(NN,1))-WSLL(NOP(NN,7))) .LT. TRC)
     + 	 	  	    THEN
             
                      IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))) THEN
                        GO TO 331
	                ENDIF
                      IF(WSLL(NOP(NN,7)) .LT. WHGT(NOP(NN,7))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF


c          set isubm for all nodes around a weir element

                  DO L=1,NCORN(NN)
cipk oct00 
                    if(isubm(nop(nn,l)) .eq. -1) then
                      ISUBM(NOP(NN,L))=1
                     elseif(isubm(nop(nn,l)) .eq. 0) then
                      ISUBM(NOP(NN,L))=2
                    else
                      ISUBM(NOP(NN,L))=1
                    endif
                  ENDDO
                  ISUBMEL(nn)=1
                  GO TO 332
	          ELSE

                  WRITE(75,6001) 
     +            NN,N,NOP(NN,1),WSLL(NOP(NN,1)),WSLL(NOP(NN,3)),
     +            WHGT(NOP(NN,1)),WHGT(NOP(NN,3)),TRANSEL(NOP(NN,1))

CIPK JUL04            IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))+.35) THEN
                  IF(WSLL(NOP(NN,1)) .LT. TRANSEL(NOP(NN,1))) THEN
                    IF(ABS(WSLL(NOP(NN,1))-WSLL(NOP(NN,3))) .LT. TRC)
     +                THEN
     +       
                      IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))) THEN
                        GO TO 331
	                ENDIF
                      IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF

                  WRITE(75,6001) 
     +            NN,N,NOP(NN,3),WSLL(NOP(NN,3)),WSLL(NOP(NN,1)),
     +             WHGT(NOP(NN,3)),WHGT(NOP(NN,1)),TRANSEL(NOP(NN,3))

CIPK JUL04            IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))+.35) THEN
                  IF(WSLL(NOP(NN,3)) .LT. TRANSEL(NOP(NN,3))) THEN
                    IF(ABS(WSLL(NOP(NN,1))-WSLL(NOP(NN,3))) .LT. TRC)
     +                THEN
            
                      IF(WSLL(NOP(NN,1)) .LT. WHGT(NOP(NN,1))) THEN
                        GO TO 331
	                ENDIF
                      IF(WSLL(NOP(NN,3)) .LT. WHGT(NOP(NN,3))) THEN
                        GO TO 331
	                ENDIF
	              ELSE
	                GO TO 331
	              ENDIF
	            ENDIF


c          set isubm for all nodes around a weir element

                 DO L=1,3
cipk oct00 
                    if(isubm(nop(nn,l)) .eq. -1) then
                      ISUBM(NOP(NN,L))=1
                    elseif(isubm(nop(nn,l)) .eq. 0) then
                      ISUBM(NOP(NN,L))=2
                    else
                      ISUBM(NOP(NN,L))=1
                    endif
                  ENDDO
                  ISUBMEL(nn)=1
                  GO TO 332
                ENDIF




  331           CONTINUE
                DO L=1,NCORN(NN)
                  if(isubm(nop(nn,l)) .eq. -1) then
                    ISUBM(NOP(NN,L))=0
                  elseif(isubm(nop(nn,l)) .eq. 1) then
                    ISUBM(NOP(NN,L))=2
                  else
                    ISUBM(NOP(NN,L))=0
 
                  endif
                ENDDO

  332           CONTINUE
c             WRITE(75,*) 'SUBSET2',NN,ISUBMEL(NN),ISUBM(24)

                if(isubmel(nn) .eq. 1) then
	            write(75,*) 'At step',icyc,' element ',nn,' submerged'
	          elseif(WSLL(NOP(NN,1)) .GT. WHGT(NOP(NN,1))  .OR.
     +            WSLL(NOP(NN,3)) .GT. WHGT(NOP(NN,3))  .OR.
     +            WSLL(NOP(NN,5)) .GT. WHGT(NOP(NN,5))  .OR.
     +            WSLL(NOP(NN,7)) .GT. WHGT(NOP(NN,7)))  THEN
	            write(75,*) 'At step',icyc,' element ',nn,' flowing'
		      endif

	        else
                DO L=1,NCORN(NN)
                  ISUBM(NOP(NN,L))=0
                ENDDO
	        endif
            ELSE

              ISUBMEL(nn)=0

              DO L=1,NCORN(NN)
                if(isubm(nop(nn,l)) .eq. -1) then
                  ISUBM(NOP(NN,L))=0
                elseif(isubm(nop(nn,l)) .eq. 1) then
                  ISUBM(NOP(NN,L))=2
                else
                  ISUBM(NOP(NN,L))=0
 
                endif
              ENDDO

            ENDIF
          ELSEIF(IMAT(NN) .GT. 900) THEN
              DO L=1,NCORN(NN)
                if(nop(nn,l) .gt. 0) ISUBM(NOP(NN,L))=0
              ENDDO
          ENDIF
        ENDIF

      ENDDO

cipk oct00  reset to for submerged elements

      do n=1,ne
        IF(IMAT(N) .GT. 903   .AND.  IMAT(N) .LT. 990) THEN
          if(ncorn(n) .eq. 8) then
            if(isubmel(n) .eq. 1) then
              do k=2,ncorn(n),2
                n2=nop(n,k)
                if(isubm(n2) .eq. 2) then
                  if(ibn(n2) .eq. 20) then
                    ibn(n2)=21
                  elseif(ibn(n2) .eq. 21) then
                    ibn(n2)=20
                  endif
                elseif(isubm(n2) .eq. 1) then
                  if(ibn(n2) .eq. 11) then
                    ibn(n2)=20
                  endif
                endif
              enddo
            endif
          endif
        ENDIF
      enddo 
c       IF(MAXN .EQ. 1) THEN
C 	  WRITE(145,*) 'IBN AND ISUBM'
C 	  DO N=1,NP
C           WRITE(145,'(3I8,F12.3)') N,IBN(N),ISUBM(N),ALFA(N)   
C         ENDDO
c       ENDIF

      RETURN
      END
