features für Kalypso bis dahin implementiert

Polynomansatz
-------------
- Implementierung eines alternativen eindimensionalen Ansatzes für natürliche Fließgewässer mittels Abbildung durch Polynomfunktionen
  - Implementierung basiert auf den Komponenten WasserTIEFE und Fließgeschwindigkeit
  - Implementierung berücksichtigt Polynome bis zum Grad 4 (5 Koeffizienten). Es können beliebig viele Polynome verwendet werden. Dazu müssen allerdings die Gültigkeitsbereiche eindeutig definiert sein
  - Implementierung einer automatischen Interpolation von Profilen zwischen Originalprofilen. Polynome werden gewichtet nach Entfernung zu den Nachbarn interpoliert.

1D-2D-Kopplung
--------------
- Implementierug einer generellen Modellkopplung zwischen 1D- und 2D-Bereichen. Die Kopplung ist bislang nur für die Kombination mit dem Polynomansatz vorgesehen.
  - Funktionsweise: - Reduktion der Freiheitsgrade auf einen 2D-WasserSTAND
                    - Impulsgleichung 1D wird ersetzt mit Identitätsbedingung, dass 2D-Linienabfluss gleich dem 1D-Kopplungsknotenabfluss sein muss.
                    - Kontinuitätsgleichung 1D bleibt bestehen, wird aber nur von einer Seite gespeist.
                    - Impulsgleichungen 2D werden durch eine Bedingung für den nötigen spezifischen Abfluss ersetzt. Auf der Basis des 1D-Abflusses und WasserSTANDES wird eine q-Verteilung bestimmt, die jeweils an den Knoten eingehalten werden muss.
                    - Kontinuitätsgleichungen 2D werden auf eine einzige Kontinuitätsgleichung reduziert.

Bauwerksimplementierung
-----------------------
- Implementierung der Interpolation aus Kurvenscharen anstelle einer tabellarischen Interpolation; außerdem Verwendung von Energiehöhen, um bei Abflussnull weiter rechnen zu können.
  - Verwendung von Kurvenscharen, d.h. Stützstellenauswertung mittels linearer Funktionen
  - Funktionen Oberwasserstand als Funktion des Unterwasserstandes bei gegebenem Q. Je Abfluss Q ein funktionaler Zusammenhang.
  - Verwendung von Energiehöhen zur Darstellung

Randbedingungen
---------------
- Zusätzlich zur originalen RMA 10S Methode werden Q-Ränder nun per Verteilungsberechnung bestimmt. Der Vorteil ist, dass schon am Rand eine sinnvolle v-Verteilung vorhanden ist, so dass das Modell in der Länge aussagekräftiger wird.
- Einbau von HQ-Randbedingungen als Tabellenfunktion

autoconverge
------------
- Einbau des gesonderten Programms autoconverge aber ohne Tests.

Rauheitskorrektur
-----------------
- Benutzer kann Rauheitswerte korrigieren. Dabei können die festen Rauheitsparameter der Rauheitsklassen bestehen bleiben und nur die Elemente mit einem Faktor auf die entsprechenden Parameter verändert werden.

History geführt ab dem 27.02.2008
---------------------------------
- Kopplung hat starke Probleme bei der Kontinuität verursacht. Grundsätzlich haben Modelle konvergiert, aber der Abfluss ist immer kleiner geworden mit fortschreitender Berechnung. Die numerische Ursache war, dass die Abflussidentität auf der 2D- und 1D-Seite sich jeweils hoch oder runter geschaukelt haben. Alternativ wurden nun die Impulsgleichungen auf der 2d-Seite beibehalten und der WasserSTAND der 1D-Seite als Rand verwendet.
  - Impulsgleichungen 2D werden durch den WasserSTAND auf der 1D-Seite berandet (innere Randbedingung).
  - dies ist bisher nur 2D-1D ERFOLGREICH getestet.
  
Änderungen 12.03.2008
---------------------
bugfix - H-Q-Beziehung als Randbedingung in coef1DFE hat nicht die korrekten Wasserstände berücksichtigt.
(coef1DFE)
bugfix - ErrorMessagesAndStop had wrong entry
(ErrorMessagesAndStop)

Nico Schrage


Änderungen 27.05.2008
---------------------
Mit dem 27.05.2008 wurde ein Versionstag eingeführt. Die erste Version heißt v_0_0_1. Sie ist Grundlage des Vergleiches von RMA10S 3.5g mit RMA10SK. Ab diesem Punkt muss geprüft werden, inwiefern Änderungen gegenüber RMA10S 3.5g eingetreten sind. Von der Version aus wird exakt dokumentiert, was sich im Detail geändert hat.
Außerdem wurde mit dem Datum ein Branch eingeführt, der dazu gedacht ist, die Subroutinen zu aktualisieren, d.h. auf f90 zu bringen und veraltete Strukturen (z.B. Jumpmarks) zu eliminieren.

Version 0.0.1 (tag gesetzt)
---------------------------
001.) initialer Startpunkt für Versionierung

--- Nico Schrage, 27.05.2008

Version 0.0.2/ Version 1.0.0 (laufende Änderungen)
-------------------------------------------------

!comment: Enumeration was not done in a consequent way. Numbering 1.0.0 is now up to date. Sotware is called rma10sk now.

001.) Neuschreiben der Routinen DEL, REWET nach neuer Struktur; Löschen aller Sprungmarken
      und Strukturieren der Schleifen
002.) rma10.for wurde nicht korrekt aus HEAD übernommen in Version 0.0.1. sie muss mit
      Datei-Version 1.32 von HEAD überschrieben werden für Version 0.0.1

--- Nico Schrage, 27.05.2008 (0.0.2beta1/ 1.0.0beta1)

003.) Anpassung des rewettings an Marsh-Algorithmus. Dazu wird zunächst die "reale
      Fließtiefe" über der slot Tiefe des Marshbereiches bestimmt. Daraufhin wird der
      Wasserstand über die slot-Tiefe der benachbarten Modellknoten berechnet und die
      Wassertiefe in die Rechentiefe (virtuelle Fließtiefe) umgerechnet. Diese Option
      läuft parallel zur alten Implementierung, in der der Marsh-Algorithmus nicht
      berücksichtigt wird.
004.) Berücksichtigung von head losses beim rewetting ausgeschaltet; HLOS wird weiterhin
      berechnet, jedoch beim Extrapolieren der Werte nach außen nicht berücksichtigt. Kann
      ohne Probleme wieder eingeschaltet werden.
005.) Format updates in coef11nt.for: Loops 290, 360 and 365 were changed to become 'normal' do-loops
006.) Minor change in RMA10.for without relevance (splitting a line into to lines)
007.) Write out kilometer if present to the list of changes in the console output: Purpose is to
      find the problematic position of 1D-nodes, that were interpolated. From those nodes,
      the user doesn't know, where it is accept with the knowledge of the kilometer.
008.) bug in LOAD3.FOR: Initializing NodeIsDry was done with the wrong running variable
009.) bug in input.for: testoutput was initialized, if C7 line was not available
010.) catch ERROR in input.for, if user defines more than 90 iterations in steady or unsteady definition.
      Introduce new Error messages 1008 or 1009 in ErrorMessagesAndStop.for.
011.) Interpolate restart values for 1D midside nodes from the corner nodes, if restart was activated,
      but no restart value is available. It's done in getinit.for.
012.) Move the interpolation from restart values of interpolated nodes to a place after the RESTARTTEST
      loop within getinit. This provides the possiblity to introduce the structures of Kalypso applications
      into the other restart files/ model files, too.
013.) coef1DPolynomials.f90 has more changes (because of equation mistakes):
      - momentum equation should use -sidft instead of + sidft (momentum equation and derivatives)
      - correction in Term A2 in the derivative of the momentum equation over depth, where dv/dt has to be replaced by dh/dt
      - delete old code in Term A1 of the derivative of the momentum equation over depth
      - correction of the time derivative of the derivative of the continuity equation over depth
      - exchange wrong names of terms in the derivative of the continuity equation over depth
014.) Introduce ERROR output into file, if at stage flow boundary conditions, the water stage is out of the specified range.
      The ErrorMessageAndStop subroutine is called from stfltab.for. In ErrorMessageAndStop the errors 4002 and 4003 are introduced

--- Nico Schrage, 05.06.2008 (0.0.2beta2/ 1.0.0beta2)

015.) Correct derivative according to h of dh/dt was not considered. Hence the d^2a/dhdt was wrong. Now derivative is considered.
016.) Correct implementation of flow coefficient on the GAUSS nodes. The flow coefficient was calculated by using the nodal values of the
      element's corner nodes. Correct is to calculate the flow coefficients by the water depth present at the particular GAUSS node for both
      element's corner nodes. According to the linear weighting approximation. The two values should be interpolated between to obtain the
      particular GAUSS node's value.
      
--- Nico Schrage, 10.06.2008 (0.0.2beta5/ 1.0.0beta5)

017.) Cleaning code of coef1DPoly.subroutine by deleting calculations of values for corner nodes of 1D elements. These values are not necessary.
      Deleted: d2ahdh, Intah, qh, dqhdh, d2qhdh, bei, dbeidh, d2beidh
018.) Improve declaration section in FindPolynom.subroutine.

--- Nico Schrage, 12.06.2008 (0.0.2beta6/ 1.0.0beta6)

019.) Correct water stage calculation for marsh nodes in 2D-subroutines at water stage - discharge boundary conditions. Calculation should consider
      the 'real' water stage, i.e. coef25, coef25nt, coef2d, coef2dnt
020.) Add missing declaration in control structure subroutine (cstrc) of ws1 and ws2
021.) Remove output of object number for errors, with no object relation
022.) comments (getinit)
023.) Introduce local copy of upstream and downstream water stages at weirs. These values can be edited. This is necessary if flow direction is turning
      around (wtform)
024.) Move value assigning out of if-statement, when searching for the correct position in the data table of weirs. Comments. (incstrc)
025.) Change the calculation of the average water stage at a certain continuity line. This is done for the calculation of the inner boundary condition
      at 1D-2D-couplings to get the water stage at the 1D-node. Dry nodes of the 2D-line were considered. This is changed. Attention, because this 
      might have an effect on 2D-boundaries with the option QKALYPS
026.) comment concerning consideration of possibly rewetted nodes at 1D-2D-transitions; this has to be done

--- Nico Schrage, 01.07.2008 (0.0.2beta7/ 1.0.0beta7)

027.) comment in update.f90 concerning part, that might be related to 3D
028.) Use Alpha in rma10.subroutine strictly. Alpha is factor of time centering in time derivative. Value of Alpha set back to 1.8. In the future Alpha should
      be a parameter for the user
029.) update loop 651 in inputd.subroutine. It has the same function in unsteady calculations like the loop 2201 in getbc.subroutine for steady state. This loop
      is updated, too. Furthermore, the assignment in getbc was not the same as in inputd. It is also changed.
030.) Activate second derivative term over velocity in momentum equation (Term A2)
031.) Adding some comments in the 1D-junction subroutine (coef1DJunction.sub)
032.) Correct same format descriptor for data in output file in bedsur.sub and bedlbed.sub

--- Nico Schrage, 22.07.2008 (release 1.0.0)

Version 1.0.1 (laufende Änderungen)
-----------------------------------

001.) Introduce "use BLKECOM" module in subroutines and get rid of shared include blke.com file. That module contains residual vector f(80), element stiffnes matrix estifm (80, 80) and node connector ncon
      Affected subroutines/ files are: twodsw, surcof, rdkalypso, front, cstrc2d, cstrc, coefv, coef3d, coef37, coef2dnt, coef25,
      coef1DPolynomials, coef1DJunction, coef11nt, coef11, bslop, blkecom. From the file content blke.com is deleted.
002.) Delete the function CalcPolynomial2 (in PolynomialFunctions.f90). Additionally add another parameter to be given to the polynomial functions, that shows the maximum grade
      of the polynomial to be calculated. (Affects: check.for, coef11.for, coef11nt.for, coef1DJunction, coef1DPolynomials.f90, cstrc.f90, LineTransitionCalc.f90, wtform.f90)
003.) Deactivation of some control output subroutine calls in coef1DPoly.sub
004.) deactivating rm1-file output (Affects: getgeoms.for)
005.) Remove tab characters in insand.for
006.) Add declaration of TDepV in LineTransitionCalc.f90
007.) Update subroutine structure of reply.sub. Get rid of jump marks.
008.) restore a comment from IPK in update.f90
009.) Deactivate some test output code in wavecmdjw2IPK.for
--- committed
010.) Change parameter mel to MaxE to overgive to the Darcy.sub, called from coef2 in coef25.for. mel doesn't have the correct value, which is supposed to be the maximum number of element
011.) Change question for midside node processing, when calculating the inner boundary condition value at transitions. There, the mod-function must be used to identify a midside node. (Affects: coef25.for)
012.) Declaration of variables and of function type updated in DNX.fun (dnx.for) and all functions in funs.for
013.) Changing argument calling lnflo in elflows.for, because, lnflo expects a variable (intent (out)-Attribute) and gets a directly calculated value in the calling line (what is corresponding
      to a constant, that can't take a value from a subroutine). Extracting this to a local copy and passing the copy. Question is generally whether it makes sense, because the changed value is not used anywhere.
014.) Rework dried-out notification for nodes on 2D-side of 1D-2D-line transitions. Don't overgive parameter dset anymore, but make drying section module blkdrmod available in load.sub (Affects: load3.for, rma10.for)
015.) Adapt data type from (not used) global array gl_bedform, used in call of darcy.sub from the coef-subroutines (Affects: ParaKalyps.mod, roughness.f90)
016.) Replace all real (kind = 4) declarations with real (kind = 8) declarations in pasche_trees.f90
017.) In getLineAverageWaterLevel.sub, the parameter d2 is changed to be kind=8, to be consistent with the dummy declaration of amf.sub
018.) Deactivate none working part, i.e. autoconverge. THIS HAS TO BE REVISED!!! (Affects: rma10.for); Additionally small format changes and one not used variable deactivation in statistic.f90
019.) Change wrong format output descriptor in sandbed.for
020.) Format changes and loop update in threed.for
--- committed
021.) Introducing preperation of usage of MathKernelLibrary. That has different changes as consequence.
      - Reading subroutine ginpt must now deal with 88 digits long characters (Affects: inmet.for, input. for)
      - BLK10MOD includes further switch-parameters for the usage of MKL settings in control file
      - Include File Param.com holds some variable changes according to module changes with BLK10MOD (regarding version 8.0 from 8.0)
      - until now, calling of mkl-subroutine is deactivated (only one line in rma10.for); the control flow for calling it, is implemented, referring to version 8.0 from IPK (Affects rma10.for)
      - BLK10 includes now some new arrays, used for MKL. They are initialized in initl.sub
      - file.sub contains now another unit. This collides with a unit, that was introduced here for the usage of stage flow boundary conditions for 1D
022.) For compilation with Intel Fortran Compiler, the 'File=<filename>' command has to be introduced in open statements instead of just giving <filename> on the correct place. (Affects: wtform.f90, input.for)
023.) Change if-statement, because something is possibly be checked for an array entry, that might not exist; just made the if-statement cascading, so that no runtime error can occur (Affects: rewet.for)
--- committed

--- Nico Schrage, 23.07.2008 (1.0.1alpha1)

024.) Change all definitions in wbmmods from kind=4 to kind=8
025.) Upload fileIntel.for, which allows developers to compile with Lahey and Intel compiler
--- committed

--- Nico Schrage, 24.07.2008 (release 1.0.1)

Version 1.0.2 (laufende Änderungen)
-----------------------------------

001.) Delete some testing code in coef25.sub and coef25NT.sub
002.) Manage writing of PRA, PRQ and PRB lines in result file for 2D-nodes. There was a bad check, which is now modernized. Problem was the restart with such a result file.
003.) Activate VO, GA, GO lines for restart and leave inputd.sub earlier, when searching for proper time step to get BCs from. Problem was that restart conditions for H-boundary nodes were changed. (Affects: inputd.for, rdkalypso.f90).
      Now restart is in 2D full functional.

--- Nico Schrage, 28.07.2008 (1.0.2alpha1)

-----------------------------------------------------------------------------------------------------
24.07.2008 Branch 'update subroutines' were merged into the TRUNK. Merged revisions are 4957 to 5252.
-----------------------------------------------------------------------------------------------------

Version 1.1.0 (laufende Änderungen)
-----------------------------------

001.) update automake.fig file; makefile for IntelCompiler doesn't exist yet.
002.) Add commits.future file as roadmap
003.) Add some initial document for guidelines, how to deal with SVN and with rma10sk development
--- Nico Schrage, 24.07.2008


004.) Providing and reading water constituents (Salinity, Temperatur, Sediment and VEL(7,N))from a
       RESTART solution in Kalypso.2d -Files: Reading Values in the 'DF'-Line (degree of Freedom)
       >> SubR RDKALYPSO (--> VEL(4 till 7))
005.) Supporting water constituents at discharge-boundarys(QC) for Kalypso-Boundarys (BSWIT=2 bzw. "KAL_BC")
       >> SubR QGEN (--> QVAL(4 till 6))     
006.) Avoiding the calculation of kinematic Viscosity in SubR KINVIS with Temperature=0 if Heatflux is not activ.
      If Temperature is 0 at a node, the default value TDC = 20°C is used.
      >> SubR KINVIS (TDC and VEL(5,n))
007.) Avoiding the calculation and iteration with negative concentration of sediment in SubR UPDATE. IF concentration
      of sediment is negative at a one its setted to 0.
      >> SubR UPDATE (VEL(6,N))
      
--- Monika Donner, 25.07.2008

008.) (ref. 005. of this release)Remove splitting of loop to speed up execution of code as it was before. (Affects: MKSAND.for, MKTEMP.for, WBMMODS.for)
009.) remove some declarations as it was ment for Intel Compiler, because compiler setting can make it. (Affects QGEN.sub)
010.) Add some more definite declarations in order to have consistent variable passing and errorless debug compilation (BLK10.for, BLK10MOD.for)
010.) deactivate writing of matrix to unit 9919 in coef25.for
011.) Bring TF.for up to date
012.) for usage of pardiso solver:
      - enable front_mkl.sub to use coef1DPoly and coef1DJunction. 
      - at the moment deactivate call of front_pardiso from rma10.for, because it is not available in working way
      - deactivate call of pardiso (twice) in mkl_solver.sub, because if package is not available, it will lead to compilation errors.
013.) consistent variable setting and value assigning in load.sub of integer(kind=4) varialbe nln.
014.) consistency variable adaptation of c_wr in roughness.f90

--- Nico Schrage, 25.07.2008

015.) Get the bugfixes from V_1.0.0 maintenance branch: updates for (V1.0.2alpha1, 28.07.2008)

--- Nico Schrage, 25.07.2008


016.) Providing the friction factor FFACT as a variable over all elements (FFACT(1:maxe)) in order
      to claculate the friction factor per node FFACT_KN for Sediment transport later. Therefore
      FFACT is defined in ParaKalyps and saved as a matrix in all COEF-Routines:
      >> SubR COEF11, COEF11NT, COEF25, COEF25NT, COEF2d, COEF2dNT
      >> SubR ParaKalyps and SubR INITL     
017.) Reading the lambda-Values for each element in the RESTART solution in Kalypso.2d -Files: 
      Reading Values in the 'FR'-Line (Flow resistance)
       >> SubR RDKALYPSO (--> lambda...)  
       >> SubR ErrorMessagesAndStop    
--- Monika Donner, 28.07.2008

018.) Friction factor FFACT loacally: wieder zurück
      >> SubR COEF11, COEF11NT, COEF25, COEF25NT, COEF2d, COEF2dNT, turbulence
      >> SubR ParaKalyps and SubR INITL
019.) Friction factor (FFACT_EL(1:maxe)) in order to calculate friction factor
      per node FFACT_KN for Sediment transport. Therefore FFACT_EL an FFACT_KN
      is defined in BLKSANMOD
      >> SubR BLKSANMOD and SubR INITL 
020.) Preparation of using the Friction factor FFACT_KN in VanRijn, GET_U_STAR 
      >> SubR VANRIJN and SubR GET_U_STAR 
021.) Cleaning up all subroutines in Sediment.for: BEDXCG, SANDX, AWHITE, GET_U_STAR
      and KINVIS: but no changes!!           
--- Monika Donner, 29.07.2008