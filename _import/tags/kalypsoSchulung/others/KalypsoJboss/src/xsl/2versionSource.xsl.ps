%!PS-Adobe-3.0
%%Title: 2versionSource.xsl
%%For: javagis
%%Creator: a2ps version 4.13
%%CreationDate: Thu Nov 14 14:28:53 2002
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 9
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%Requirements: Tumble Duplex 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
%% Pagedevice definitions:
countdictstack
% Push our own mark, since there can be several PS marks pushed depending
% where the failure really occured.
/a2ps_mark
{
%%BeginFeature: *Tumble False
  (<<) cvx exec /Tumble (false) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
%%BeginFeature: *Duplex True
  (<<) cvx exec /Duplex (true) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
} stopped
% My cleartomark
{ /a2ps_mark eq { exit } if } loop
countdictstack exch sub dup 0 gt
{
  { end } repeat
}{
  pop
} ifelse
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   517.970895 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<?xml version="1.0" encoding="utf-8"?>) p n
(<xsl:stylesheet  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">) N
(  <xsl:output method="text"/>) N
(  <xsl:variable name="package" select="/theme/package"/>) N
(  ) N
(  <xsl:template match="/theme">) N
(    <xsl:variable name="themeName">) N
(      <xsl:call-template name="toUpperCase">) N
(        <xsl:with-param name="word" select="@ID"/>) N
(      </xsl:call-template>) N
(    </xsl:variable>) N
() N
(         <!--===================================================================) N
(============-->) N
(         <!--                                                                   ) N
(            -->) N
(         <!--                             SessionBean                           ) N
(            -->) N
(         <!--                                                                   ) N
(            -->) N
(         <!--===================================================================) N
(============-->) N
(         ) N
(         package <xsl:value-of select="$package"/>;) N
(         ) N
(         import javax.naming.InitialContext;) N
(         import javax.rmi.PortableRemoteObject;) N
( ) N
(         import javax.ejb.CreateException;) N
(         import javax.ejb.RemoveException;) N
(         import javax.ejb.FinderException;) N
(         import javax.ejb.EJBException;) N
(         import javax.ejb.SessionBean;) N
(         import javax.ejb.SessionContext;) N
(         import javax.naming.InitialContext;) N
(         import javax.naming.NamingException;) N
(         import java.util.Vector;) N
(         import java.util.Hashtable;) N
(         import java.util.Collection;) N
(         import java.util.Iterator;) N
(         //         import de.tuhh.wb.javagis.model.IdManagerLocalHome;) N
(         import de.tuhh.wb.javagis.model.ElementSession;) N
(         import de.tuhh.wb.javagis.model.ElementLocal;) N
() N
(         //         import de.tuhh.wb.javagis.model.IdManagerLocal;) N
(         import de.tuhh.wb.javagis.model.Tools;    ) N
(         import de.tuhh.wb.javagis.xml.GisTransferObject;) N
(         import de.tuhh.wb.javagis.xml.XmlImport;) N
(         import java.io.PrintWriter;) N
(         import java.io.FileWriter;) N
(         import java.io.File;) N
() N
(         ) N
(         /**) N
(         * ) N
(         * @ejb:bean   name="<xsl:value-of select="$themeName"/>.VersionSession") N
(         *             jndi-name="<xsl:value-of select="$themeName"/>.VersionSes) N
(sion") N
(         *             local-jndi-name="<xsl:value-of select="$themeName"/>.Vers) N
(ionSession") N
(         *             view-type="remote") N
(         *             type="Stateful") N
(         *             cmp-version="2.x") N
(         * @ejb:interface extends="de.tuhh.wb.javagis.model.VersionSession") N
(2versionSource.xsl) (Page 1/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         * @ejb:home extends="de.tuhh.wb.javagis.model.VersionSessionHome") p n
(         * @jboss:remove-table remove="true") N
(         * @ejb:ejb-ref ejb-name="<xsl:value-of select="$themeName"/>.Version") N
(         *              view-type="local") N
(         *              ref-name="ejb/Versions") N
(         * @ejb:ejb-ref ejb-name="<xsl:value-of select="$themeName"/>.IdManager") N
(         *              view-type="local") N
(         *              ref-name="ejb/<xsl:value-of select="$themeName"/>.IdMana) N
(ger") N
(         <xsl:for-each select="/theme/child::*[self::objectClass or self::relati) N
(onClass]">) N
(           <xsl:variable name="anyClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>) N
(           * @ejb:ejb-ref ejb-name="<xsl:value-of select="$themeName"/>.<xsl:val) N
(ue-of select="$anyClass"/>") N
(           *              view-type="local") N
(           *              ref-name="ejb/<xsl:value-of select="$themeName"/>.<xsl) N
(:value-of select="$anyClass"/>") N
(         </xsl:for-each>) N
(         */       ) N
() N
(         public class VersionSessionBean implements SessionBean,de.tuhh.wb.javag) N
(is.xml.KalypsoXmlImportListener) N
(         {) N
(         ) N
(         private VersionLocal importXmlDestinationVersionLocal;) N
(         private IdManagerLocal idManagerLocal;) N
(         private VersionLocalHome myVersionLocalHome;) N
() N
(         private SessionContext ctx=null;) N
(         ) N
() N
(         ) N
(         private transient Hashtable objectIdManagers;) N
(         private transient Hashtable relationIdManagers;) N
(         private transient Hashtable objectLocalHomes;) N
(         private transient Hashtable relationLocalHomes;) N
(         private transient Hashtable importIdMapping;) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public int getSize\(\) throws javax.ejb.FinderException) N
(         {) N
(          Collection col=myVersionLocalHome.findAll\(\);) N
(          return col.size\(\);) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public String getVersionName\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getVersionName\(\);) N
(         }) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void setVersionName\(Object oId,String name\) throws FinderExcepti) N
(on) N
(         {) N
(2versionSource.xsl) (Page 2/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         getVersion\(oId\).setVersionName\(name\);) p n
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public String getVersionProject\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getVersionProject\(\);) N
(         }) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void setVersionProject\(Object oId,String project\) throws FinderE) N
(xception) N
(         {) N
(         getVersion\(oId\).setVersionProject\(project\);) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public String getVersionState\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getVersionState\(\);) N
(         }) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void setVersionState\(Object oId,String state\) throws FinderExcep) N
(tion) N
(         {) N
(         getVersion\(oId\).setVersionState\(state\);) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public String getVersionDescription\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getVersionDescription\(\);) N
(         }) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void setVersionDescription\(Object oId,String description\) throws) N
( FinderException) N
(         {) N
(         getVersion\(oId\).setVersionDescription\(description\);) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public String getVersionHistory\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getVersionHistory\(\);) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void setVersionHistory\(Object oId,String history\) throws FinderE) N
(xception) N
(2versionSource.xsl) (Page 3/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         {) p n
(         getVersion\(oId\).setVersionHistory\(history\);) N
(         }) N
(         ) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Vector getPrimaryKeyList\(\) throws javax.ejb.FinderException) N
(         {) N
(           Collection col=myVersionLocalHome.findAll\(\);) N
(           Vector primaryKeyList=new Vector\(\);) N
(           System.out.println\("VersionSession:  got myObjects \("+col.size\(\)+" el) N
(ements\) ... "\);) N
(           Iterator it=col.iterator\(\);) N
(           while\(it.hasNext\(\)\)) N
(           {) N
(             primaryKeyList.add\(\(\(VersionLocal\) it.next\(\)\).getPrimaryKey\(\)\);) N
(           }) N
(           return primaryKeyList;) N
(         }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Object createVersion\(String project,String name,String state,Str) N
(ing description,String history\) throws CreateException) N
(         {) N
(          Integer newId=idManagerLocal.useId\(\);) N
(          VersionLocal newVersion = myVersionLocalHome.create\(newId\);) N
(          newVersion.setVersionProject\(project\);) N
(          newVersion.setVersionState\(state\);) N
(          newVersion.setVersionName\(name\);) N
(          newVersion.setVersionDescription\(description\);) N
(          newVersion.setVersionHistory\(history\);) N
(          return newId;) N
(         }) N
(         ) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void removeVersion\(Object oId\) throws RemoveException, FinderExc) N
(eption) N
(         {) N
(          getVersion\(oId\).remove\(\);) N
(         }) N
(         ) N
(         /**) N
(         * Bean-logic) N
(         */) N
(         private VersionLocal getVersion\(Object oId\) throws FinderException) N
(         {) N
(          VersionLocal version=myVersionLocalHome.findByPrimaryKey\(\(Integer\)oId\)) N
(;) N
(          return version;) N
(         }) N
(         ) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Vector objectSessions\(Object versionId\)) N
(         throws javax.naming.NamingException,) N
(         java.rmi.RemoteException,) N
(         javax.ejb.CreateException) N
(         {) N
(2versionSource.xsl) (Page 4/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         System.out.println\("request elementSessionObjects"\);) p n
(         Hashtable env=new Hashtable\(\);) N
(         env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContext) N
(Factory"\);) N
(         env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interf) N
(aces"\);) N
(         env.put\("java.naming.provider.url","localhost"\);) N
(         InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(         Vector sessions=new Vector\(\);) N
(         Object objectHome;) N
(         ) N
(         <xsl:for-each select="//objectClass">) N
(           <xsl:variable name="objectClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>) N
(           objectHome= ctx.lookup\("<xsl:value-of select="$themeName"/>.<xsl:valu) N
(e-of select="$objectClass"/>Session"\);) N
(           <xsl:value-of select="$objectClass"/>SessionHome homeOf<xsl:value-of ) N
(select="$objectClass"/>=\(<xsl:value-of select="$objectClass"/>SessionHome\)Portab) N
(leRemoteObject.narrow\(objectHome,<xsl:value-of select="$objectClass"/>SessionHom) N
(e.class\);) N
(           System.out.println\("got ObjectSessionHome..."\);) N
(           sessions.add\(homeOf<xsl:value-of select="$objectClass"/>.create\(\(Inte) N
(ger\)versionId\)\);) N
(           System.out.println\("got objectSession"\);) N
(         </xsl:for-each> ) N
(         return sessions;) N
(        }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Vector relationSessions\(Object versionId\)) N
(         throws javax.naming.NamingException,) N
(         java.rmi.RemoteException,) N
(         javax.ejb.CreateException) N
(         {) N
(          System.out.println\("request relationSessionObjects"\);) N
(          Hashtable env=new Hashtable\(\);) N
(          env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContex) N
(tFactory"\);) N
(          env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.inter) N
(faces"\);) N
(          env.put\("java.naming.provider.url","localhost"\);) N
(          InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(          Vector sessions=new Vector\(\);) N
(          Object objectHome;) N
(         ) N
(         <xsl:for-each select="//relationClass">) N
(           <xsl:variable name="relationClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>) N
(           objectHome= ctx.lookup\("<xsl:value-of select="$themeName"/>.<xsl:valu) N
(e-of select="$relationClass"/>Session"\);) N
(           <xsl:value-of select="$relationClass"/>SessionHome homeOf<xsl:value-o) N
(f select="$relationClass"/>=\(<xsl:value-of select="$relationClass"/>SessionHome\)) N
(PortableRemoteObject.narrow\(objectHome,<xsl:value-of select="$relationClass"/>Se) N
(ssionHome.class\);) N
(2versionSource.xsl) (Page 5/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(           System.out.println\("got RelationSessionHome..."\);) p n
(           sessions.add\(homeOf<xsl:value-of select="$relationClass"/>.create\(\(In) N
(teger\)versionId\)\);) N
(           System.out.println\("got relationSession"\);) N
(         </xsl:for-each> ) N
(         return sessions;) N
(        }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void exportToXml\(Object versionId,String fileName\) throws javax.) N
(naming.NamingException,) N
(         java.io.IOException,) N
(         java.rmi.RemoteException,) N
(         javax.ejb.CreateException) N
(         {) N
(           Vector objectSessions=objectSessions\( versionId\);) N
(           Vector relationSessions=relationSessions\( versionId\);) N
(           PrintWriter out=new PrintWriter\(new FileWriter\(fileName\)\);) N
(           Tools.genXmlTag\(out,"?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?"\);) N
(           Tools.genXmlTag\(out,"theme"\);) N
(           out.close\(\);  // ToDo: use LocalInterfaces to avoid many file-open/cl) N
(osing-actions) N
(           for\(int i=0;i<![CDATA[< ]]>objectSessions.size\(\);i++\)) N
(           {) N
(            ElementSession session=\(ElementSession\)objectSessions.elementAt\(i\);) N
(            session.toXML\(fileName\);) N
(           }) N
(           for\(int i=0;i<![CDATA[< ]]>relationSessions.size\(\);i++\)) N
(           {) N
(            ElementSession session=\(ElementSession\)relationSessions.elementAt\(i\)) N
(;) N
(            session.toXML\(fileName\);) N
(           }) N
(           out=new PrintWriter\(new FileWriter\(fileName,true\)\);) N
(           Tools.genXmlTag\(out,"/theme"\);) N
(           out.close\(\);  ) N
(         }) N
(         public void setSessionContext\(SessionContext ctx\)) N
(         {) N
(         this.ctx=ctx;) N
(         }) N
() N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public int getNumberOfObjects\(Object oId\) throws FinderException) N
(         {) N
(         return getVersion\(oId\).getNumberOfObjects\(\);) N
(         }) N
() N
() N
(         /**) N
(         * @ejb:create-method) N
(         */) N
(         public void ejbCreate\(\) throws CreateException) N
(         {) N
(           System.out.println\("vector... "\);) N
(           Hashtable env=new Hashtable\(\);) N
(           env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingConte) N
(xtFactory"\);) N
(           env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.inte) N
(2versionSource.xsl) (Page 6/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(rfaces"\);) p n
(           env.put\("java.naming.provider.url","localhost"\);) N
(           System.out.println\("context... "\); ) N
(           importXmlDestinationVersionLocal=null;) N
(           try) N
(           {) N
(             InitialContext ctx=new InitialContext\(env\);) N
(             myVersionLocalHome =\(VersionLocalHome\)) N
(             ctx.lookup\("java:comp/env/ejb/Versions"\);) N
(             System.out.println\("got VersionLocalHome... "\);) N
(             IdManagerLocalHome idManagerLocalHome =\(IdManagerLocalHome\) ctx.loo) N
(kup\("java:comp/env/ejb/<xsl:value-of select="$themeName"/>.IdManager"\); ) N
(             System.out.println\("got IdManagerLocalHome... "\);) N
(             try) N
(             { ) N
(               idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of) N
( select="$themeName"/>.Version"\);) N
(             }) N
(             catch\(FinderException e\)) N
(             {) N
(               System.out.println\(e.getMessage\(\)\);) N
(               System.out.println\("maybe IdManager has not been created for this) N
( table, trying ...."\);) N
(               idManagerLocalHome.create\("<xsl:value-of select="$themeName"/>.Ve) N
(rsion"\);) N
(               idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of) N
( select="$themeName"/>.Version"\);) N
(               System.out.println\("yes, got it"\);) N
(             }) N
(           }) N
(           catch\(FinderException e\)) N
(           {) N
(             throw\(new CreateException\(e.getMessage\(\)\)\);) N
(           }         ) N
(           catch\(NamingException e\)) N
(           {) N
(             throw\(new CreateException\(e.getMessage\(\)\)\);) N
(           }          ) N
(         }         ) N
(         ) N
(         public void ejbActivate\(\) // prepare for activate) N
(         {) N
(           System.out.println\("aktivate..."\);) N
(         }) N
(         ) N
(         public void ejbRemove\(\) // free recources) N
(         {    ) N
(           idManagerLocal=null;) N
(           myVersionLocalHome=null;) N
(           System.out.println\("remove..."\);) N
(         }) N
(         ) N
(         public void ejbPassivate\(\) // prepare for passivate) N
(         {) N
(           System.out.println\("passivate..."\);) N
(         }) N
(         ) N
(         ) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Hashtable returnObjectLocalHomes\(\)) N
(         throws javax.naming.NamingException,) N
(2versionSource.xsl) (Page 7/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         javax.ejb.CreateException,) p n
(         javax.ejb.FinderException) N
(         {) N
(         Hashtable env=new Hashtable\(\);) N
(         env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContext) N
(Factory"\);) N
(         env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interf) N
(aces"\);) N
(         env.put\("java.naming.provider.url","localhost"\);) N
(         InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(         Hashtable objectLocalHomes=new Hashtable\(\);         ) N
() N
(         <xsl:for-each select="//objectClass">) N
(           <xsl:variable name="objectClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>           ) N
(           objectLocalHomes.put\("<xsl:value-of select="@ID"/>", ctx.lookup\("java) N
(:comp/env/ejb/<xsl:value-of select="$themeName"/>.<xsl:value-of select="$objectC) N
(lass"/>"\)\);) N
(         </xsl:for-each> ) N
(         return objectLocalHomes;) N
(        }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Hashtable returnObjectIdManagers\(\)) N
(         throws javax.naming.NamingException,) N
(         javax.ejb.CreateException,) N
(         javax.ejb.FinderException) N
(         {) N
(         Hashtable env=new Hashtable\(\);) N
(         env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContext) N
(Factory"\);) N
(         env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interf) N
(aces"\);) N
(         env.put\("java.naming.provider.url","localhost"\);) N
(         InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(         Hashtable idManagers=new Hashtable\(\);) N
() N
(         IdManagerLocalHome idManagerLocalHome =\(IdManagerLocalHome\) ctx.lookup\() N
("java:comp/env/ejb/<xsl:value-of select="$themeName"/>.IdManager"\); ) N
(         IdManagerLocal idManagerLocal;) N
() N
(         <xsl:for-each select="//objectClass">) N
(           <xsl:variable name="objectClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>) N
(           ) N
(           try) N
(           { ) N
(            idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of se) N
(lect="$themeName"/>.<xsl:value-of select="$objectClass"/>"\);) N
(           }) N
(           catch\(FinderException e\)) N
(           {) N
(            System.out.println\(e.getMessage\(\)\);) N
(            System.out.println\("maybe IdManager has not been created for this ta) N
(2versionSource.xsl) (Page 8/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(ble, trying ...."\);) p n
(            idManagerLocalHome.create\("<xsl:value-of select="$themeName"/>.<xsl:) N
(value-of select="$objectClass"/>"\);) N
(            idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of se) N
(lect="$themeName"/>.<xsl:value-of select="$objectClass"/>"\);) N
(            System.out.println\("yes, got it"\);) N
(           }) N
(           System.out.println\("IdManagerKey. <xsl:value-of select="@ID"/>"\);) N
(           idManagers.put\("<xsl:value-of select="@ID"/>",idManagerLocal\);) N
(         </xsl:for-each> ) N
(         return idManagers;) N
(        }) N
(         ) N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Hashtable returnRelationLocalHomes\(\)) N
(         throws javax.naming.NamingException,) N
(         javax.ejb.CreateException,) N
(         javax.ejb.FinderException) N
(         {) N
(         Hashtable env=new Hashtable\(\);) N
(         env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContext) N
(Factory"\);) N
(         env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interf) N
(aces"\);) N
(         env.put\("java.naming.provider.url","localhost"\);) N
(         InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(         Hashtable relationLocalHomes=new Hashtable\(\);) N
(         ) N
(         <xsl:for-each select="//relationClass">) N
(           <xsl:variable name="relationClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>           ) N
(           relationLocalHomes.put\("<xsl:value-of select="@ID"/>", ctx.lookup\("ja) N
(va:comp/env/ejb/<xsl:value-of select="$themeName"/>.<xsl:value-of select="$relat) N
(ionClass"/>"\)\);) N
(         </xsl:for-each> ) N
(         return relationLocalHomes;) N
(        }) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public Hashtable returnRelationIdManagers\(\)) N
(         throws javax.naming.NamingException,) N
(         javax.ejb.CreateException,) N
(         javax.ejb.FinderException) N
(         {) N
(         Hashtable env=new Hashtable\(\);) N
(         env.put\("java.naming.factory.initial","org.jnp.interfaces.NamingContext) N
(Factory"\);) N
(         env.put\("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interf) N
(aces"\);) N
(         env.put\("java.naming.provider.url","localhost"\);) N
(         InitialContext ctx=new InitialContext\(env\);) N
(         ) N
(         Hashtable idManagers=new Hashtable\(\);) N
() N
(         IdManagerLocalHome idManagerLocalHome =\(IdManagerLocalHome\) ctx.lookup\() N
("java:comp/env/ejb/<xsl:value-of select="$themeName"/>.IdManager"\); ) N
(2versionSource.xsl) (Page 9/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         IdManagerLocal idManagerLocal;) p n
(         ) N
(         <xsl:for-each select="//relationClass">) N
(           <xsl:variable name="relationClass">) N
(             <xsl:call-template name="toUpperCase">) N
(               <xsl:with-param name="word" select="@ID"/>) N
(             </xsl:call-template>) N
(           </xsl:variable>) N
(           ) N
(           try) N
(           { ) N
(            idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of se) N
(lect="$themeName"/>.<xsl:value-of select="$relationClass"/>"\);) N
(           }) N
(           catch\(FinderException e\)) N
(           {) N
(            System.out.println\(e.getMessage\(\)\);) N
(            System.out.println\("maybe IdManager has not been created for this ta) N
(ble, trying ...."\);) N
(            idManagerLocalHome.create\("<xsl:value-of select="$themeName"/>.<xsl:) N
(value-of select="$relationClass"/>"\);) N
(            idManagerLocal=idManagerLocalHome.findByPrimaryKey\("<xsl:value-of se) N
(lect="$themeName"/>.<xsl:value-of select="$relationClass"/>"\);) N
(            System.out.println\("yes, got it"\);) N
(           }) N
(           idManagers.put\("<xsl:value-of select="@ID"/>",idManagerLocal\);) N
(         </xsl:for-each> ) N
(         return idManagers;) N
(        }) N
(         ) N
() N
(         /**) N
(         * @ejb:interface-method) N
(         */) N
(         public void importFromXml\(Object vId,String fileName\) throws) N
(         javax.naming.NamingException,) N
(         javax.ejb.CreateException,) N
(         javax.ejb.FinderException,) N
(         java.io.IOException,) N
(         org.xml.sax.SAXException) N
(         {) N
(         System.out.println\("VersionSession: importFromXml"\);) N
(         System.out.println\("VersionSession: get ObjectIdManagers"\);) N
(         this.objectIdManagers=returnObjectIdManagers\(\);) N
(         System.out.println\(" got it: "+objectIdManagers.toString\(\)\);) N
(         ) N
(         System.out.println\("VersionSession: get RelationIdManagers"\);) N
(         this.relationIdManagers=returnRelationIdManagers\(\);) N
(         System.out.println\(" got it: "+relationIdManagers.toString\(\)\);) N
() N
(         System.out.println\("VersionSession: get ObjectLocalHomes"\);) N
(         this.objectLocalHomes=returnObjectLocalHomes\(\);) N
(         System.out.println\(" got it: "+objectLocalHomes.toString\(\)\);) N
(         ) N
(         System.out.println\("VersionSession: get RelationLocalHomes"\);) N
(         this.relationLocalHomes=returnRelationLocalHomes\(\);) N
(         System.out.println\(" got it: "+relationLocalHomes.toString\(\)\);) N
() N
(         this.importIdMapping=new Hashtable\(\);) N
() N
(         XmlImport xmlImport=new XmlImport\(fileName,this\);) N
(         this.importXmlDestinationVersionLocal=getVersion\(vId\);) N
(         xmlImport.start\(\);) N
() N
(2versionSource.xsl) (Page 10/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         }) p n
(         ) N
() N
(         public void importObject\(GisTransferObject gisTransferObject\)) N
(         {) N
() N
(          String tableName=gisTransferObject.getTableName\(\);) N
(          System.out.println\("importObject: to tableName"+tableName\);  ) N
(         //          Object oId=\(\(IdManagerLocal\) idManagerObjectobjectIdManager) N
(s.get\(tableName\)\).useId\(\);) N
(          try) N
(          {) N
(           if\(objectLocalHomes.containsKey\(tableName\)\)) N
(           {) N
(            // Objekte:) N
(            Object idManagerObject=objectIdManagers.get\(tableName\);) N
(            System.out.println\("got IdManagerObject"\);) N
(            Object oId=\(\(IdManagerLocal\) idManagerObject\).useId\(\);) N
(            <xsl:for-each select="//objectClass">) N
(              <xsl:variable name="objectClass">) N
(                <xsl:call-template name="toUpperCase">) N
(                  <xsl:with-param name="word" select="@ID"/>) N
(                </xsl:call-template>) N
(              </xsl:variable>           ) N
(              if\("<xsl:value-of select="@ID"/>".equals\(tableName\)\)) N
(              {) N
(              System.out.println\("importObject: create New Object"\);) N
() N
(              Object objectLocalHome = objectLocalHomes.get\(tableName\);) N
() N
(              System.out.println\("importObject: got objectLocalHome"\);) N
() N
(              <xsl:value-of select="$objectClass"/>LocalHome specialLocalHome=\(<) N
(xsl:value-of select="$objectClass"/>LocalHome\)objectLocalHome;) N
() N
(              System.out.println\("importObject: got scecialLocalHome"\);) N
() N
(              Object newObject= specialLocalHome.create\(\(Integer\)oId,importXmlDe) N
(stinationVersionLocal\);) N
(              ) N
(              if\(!importIdMapping.containsKey\(tableName\)\)) N
(               importIdMapping.put\(tableName,new Hashtable\(\)\);) N
(              \(\(Hashtable\)importIdMapping.get\(tableName\)\).put\(gisTransferObject.) N
(getIdentifier\(\),oId\);) N
(              System.out.println\(gisTransferObject.getIdentifier\(\)+" maps to "+o) N
(Id\);) N
(              System.out.println\("importObject: created new Object"\);) N
() N
(              ElementLocal localElement=\(ElementLocal\) newObject;) N
() N
(              System.out.println\("importObject: casted new Object"\);) N
() N
(              localElement.loadGisTransferObject\(gisTransferObject\);) N
(              ) N
(              }) N
(            </xsl:for-each>) N
(           }                       ) N
(           else if\(relationLocalHomes.containsKey\(tableName\)\)) N
(           {) N
(            // Relationen) N
(            Object idManagerObject=relationIdManagers.get\(tableName\);) N
(            System.out.println\("got IdManagerObject"\);) N
(            Object oId=\(\(IdManagerLocal\) idManagerObject\).useId\(\);) N
(            <xsl:for-each select="//relationClass">) N
(2versionSource.xsl) (Page 11/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(              <xsl:variable name="relationClass">) p n
(                <xsl:call-template name="toUpperCase">) N
(                  <xsl:with-param name="word" select="@ID"/>) N
(                </xsl:call-template>) N
(              </xsl:variable>           ) N
(              if\("<xsl:value-of select="@ID"/>".equals\(tableName\)\)) N
(              {) N
(               System.out.println\("importObject: create New Realtion"\);) N
(               Object relationLocalHome = relationLocalHomes.get\(tableName\);) N
(               System.out.println\("importObject: got relationLocalHome"\);) N
(               <xsl:value-of select="$relationClass"/>LocalHome specialLocalHome) N
(=\(<xsl:value-of select="$relationClass"/>LocalHome\)relationLocalHome;) N
(               System.out.println\("importObject: got specialLocalHome"\);) N
(               String srcTable=gisTransferObject.getRelationSrcTable\(\);) N
(               String destTable=gisTransferObject.getRelationDestTable\(\);) N
(               String srcId=gisTransferObject.getRelationSrcIdentifier\(\);) N
(               String destId=gisTransferObject.getRelationDestIdentifier\(\);) N
(               // find src-DB-Object) N
(               if\(importIdMapping.containsKey\(srcTable\) <![CDATA[&& ]]> importId) N
(Mapping.containsKey\(destTable\)\)) N
(               {) N
(                System.out.println\("importObject: importMapping..."\);) N
(                Object srcDbId = \(\(Hashtable\)importIdMapping.get\( srcTable\)\).get) N
(\( srcId\);) N
(                Object destDbId= \(\(Hashtable\)importIdMapping.get\(destTable\)\).get) N
(\(destId\);) N
(                Object srcObject=null;;) N
(                Object destObject=null;               ) N
(                System.out.println\("importObject: xmlIds: from "+srcId.toString\() N
(\)+" to "+destId.toString\(\)\);) N
(                System.out.println\("importObject:  dbIds: from "+srcDbId.toStrin) N
(g\(\)+" to "+destDbId.toString\(\)\);) N
(                <xsl:for-each select="fromObjectClass">) N
(                  <xsl:variable name="srcClass">) N
(                    <xsl:call-template name="toUpperCase">) N
(                      <xsl:with-param name="word" select="@ref"/>) N
(                    </xsl:call-template>) N
(                  </xsl:variable>) N
(                  if\("<xsl:value-of select="@ref"/>".equals\(srcTable\)\)) N
(                  srcObject=\(\(<xsl:value-of select="$srcClass"/>LocalHome\)object) N
(LocalHomes.get\(srcTable\)\).findByPrimaryKey\(\(Integer\)srcDbId\);) N
(                </xsl:for-each>) N
(                <xsl:for-each select="toObjectClass">) N
(                  <xsl:variable name="destClass">) N
(                    <xsl:call-template name="toUpperCase">) N
(                      <xsl:with-param name="word" select="@ref"/>) N
(                    </xsl:call-template>) N
(                  </xsl:variable>) N
(                  if\("<xsl:value-of select="@ref"/>".equals\(destTable\)\)) N
(                   destObject=\(\(<xsl:value-of select="$destClass"/>LocalHome\)obj) N
(ectLocalHomes.get\(destTable\)\).findByPrimaryKey\(\(Integer\)destDbId\);) N
(                </xsl:for-each>) N
(                if\(srcObject!=null <![CDATA[&& ]]> destObject != null\)) N
(                {) N
(                 Object newObject=specialLocalHome.create\(\(Integer\)oId,importXml) N
(DestinationVersionLocal,srcObject,destObject\);) N
(                 System.out.println\("importObject: created new Relation"\);) N
(                 ElementLocal localElement=\(ElementLocal\) newObject;) N
(                 System.out.println\("importObject: casted new Relation"\);) N
(                 localElement.loadGisTransferObject\(gisTransferObject\);) N
(                }) N
(               }) N
(              }) N
(            </xsl:for-each>) N
(2versionSource.xsl) (Page 12/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(           }                       ) p n
(          } ) N
(          catch\(javax.ejb.CreateException e\)) N
(          {) N
(           System.out.println\("xmlImport:"+e.getMessage\(\)\);) N
(          }) N
(            <xsl:if test="count\(//relationClass\) &gt; 0">) N
(              catch\(javax.ejb.FinderException e\)) N
(              {) N
(              System.out.println\("xmlImport:"+e.getMessage\(\)\);) N
(              }) N
(            </xsl:if>) N
(         }) N
() N
() N
() N
(         }) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(         ) N
(         package <xsl:value-of select="$package"/>;) N
(         ) N
(         import javax.ejb.CreateException;) N
(         import javax.ejb.EntityBean;) N
(         import javax.ejb.EntityContext;) N
(         import javax.ejb.FinderException;) N
() N
(         import javax.naming.InitialContext;) N
() N
(         ) N
(            //         import de.tuhh.wb.javagis.model.IdManagerLocalHome;) N
(            //         import de.tuhh.wb.javagis.model.IdManagerLocal;) N
(         import de.tuhh.wb.javagis.model.ElementLocal;) N
(         import de.tuhh.wb.javagis.model.ElementSession;) N
(         import de.tuhh.wb.javagis.model.Tools;    ) N
(         ) N
(2versionSource.xsl) (Page 13/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         import java.util.Hashtable;) p n
(         import java.util.ArrayList;) N
(         import java.util.Collection;) N
(         import java.util.Iterator;  ) N
() N
(         <!--===================================================================) N
(============-->) N
(         <!--                                                                   ) N
(            -->) N
(         <!--                             EntityBean                            ) N
(            -->) N
(         <!--                                                                   ) N
(            -->) N
(         <!--===================================================================) N
(============-->) N
(         ) N
(         /**) N
(         * @ejb:bean   name="<xsl:value-of select="$themeName"/>.Version") N
(         *             jndi-name="ejb/<xsl:value-of select="$themeName"/>.Versio) N
(n") N
(         *             local-jndi-name="<xsl:value-of select="$themeName"/>.Vers) N
(ion"    ) N
(         *             view-type="local") N
(         *             type="CMP") N
(         *             cmp-version="2.x") N
(         *             schema="<xsl:value-of select="$themeName"/>_Version") N
(         *             primkey-field="id") N
(         * @ejb:interface local-extends="de.tuhh.wb.javagis.model.VersionLocal") N
(         * @ejb:pk generate="false" class="java.lang.Integer") N
(         * @ejb:ejb-ref ejb-name="<xsl:value-of select="$themeName"/>.Version" v) N
(iew-type="local") N
(         * @ejb:finder signature="java.util.Collection findAll\(\)" query="SELECT ) N
(OBJECT\(a\) FROM <xsl:value-of select="$themeName"/>_Version AS a") N
(         *) N
(         * @ejb:ejb-ref ejb-name="<xsl:value-of select="$themeName"/>.IdManager") N
(         *              view-type="local") N
(         *              ref-name="ejb/<xsl:value-of select="$themeName"/>.IdMana) N
(ger") N
(         *    ) N
(         */) N
(    public abstract class VersionBean implements EntityBean) N
(    {) N
(    ) N
(    private transient EntityContext ctx;    ) N
() N
(    // Relations...    ) N
(    <xsl:for-each select="/theme/child::*[self::objectClass or self::relationCla) N
(ss]">) N
(      <xsl:variable name="objectClass">) N
(        <xsl:call-template name="toUpperCase">) N
(          <xsl:with-param name="word" select="@ID"/>) N
(        </xsl:call-template>) N
(      </xsl:variable>) N
(      /**) N
(      * @ejb:interface-method) N
(      * @ejb:relation name="Versioning-of-<xsl:value-of select="$objectClass"/>") N
(      *               role-name="Version-has-<xsl:value-of select="$objectClass") N
(/>") N
(      */) N
(      public abstract Collection get<xsl:value-of select="$objectClass"/>\(\);) N
(      ) N
(      /**) N
(      * @ejb:interface-method) N
(      */     ) N
(2versionSource.xsl) (Page 14/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (15-16) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      public abstract void set<xsl:value-of select="$objectClass"/>\(Collection c) p n
(ol\);      ) N
(    </xsl:for-each>) N
() N
() N
() N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setId\(Integer objectId\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract Integer getId\(\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setVersionName\(String name\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract String getVersionName\(\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setVersionProject\(String project\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract String getVersionProject\(\);) N
() N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setVersionState\(String state\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract String getVersionState\(\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setVersionDescription\(String description\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(2versionSource.xsl) (Page 15/17) () title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    public abstract String getVersionDescription\(\);        ) p n
(         ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract void setVersionHistory\(String history\);) N
(    ) N
(    /**) N
(    * @ejb:interface-method) N
(    * @ejb:persistent-field) N
(    */) N
(    public abstract String getVersionHistory\(\);) N
() N
(    /**) N
(    * @ejb:interface-method) N
(    */) N
(    public int getNumberOfObjects\(\)) N
(    {) N
(    int number=0;) N
(    <xsl:for-each select="/theme/child::*[self::objectClass or self::relationCla) N
(ss]">) N
(      <xsl:variable name="objectClass">) N
(        <xsl:call-template name="toUpperCase">) N
(          <xsl:with-param name="word" select="@ID"/>) N
(        </xsl:call-template>) N
(      </xsl:variable>) N
(      number+=get<xsl:value-of select="$objectClass"/>\(\).size\(\);) N
(      ) N
(    </xsl:for-each>) N
() N
(    return number;) N
(    }) N
(    ) N
(    /**) N
(    * @ejb:create-method) N
(    */) N
(    public Integer ejbCreate\(Integer id\) throws CreateException) N
(    {) N
(      if\(id == null\)  throw new CreateException\("Id is null :-\("\);) N
(    ) N
(      this.setId\(id\);) N
(      return null;) N
(    }) N
(         ) N
(    public void ejbPostCreate\(Integer objectId\)) N
(    {) N
(    //         this.setChannel\(new java.util.Vector\(\)\); // initializing...) N
(    ) N
(    System.out.println\("postCreate: getChannel"\);) N
(    //     java.util.Collection col = getChannel\(\);) N
(    System.out.println\("Version has "+getNumberOfObjects\(\)+" Objects"\);) N
(    }) N
(    ) N
(    // Methoden des Entity-Bean-Interface:) N
(    public void ejbActivate\(\)) N
(    {}) N
(    public void ejbPassivate\(\)) N
(    {}) N
(    ) N
(    public void setEntityContext\(EntityContext ctx\)) N
(    {) N
(    this.ctx=ctx;) N
(    }) N
(2versionSource.xsl) (Page 16/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage
%%Page: (17) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p n
(    public void unsetEntityContext\(\)) N
(    {) N
(    this.ctx=null;) N
(    }) N
(    ) N
(    public void ejbLoad\(\)) N
(    {}) N
(    public void ejbStore\(\)) N
(    {}) N
(    ) N
(    public void ejbRemove\(\) throws javax.ejb.RemoveException) N
(    {}) N
(    ) N
() N
(   } ) N
(    ) N
(    ) N
(    ) N
() N
(       </xsl:template>) N
(       ) N
(       <xsl:template name="toUpperCase">) N
(         <xsl:param name="word"/>) N
(         <xsl:value-of select="translate\(substring\($word,1,1\),'abcdefghijklmnopq) N
(rstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ'\)" />) N
(         <xsl:value-of select="substring\($word,2\)"/>) N
(       </xsl:template>) N
(       ) N
(     </xsl:stylesheet>) N
(     ) S
(2versionSource.xsl) (Page 17/17) () title
border
grestore
(2versionSource.xsl) () () footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
