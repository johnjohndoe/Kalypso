features f�r Kalypso bis dahin implementiert

Polynomansatz
-------------
- Implementierung eines alternativen eindimensionalen Ansatzes f�r nat�rliche Flie�gew�sser mittels Abbildung durch Polynomfunktionen
  - Implementierung basiert auf den Komponenten WasserTIEFE und Flie�geschwindigkeit
  - Implementierung ber�cksichtigt Polynome bis zum Grad 4 (5 Koeffizienten). Es k�nnen beliebig viele Polynome verwendet werden. Dazu m�ssen allerdings die G�ltigkeitsbereiche eindeutig definiert sein
  - Implementierung einer automatischen Interpolation von Profilen zwischen Originalprofilen. Polynome werden gewichtet nach Entfernung zu den Nachbarn interpoliert.

1D-2D-Kopplung
--------------
- Implementierug einer generellen Modellkopplung zwischen 1D- und 2D-Bereichen. Die Kopplung ist bislang nur f�r die Kombination mit dem Polynomansatz vorgesehen.
  - Funktionsweise: - Reduktion der Freiheitsgrade auf einen 2D-WasserSTAND
                    - Impulsgleichung 1D wird ersetzt mit Identit�tsbedingung, dass 2D-Linienabfluss gleich dem 1D-Kopplungsknotenabfluss sein muss.
                    - Kontinuit�tsgleichung 1D bleibt bestehen, wird aber nur von einer Seite gespeist.
                    - Impulsgleichungen 2D werden durch eine Bedingung f�r den n�tigen spezifischen Abfluss ersetzt. Auf der Basis des 1D-Abflusses und WasserSTANDES wird eine q-Verteilung bestimmt, die jeweils an den Knoten eingehalten werden muss.
                    - Kontinuit�tsgleichungen 2D werden auf eine einzige Kontinuit�tsgleichung reduziert.

Bauwerksimplementierung
-----------------------
- Implementierung der Interpolation aus Kurvenscharen anstelle einer tabellarischen Interpolation; au�erdem Verwendung von Energieh�hen, um bei Abflussnull weiter rechnen zu k�nnen.
  - Verwendung von Kurvenscharen, d.h. St�tzstellenauswertung mittels linearer Funktionen
  - Funktionen Oberwasserstand als Funktion des Unterwasserstandes bei gegebenem Q. Je Abfluss Q ein funktionaler Zusammenhang.
  - Verwendung von Energieh�hen zur Darstellung

Randbedingungen
---------------
- Zus�tzlich zur originalen RMA 10S Methode werden Q-R�nder nun per Verteilungsberechnung bestimmt. Der Vorteil ist, dass schon am Rand eine sinnvolle v-Verteilung vorhanden ist, so dass das Modell in der L�nge aussagekr�ftiger wird.
- Einbau von HQ-Randbedingungen als Tabellenfunktion

autoconverge
------------
- Einbau des gesonderten Programms autoconverge aber ohne Tests.

Rauheitskorrektur
-----------------
- Benutzer kann Rauheitswerte korrigieren. Dabei k�nnen die festen Rauheitsparameter der Rauheitsklassen bestehen bleiben und nur die Elemente mit einem Faktor auf die entsprechenden Parameter ver�ndert werden.

History gef�hrt ab dem 27.02.2008
---------------------------------
- Kopplung hat starke Probleme bei der Kontinuit�t verursacht. Grunds�tzlich haben Modelle konvergiert, aber der Abfluss ist immer kleiner geworden mit fortschreitender Berechnung. Die numerische Ursache war, dass die Abflussidentit�t auf der 2D- und 1D-Seite sich jeweils hoch oder runter geschaukelt haben. Alternativ wurden nun die Impulsgleichungen auf der 2d-Seite beibehalten und der WasserSTAND der 1D-Seite als Rand verwendet.
  - Impulsgleichungen 2D werden durch den WasserSTAND auf der 1D-Seite berandet (innere Randbedingung).
  - dies ist bisher nur 2D-1D ERFOLGREICH getestet.
  
�nderungen 12.03.2008
---------------------
bugfix - H-Q-Beziehung als Randbedingung in coef1DFE hat nicht die korrekten Wasserst�nde ber�cksichtigt.
(coef1DFE)
bugfix - ErrorMessagesAndStop had wrong entry
(ErrorMessagesAndStop)

Nico Schrage


�nderungen 27.05.2008
---------------------
Mit dem 27.05.2008 wurde ein Versionstag eingef�hrt. Die erste Version hei�t v_0_0_1. Sie ist Grundlage des Vergleiches von RMA10S 3.5g mit RMA10SK. Ab diesem Punkt muss gepr�ft werden, inwiefern �nderungen gegen�ber RMA10S 3.5g eingetreten sind. Von der Version aus wird exakt dokumentiert, was sich im Detail ge�ndert hat.
Au�erdem wurde mit dem Datum ein Branch eingef�hrt, der dazu gedacht ist, die Subroutinen zu aktualisieren, d.h. auf f90 zu bringen und veraltete Strukturen (z.B. Jumpmarks) zu eliminieren.

Version 0.0.1 (tag gesetzt)
---------------------------
001.) initialer Startpunkt f�r Versionierung

--- Nico Schrage, 27.05.2008

Version 0.0.2/ Version 1.0.0 (laufende �nderungen)
-------------------------------------------------

!comment: Enumeration was not done in a consequent way. Numbering 1.0.0 is now up to date. Sotware is called rma10sk now.

001.) Neuschreiben der Routinen DEL, REWET nach neuer Struktur; L�schen aller Sprungmarken
      und Strukturieren der Schleifen
002.) rma10.for wurde nicht korrekt aus HEAD �bernommen in Version 0.0.1. sie muss mit
      Datei-Version 1.32 von HEAD �berschrieben werden f�r Version 0.0.1

--- Nico Schrage, 27.05.2008 (0.0.2beta1/ 1.0.0beta1)

003.) Anpassung des rewettings an Marsh-Algorithmus. Dazu wird zun�chst die "reale
      Flie�tiefe" �ber der slot Tiefe des Marshbereiches bestimmt. Daraufhin wird der
      Wasserstand �ber die slot-Tiefe der benachbarten Modellknoten berechnet und die
      Wassertiefe in die Rechentiefe (virtuelle Flie�tiefe) umgerechnet. Diese Option
      l�uft parallel zur alten Implementierung, in der der Marsh-Algorithmus nicht
      ber�cksichtigt wird.
004.) Ber�cksichtigung von head losses beim rewetting ausgeschaltet; HLOS wird weiterhin
      berechnet, jedoch beim Extrapolieren der Werte nach au�en nicht ber�cksichtigt. Kann
      ohne Probleme wieder eingeschaltet werden.
005.) Format updates in coef11nt.for: Loops 290, 360 and 365 were changed to become 'normal' do-loops
006.) Minor change in RMA10.for without relevance (splitting a line into to lines)
007.) Write out kilometer if present to the list of changes in the console output: Purpose is to
      find the problematic position of 1D-nodes, that were interpolated. From those nodes,
      the user doesn't know, where it is accept with the knowledge of the kilometer.
008.) bug in LOAD3.FOR: Initializing NodeIsDry was done with the wrong running variable
009.) bug in input.for: testoutput was initialized, if C7 line was not available
010.) catch ERROR in input.for, if user defines more than 90 iterations in steady or unsteady definition.
      Introduce new Error messages 1008 or 1009 in ErrorMessagesAndStop.for.
011.) Interpolate restart values for 1D midside nodes from the corner nodes, if restart was activated,
      but no restart value is available. It's done in getinit.for.
012.) Move the interpolation from restart values of interpolated nodes to a place after the RESTARTTEST
      loop within getinit. This provides the possiblity to introduce the structures of Kalypso applications
      into the other restart files/ model files, too.
013.) coef1DPolynomials.f90 has more changes (because of equation mistakes):
      - momentum equation should use -sidft instead of + sidft (momentum equation and derivatives)
      - correction in Term A2 in the derivative of the momentum equation over depth, where dv/dt has to be replaced by dh/dt
      - delete old code in Term A1 of the derivative of the momentum equation over depth
      - correction of the time derivative of the derivative of the continuity equation over depth
      - exchange wrong names of terms in the derivative of the continuity equation over depth
014.) Introduce ERROR output into file, if at stage flow boundary conditions, the water stage is out of the specified range.
      The ErrorMessageAndStop subroutine is called from stfltab.for. In ErrorMessageAndStop the errors 4002 and 4003 are introduced

--- Nico Schrage, 05.06.2008 (0.0.2beta2/ 1.0.0beta2)

015.) Correct derivative according to h of dh/dt was not considered. Hence the d^2a/dhdt was wrong. Now derivative is considered.
016.) Correct implementation of flow coefficient on the GAUSS nodes. The flow coefficient was calculated by using the nodal values of the
      element's corner nodes. Correct is to calculate the flow coefficients by the water depth present at the particular GAUSS node for both
      element's corner nodes. According to the linear weighting approximation. The two values should be interpolated between to obtain the
      particular GAUSS node's value.
      
--- Nico Schrage, 10.06.2008 (0.0.2beta5/ 1.0.0beta5)

017.) Cleaning code of coef1DPoly.subroutine by deleting calculations of values for corner nodes of 1D elements. These values are not necessary.
      Deleted: d2ahdh, Intah, qh, dqhdh, d2qhdh, bei, dbeidh, d2beidh
018.) Improve declaration section in FindPolynom.subroutine.

--- Nico Schrage, 12.06.2008 (0.0.2beta6/ 1.0.0beta6)

019.) Correct water stage calculation for marsh nodes in 2D-subroutines at water stage - discharge boundary conditions. Calculation should consider
      the 'real' water stage, i.e. coef25, coef25nt, coef2d, coef2dnt
020.) Add missing declaration in control structure subroutine (cstrc) of ws1 and ws2
021.) Remove output of object number for errors, with no object relation
022.) comments (getinit)
023.) Introduce local copy of upstream and downstream water stages at weirs. These values can be edited. This is necessary if flow direction is turning
      around (wtform)
024.) Move value assigning out of if-statement, when searching for the correct position in the data table of weirs. Comments. (incstrc)
025.) Change the calculation of the average water stage at a certain continuity line. This is done for the calculation of the inner boundary condition
      at 1D-2D-couplings to get the water stage at the 1D-node. Dry nodes of the 2D-line were considered. This is changed. Attention, because this 
      might have an effect on 2D-boundaries with the option QKALYPS
026.) comment concerning consideration of possibly rewetted nodes at 1D-2D-transitions; this has to be done

--- Nico Schrage, 01.07.2008 (0.0.2beta7/ 1.0.0beta7)

027.) comment in update.f90 concerning part, that might be related to 3D
028.) Use Alpha in rma10.subroutine strictly. Alpha is factor of time centering in time derivative. Value of Alpha set back to 1.8. In the future Alpha should
      be a parameter for the user
029.) update loop 651 in inputd.subroutine. It has the same function in unsteady calculations like the loop 2201 in getbc.subroutine for steady state. This loop
      is updated, too. Furthermore, the assignment in getbc was not the same as in inputd. It is also changed.
030.) Activate second derivative term over velocity in momentum equation (Term A2)
031.) Adding some comments in the 1D-junction subroutine (coef1DJunction.sub)
032.) Correct same format descriptor for data in output file in bedsur.sub and bedlbed.sub

--- Nico Schrage, 22.07.2008 (release 1.0.0)

Version 1.0.1 (laufende �nderungen)
-----------------------------------

001.) Introduce "use BLKECOM" module in subroutines and get rid of shared include blke.com file. That module contains residual vector f(80), element stiffnes matrix estifm (80, 80) and node connector ncon
      Affected subroutines/ files are: twodsw, surcof, rdkalypso, front, cstrc2d, cstrc, coefv, coef3d, coef37, coef2dnt, coef25,
      coef1DPolynomials, coef1DJunction, coef11nt, coef11, bslop, blkecom. From the file content blke.com is deleted.
002.) Delete the function CalcPolynomial2 (in PolynomialFunctions.f90). Additionally add another parameter to be given to the polynomial functions, that shows the maximum grade
      of the polynomial to be calculated. (Affects: check.for, coef11.for, coef11nt.for, coef1DJunction, coef1DPolynomials.f90, cstrc.f90, LineTransitionCalc.f90, wtform.f90)
003.) Deactivation of some control output subroutine calls in coef1DPoly.sub
004.) deactivating rm1-file output (Affects: getgeoms.for)
005.) Remove tab characters in insand.for
006.) Add declaration of TDepV in LineTransitionCalc.f90
007.) Update subroutine structure of reply.sub. Get rid of jump marks.
008.) restore a comment from IPK in update.f90
009.) Deactivate some test output code in wavecmdjw2IPK.for
--- committed
010.) Change parameter mel to MaxE to overgive to the Darcy.sub, called from coef2 in coef25.for. mel doesn't have the correct value, which is supposed to be the maximum number of element
011.) Change question for midside node processing, when calculating the inner boundary condition value at transitions. There, the mod-function must be used to identify a midside node. (Affects: coef25.for)
012.) Declaration of variables and of function type updated in DNX.fun (dnx.for) and all functions in funs.for
013.) Changing argument calling lnflo in elflows.for, because, lnflo expects a variable (intent (out)-Attribute) and gets a directly calculated value in the calling line (what is corresponding
      to a constant, that can't take a value from a subroutine). Extracting this to a local copy and passing the copy. Question is generally whether it makes sense, because the changed value is not used anywhere.
014.) Rework dried-out notification for nodes on 2D-side of 1D-2D-line transitions. Don't overgive parameter dset anymore, but make drying section module blkdrmod available in load.sub (Affects: load3.for, rma10.for)
015.) Adapt data type from (not used) global array gl_bedform, used in call of darcy.sub from the coef-subroutines (Affects: ParaKalyps.mod, roughness.f90)
016.) Replace all real (kind = 4) declarations with real (kind = 8) declarations in pasche_trees.f90
017.) In getLineAverageWaterLevel.sub, the parameter d2 is changed to be kind=8, to be consistent with the dummy declaration of amf.sub
018.) Deactivate none working part, i.e. autoconverge. THIS HAS TO BE REVISED!!! (Affects: rma10.for); Additionally small format changes and one not used variable deactivation in statistic.f90
019.) Change wrong format output descriptor in sandbed.for
020.) Format changes and loop update in threed.for
--- committed
021.) Introducing preperation of usage of MathKernelLibrary. That has different changes as consequence.
      - Reading subroutine ginpt must now deal with 88 digits long characters (Affects: inmet.for, input. for)
      - BLK10MOD includes further switch-parameters for the usage of MKL settings in control file
      - Include File Param.com holds some variable changes according to module changes with BLK10MOD (regarding version 8.0 from 8.0)
      - until now, calling of mkl-subroutine is deactivated (only one line in rma10.for); the control flow for calling it, is implemented, referring to version 8.0 from IPK (Affects rma10.for)
      - BLK10 includes now some new arrays, used for MKL. They are initialized in initl.sub
      - file.sub contains now another unit. This collides with a unit, that was introduced here for the usage of stage flow boundary conditions for 1D
022.) For compilation with Intel Fortran Compiler, the 'File=<filename>' command has to be introduced in open statements instead of just giving <filename> on the correct place. (Affects: wtform.f90, input.for)
023.) Change if-statement, because something is possibly be checked for an array entry, that might not exist; just made the if-statement cascading, so that no runtime error can occur (Affects: rewet.for)
--- committed

--- Nico Schrage, 23.07.2008 (1.0.1alpha1)

024.) Change all definitions in wbmmods from kind=4 to kind=8
025.) Upload fileIntel.for, which allows developers to compile with Lahey and Intel compiler
--- committed

--- Nico Schrage, 24.07.2008 (release 1.0.1)

Version 1.0.2 (laufende �nderungen)
-----------------------------------

001.) Delete some testing code in coef25.sub and coef25NT.sub
002.) Manage writing of PRA, PRQ and PRB lines in result file for 2D-nodes. There was a bad check, which is now modernized. Problem was the restart with such a result file.
003.) Activate VO, GA, GO lines for restart and leave inputd.sub earlier, when searching for proper time step to get BCs from. Problem was that restart conditions for H-boundary nodes were changed. (Affects: inputd.for, rdkalypso.f90).
      Now restart is in 2D full functional.
004.) Change smallest velocity for calcualtion of energy slope in subroutine to get the c_wr value.

--- Nico Schrage, 28.07.2008 (1.0.2alpha1)

-----------------------------------------------------------------------------------------------------
28.07.2008 Branch 'update subroutines' were merged into the TRUNK. Merged revisions are 4957 to 5252.
-----------------------------------------------------------------------------------------------------

Ziel-Version 1.1.0 (laufende �nderungen)
-----------------------------------

001.) update automake.fig file; makefile for IntelCompiler doesn't exist yet.
002.) Add commits.future file as roadmap
003.) Add some initial document for guidelines, how to deal with SVN and with rma10sk development
--- Nico Schrage, 24.07.2008


004.) Providing and reading water constituents (Salinity, Temperatur, Sediment and VEL(7,N))from a
       RESTART solution in Kalypso.2d -Files: Reading Values in the 'DF'-Line (degree of Freedom)
       >> SubR RDKALYPSO (--> VEL(4 till 7))
005.) Supporting water constituents at discharge-boundarys(QC) for Kalypso-Boundarys (BSWIT=2 bzw. "KAL_BC")
       >> SubR QGEN (--> QVAL(4 till 6))     
006.) Avoiding the calculation of kinematic Viscosity in SubR KINVIS with Temperature=0 if Heatflux is not activ.
      If Temperature is 0 at a node, the default value TDC = 20�C is used.
      >> SubR KINVIS (TDC and VEL(5,n))
007.) Avoiding the calculation and iteration with negative concentration of sediment in SubR UPDATE. IF concentration
      of sediment is negative at a one its setted to 0.
      >> SubR UPDATE (VEL(6,N))
      
--- Monika Donner, 25.07.2008

008.) (ref. 005. of this release)Remove splitting of loop to speed up execution of code as it was before. (Affects: MKSAND.for, MKTEMP.for, WBMMODS.for)
009.) remove some declarations as it was ment for Intel Compiler, because compiler setting can make it. (Affects QGEN.sub)
010.) Add some more definite declarations in order to have consistent variable passing and errorless debug compilation (BLK10.for, BLK10MOD.for)
010.) deactivate writing of matrix to unit 9919 in coef25.for
011.) Bring TF.for up to date
012.) for usage of pardiso solver:
      - enable front_mkl.sub to use coef1DPoly and coef1DJunction. 
      - at the moment deactivate call of front_pardiso from rma10.for, because it is not available in working way
      - deactivate call of pardiso (twice) in mkl_solver.sub, because if package is not available, it will lead to compilation errors.
013.) consistent variable setting and value assigning in load.sub of integer(kind=4) varialbe nln.
014.) consistency variable adaptation of c_wr in roughness.f90

--- Nico Schrage, 25.07.2008

015.) Get the bugfixes from V_1.0.0 maintenance branch: updates for (V1.0.2alpha1, 28.07.2008)

--- Nico Schrage, 25.07.2008


016.) Providing the friction factor FFACT as a variable over all elements (FFACT(1:maxe)) in order
      to claculate the friction factor per node FFACT_KN for Sediment transport later. Therefore
      FFACT is defined in ParaKalyps and saved as a matrix in all COEF-Routines:
      >> SubR COEF11, COEF11NT, COEF25, COEF25NT, COEF2d, COEF2dNT
      >> SubR ParaKalyps and SubR INITL     
017.) Reading the lambda-Values for each element in the RESTART solution in Kalypso.2d -Files: 
      Reading Values in the 'FR'-Line (Flow resistance)
       >> SubR RDKALYPSO (--> lambda...)  
       >> SubR ErrorMessagesAndStop    
--- Monika Donner, 28.07.2008

018.) Friction factor FFACT loacally: wieder zur�ck
      >> SubR COEF11, COEF11NT, COEF25, COEF25NT, COEF2d, COEF2dNT, turbulence
      >> SubR ParaKalyps and SubR INITL
019.) Friction factor (FFACT_EL(1:maxe)) in order to calculate friction factor
      per node FFACT_KN for Sediment transport. Therefore FFACT_EL an FFACT_KN
      is defined in BLKSANMOD
      >> SubR BLKSANMOD and SubR INITL 
020.) Preparation of using the Friction factor FFACT_KN in VanRijn, GET_U_STAR 
      >> SubR VANRIJN and SubR GET_U_STAR 
021.) Cleaning up all subroutines in Sediment.for: BEDXCG, SANDX, AWHITE, GET_U_STAR
      and KINVIS: but no changes!!           
--- Monika Donner, 29.07.2008

022.) BUGFIX in RDKALYPSO for 'FR' reading friction faktors
      >> SubR RDKALYPSO
023.) Deactivate a command to Write an info with Format 6000 and 6003 
      in BEDLBED and BEDSUR
      >> SubR BEDLBED and SubR BEDSUR 
024.) NEW Subroutine GET_FFACT to determine the Friction factors at nodes FFACT_KN 
      based on lambdaTot(N) at elements 
      >> SubR GET_FFACT 
025.) Adding comments and the call of GET_FFACT in Sediment.for: SANDX
      >> SubR SANDX, SubR RMA10SUB, VANRIJN   
--- Monika Donner, 29.07.2008


026.) Correction for all three Bed-Load-Transports without waves: Reactivate and
      correct the option for mineral size fraction (Parameter diam) 
      (DE: Korrektur und Reaktivierung des Ansatzes mehrerer Kornfraktionen
           fuer alle Geschiebetransportans�tze OHNE Wellen!)   
      >> SubR VANRIJN, AWHITE, BROWNLIE      
027.) Avoiding the call of BEDLBED from RMA10SUB, because the incoming and outcoming
      values (GAN and GAN0) are ZERO. Now the right and complete SubR BEDSUR is used
      in the case if LBED > 0 and LSAND = 0 (Call from RMA10SUB).
      >> SubR RMA10SUB 
      --> SubR BEDLBED is NEVER USED now!!!     
028.) In all COEFXX Routines the Parameters GAN and GAN0 are used to allocate the
      Bed-Load-Transport. Till today these values (GAN and GAN0) were ZERO. Now the 
      corresponding values are selected: GAN0 = CBS und GAN = EDOT (beides sind 
      Erosionsraten in [kg/m�/s])  
      Now in SubR BEDSUR the Parameters GAN and GAN0 are allocated.
      >> SubR BEDSUR       
029.) Correction of wrong formulares in Subr AWHITE: for clog was (drglog**2)missing.
      And formulares mixed the appendage from Acker-White 1973 and 1990. Now only 
      the formulares of Acker-White 1990 are implimented.
      >> SubR AWHITE       
030.) Correction of numerical critical transitions between formulares in sections.
      Therefore the Shields-Parameter, Acker-White- and van Rijn formulares were 
      corrected in there typical boundary-Values. In order to get the new steady
      transitions the boundary-Values are calculated based on the given Functions.
      (DE: Gl�ttung der Ueberg�nge zwischen abschnittsweisen Funktionen, so dass keine
       R�ckspr�nge auftreten. Die neuen Grenzwerte decken sich somit nicht mehr mit
       den klassischen Angaben der Literatur, aber stabilisieren das numerische 
       Verfahren!) 
      >> SubR AWHITE, VANRIJN      
031.) Correction while reading Suspendend Data in SPROP and BED 
      "ENDSED" was not read --> Programm is stopped 
      >> SubR SPROP, BED                     
--- Monika Donner, 14.08.2008

032.) CHECKING all Sediments-Equations in COEF25NT:
      The derivation for Sediment: dfx/dC; dfy/dC, dfc/dC and
      all Terms of the Sedimenttransport DGL(fs) with dfs/dvx; dfsy/dvy, dfs/dh, dfs/dC.     
      The following corrections were made:
      - Correction of wrong weighting function (dfs/dh, dfs/dC)  
      - Adding the missing terms for ShearStress, coriols and so on
        in dfx/dC; dfy/dC
      - Adding the Source-Sinkterm Part to dfs/dh
      - Correcting the Source-Sinkterm in dfC/dC              
      >> SubR COEF25NT
            
033.) CHECKING the Sediments-Density Equation in FUNS: 
      its correct because it is only used as rho/dC !!
      (No changes!)

034.) CHECKING the Sediments-Boundarys HC, QC and CQ in HGEN, QGEn and SBGEN.
      its correct input: Take care Sediment is always used at these Boundarys!
      (No changes!)                                              
--- Monika Donner, 22.08.2008

035.) Introduce changes from maintenance branch 1.0.0

      --------------------------------------------------------------------
      29.08.2008 - Merging changes from branch since 28.07.2008 into TRUNK
      --------------------------------------------------------------------
      cbh: cite branch history 
      cbh   001.) Declaration in TF.function for proper compilation
      cbh   002.) Increase maximum number of element inflows (Affects initl.for)
      cbh   003.) Preparation of turbulence parameters for deactivated elements, too. (Affects input.for)
      cbh   004.) For 3D preparations some nodes' continuity equation were not activated after rewetting although they should be wet.
      cbh   005.) copy of nop-array to nops-array in Rdkalypso.f90
      cbh   006.) bugfix in anglen.for
      cbh   
      cbh   --- Nico Schrage, 01.08.2008 (release 1.0.2)
      cbh   
      cbh   Version 1.0.3 (laufende �nderungen)
      cbh   
      cbh   001.) Get rid of data field aour, which is just a copy of al (affects: blk10mod, rdkalyps, initl, rdrm1); writing out is now only related to ao-field (affects: modell_schreiben)
      cbh   002.) delete "old" way of polynomial definition in input files, only support new way (affects: rdkalyps)
      cbh   003.) use allocatable statement for arrays used as dummies, where the size is defined in the variable declaration list (affects: rdkalyps)
      cbh   004.) direction fix for control structures, where the flow vectors of upstream and downstream point into neighbouring mathematical quadrants (affects: cstrc)
      cbh   005.) separate reordering subroutines into seperate file with the name Reordering.f90 (affects: rdkalyps)
      cbh   006.) get rid of data corpses concerning control volume finite element method (cv*- variables); they can be integrated in a more elegant way if needed again)
      cbh   007.) delete old control parts in rdkalyps that were related to the differing of 1D elements with and without midside nodes
      cbh   008.) get rid of element splitting for CVFEM. It can be introduced again if it was necessary
      cbh   009.) Modernize loop to initiate the reordering (affects: rdkalyps)
      cbh   010.) introduce percent check option for updating the degrees of freedom, i.e. user can set a switch whether absolute changes or changes related to the absolute value
      cbh         of the variable at a certain place should be updated; also the output console is adapted for that (affects: update, paraflow1dfe, input)
      cbh   011.) Overgiving of coordinates and node number to the findPolynom.sub. The subroutine finds the intersection of a small array to give back the positon. It is used for control structure data,
      cbh         where it throws a georeferenced error, if the value to sort in was out of the valid range, and for normal polynomial functions, where it just throws a warning. The error at a bridge is thrown,
      cbh         because this is much more sensitive as a polynomial, where being out of the range must not cause the model to crash. (affects: check, wtform, cstrc, ErrorMessageAndStop, LineTransitionCalc, PolynomPositionSearch.f90)
      cbh   012.) catch negative deactivation depth, i.e. if the user sets dset negative it will be set to the value 0.0. Additionally the Darcy.sub that is generating the lambda value depending on the roughness
      cbh         and depth was setting lambda to 10000, if water depth was below 0.01m for negative deactivation depth this lead to NaN-problems. The special case depth to fix the lambda value was set to
      cbh         dset. Consequently nodes with a water depth below dset, what technically can't occur - nodes below that depth are inoperative - , will now get the lambda value from only 1000. NaN problems didn't occur any more
      cbh         for such problems. (affects: coef11, coef11nt, coef25, coef25nt, coef2d, coef2dnt, roughness.f90, Qgen.for, QgenTransition, 
      cbh   013.) Increase the buffer size to standard NBS = 5.000.000 to NBS = 400.000.000, meaning is not 100 percent clear but it leads to less scratch files. (affects: initl)
      cbh   014.) Deactivate a call of the wtform subroutine in Load3 because it is not necessary
      cbh   015.) Delete old data corpse of calculationUnit name and ID (calcUnitID; calcUnitName) in parakalyps.f90
      cbh   016.) Move array size definition from static declaration to allocatable declaration in pasche_trees.f90. Problem is stack overflow, if a global size value is used to define dummy arrays, whose size can be taken from the overgiving.
      cbh   
      cbh   --- Nico Schrage, 19.08.2008 (1.0.3 bf2)
      cbh   
      cbh   017.) remove old deactivated source code from rma10.for
      cbh   018.) deallocation of arrays in pasche_tress.f90
      cbh   019.) reduce memory assumption again to NBS = 20.000.000
      cbh   
      cbh   --- Nico Schrage, 21.08.2008 (1.0.3 bf3)
      cbh   
      cbh   020.) iteration control output must change, because Kalypso can't parse it, if number of iterations as 6 digits.
      cbh   
      cbh   --- Nico Schrage, 25.08.2008 (1.0.3 bf3)
      cbh   
      cbh   021.) Rename 'Generate2DFileName' to 'GenerateOutputFileName'
      cbh   022.) Generation of consistent *.cwr file names using the general function 'GenerateOutputFileName' to create output file names. There was a problem, if restarting from a certain time step. (Affects Modell_schreiben.f90
      cbh   023.) bugfix for restart information-write-out, if the time of the time step is equal 0.0. It is more convenient to check for the unsteady-character of the calculation process using icyc.
      cbh   
      cbh   --- Nico Schrage 27.08.2008 (1.0.3 bf4)
      cbh: cite branch history
      ---------------------------------------------------------------------------------------------
      29.08.2008 - Merging changes from branch since 28.07.2008 into TRUNK (Revisions 5269 to 5469)
      ---------------------------------------------------------------------------------------------
037.) Change compilation settings for Lahey to have default integer type (kind = 8) (affects: automake.fig)
038.) Make MKL operatable:
      - define irwept as short integer (affects: blk10.for)
      - adapt MKL_solver.for to be able to pass the correct parameters to the MKL and initialize arrays correctly, if equations system changes
      - using only the type part of curved elements in front_mkl
      - making comments in front_mkl to understand, what is done there
      
039.) ALFA and WSS must be long type for proper compilation (affects blk10mod.for)
040.) Revert parameter list of turbulence to original. Technically there's no difference (affects turbulence.f90, coef25.for, coef25nt.for)
041.) correct typo in fldir.90
042.) Introduce missing ErrorIDs in ErrorMessageAndStop
043.) Correct calling of wtform from cstrc2d.for
--- Nico Schrage, 29.08.2008 (1.1.0alpha2)

044.) Retighting the function name rededication of 'Generate2DFileName' to 'GenerateOutputFileName' in rma10.for
--- Nico Schrage, 01.09.2008 (1.1.0alpha2)


045.) Compiling Error: Test output in SubR AWHITE from LOUT to 75
      (No real changes!) >> SubR AWHITE     
046.) Compiling Error: Reactivate d50m in SubR Brownlie for the
      calculation of geometric standard deviation 
      >> SubR Brownlie
047.) Compiling Error: Moving the "Call WFORM(...)" out of SubR CSTRC2D
      (No real changes!) >> SubR CSTRC2D                                              
--- Monika Donner, 02.09.2008

048.) To read different data from EFE lines an iostat error question must be integrated in the read statement. Besides dlinextra is not read there anymore. The same applies to EFA. (Affects: ELFLOWS.FOR)
049.) If MKL is used it produces at every reordering step a new memory allocatio without deleting the old one. Furthermore the ierror variable was from wrong type. This changed and
      pardiso is called a third time, for cleaning up the memory to run it with a new equation system.
      
--- Nico Schrage, 05.09.2008 (1.1.0alpha3)

050.) Delete output to unit 198 in front_mkl3.for

--- Nico Schrage, 09.09.2008 (1.1.0alpha3)

051.) Allocatable beahaviour of array for linear matrix storage for pardiso solver. Besides: Use the same variables for memory allocation either for Front-
      solver or pardiso-Solver.
052.) Introduce QCFF line for discharges with more than 8 and up to 16 digits.

***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR
053.) Do not scale improvements after iteration with the effective porosity (affected routine: update.sub)
***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR

--- Nico Schrage, 22.09.2008 (1.1.0alpha6)

***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR
054.) Put TODO to the line of 053.), because this seems to be very sensitive and has to be reworked carefully
***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR
055.) Catch division by zero in REWET, when dealing with HLOS
056.) Do not allow mathematical lambda-values (i.e. values greater than 1000 are reduced to this)
057.) nscrin is a scratch file and not really necessary, so delete it. Has still to be finished
058.) Revert to old implementation regarding ext... in coef25nt
059.) Catch exception, in RDKALYPSO, if middle coordinate shall be calculated for a none active element (imat == 0)

--- Nico Schrage, 29.09.2008 (1.1.0alpha6)

060.) kmx of node 0 was used, for what reason ever?! It caused big problems and was therefore removed; allocation of kmx now
      only takes place for 1:maxp (affects initl.sub)

--- Nico Schrage, 30.09.2008 (1.1.0alpha6)

061.) Delete editing of tet in heatex.sub. Firstly, it should not be changed anywhere and secondly, it was not used correctly, because tet describes the overall time in hours, not daily simulation time in hours.

--- Nico Schrage, 29.10.2008 (1.1.0alpha6_build20081029)

062.) Correction in BEDXCG Depositionrat and Erosionsrat are here multiplied
      with delta Time (DELT) in order to get the bedevolution. Here a Faktor
      of 3600 multiplied. This factos is now deleted, because DELT is alrealdy
      in seconds. 
      Notice: Take care while defining the sedimentation and erosionsrate 
      for sand-bed!. They are used in 1/Faktor, so normally factors over 100
      and >1000 should be used.  
      >> SubR BEDXCG (in Sediment!)
063.) Correction in FORMBED: Return option behind printing layer properties
      is deleted in order to allow all calculations in the last block of SubR
      Double defined variables are deleted and original variables are used 
      (For example: DMER, SER, DR, ...)
      >> SubR FORMBED
064.) Correction in MKSSED: Adjust the Routine based on structure of MKSAND.
      And replace the wrong variable GRW=0. by SET=0.
      >> SubR MKSSED  
065.) Correction in COEF25NT: Depositionrat and Erosionsrat for cohesive
      sediment must be multiplied with quadratic W-Functions (XN(M)!!). 
      >> SubR COEF25NT
066.) Corrections and reactivation off SHEAR: Avoid a Shear-stress > 0, if water
      level is below the river bed. 
      Double defined variables are deleted and original variables are used 
      (For example: UN, U, V, ...)
      >> SubR SHEAR 
067.) Corrections in RMA10s: The whole "cohesive sediment or LSS"-BLOCK was in a wrong
      position outside the iteration loop (:-//). Now this "LSS"-BLOCK is located inside
      the loop therefore the Routines SEROSN and MEROSN were also adjusted.
      Additional the "Shear"-option is added. If there are waves, the Shear stress for 
      waves is calculated, otherwise Shear stress due to flow velocties is calculated.
      For this Bed-Shear stress the SubR SHEAR was reactivated and a new SUBR KALYP_SHEAR
      is added.      
      Outside the iteration loop Routines SEROSN and MEROSN are called again, in order to
      determine the Change of bed in/at Suspended and Bed Layers.
      >> SubR RMA10s
068.) Corrections in SEROSN and MEROSN: Due to the movement of the "LSS"-BLOCK in RMA10s the Routines 
      SEROSN and MEROSN were also adjusted. And an Interger II is used in order to check, if
      the SubRs are called form inside or outside the iteration loop of RMA10s
      Outside the iteration loop Routines SEROSN and MEROSN are called with II = 2, in order to
      determine the Change of bed in/at Suspended and Bed Layers.
      >> SubR SEROSN and MEROSN 
069.) Corrections in NEWBED: Updated bed without an ratio-factor for the next time step, because 
      of instabilities in the solutions for cohesive sediment.
      >> SubR NEWBED
070.) new Subr KALYP_SHEAR for Bottom Shear stress      
                                 
--- Monika Donner, 06.11.2008


bugfixes and small changes
--------------------------
071.) Moved reading of frequency for writing out iterations to the control file line C6. ('itefreq') (affects file.sub; input.sub)
072.) Deactivate option to define continuity lines in geometry *.2d-file; they can be only defined in the control file (affects rdkalyps.sub)
073.) derivative of velocity over time was not considered at the midside nodes in 1D polynomial approach (affects coef1dpoly.sub)
074.) replace imat(n)>0 durch imat(n)/=0 in getgeo.sub. Dry elements that are active for the calculation wouldn't be considered otherwise.
075.) small if-control change to increase robustness for writing out convergence feedback to the console in update.sub
076.) Increase the border to store relative changes for small models in update.sub
077.) Replacing common blocks IFU and swanf by module definitions.

refactoring for the purpose of generating freeware RMA�KALYPSO
--------------------------------------------------------------
A lot of changes were made to some subroutines starting with the program unit and the reading subroutines. Following goals were followed:
 - Change program file rma10mnms.for by RMAKalypso.f90 and change initial console output.
 - update to higher Fortran standard (currently *.f90-files)
 - introduce only-specifier for the usage of modules, to make clear which variables are really used from it
 - introduce implicit none to all subroutines to get rid of implicitly defined variables
 - document all used variables within a subroutine
 - sort the variables (globals and locals) against a certain sense to combine them in a second step to derived data types and get rid of global variables
 - document code parts to build logical pieces. Goal is to become able to split up the code into smaller subroutines/functions and later on to generate libraries
078.) start to update several block modules by sorting them and updating the codes standard. The appearance of certain variables in the order of refactoring the rest
      of the code determines the variables that are already processed yet in the block modules.
079.) Remove several input file possibilities in order to only provide ASCII-files, that are used in at IWB. At the same time lots of output code in rma10.sub became
      obsolete. Besides the input formats rm1, bin and sms-compliants became obsolete, too. Subroutines and the calling points were deleted.
080.) Commenting out all obvious code that is connected to the application of 3D in order to make it not operative.

***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR
------------------------------------------------
RENAMING THE PRODUCT FROM RMA10SK TO RMA�KALYPSO
------------------------------------------------
***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR***MAJOR

--- Nico Schrage, 07.11.2008 (RMAKalypso 1.1.0alpha7)

081.) bugfix regarding kilometer in coef1dPoly
082.) Enable shore line friction for Darcy-Weisbach; implemented in coef25.sub and coef25nt.sub. Is done analoguous to Chezy coefficient. (affects coef25nt.sub, coef25.sub)
083.) Reactivate efpor in update, because after several tests it seems to be the correct way. Attention has to be payed to very steep perpendicular to 
      the flow direction, because they cause convergence problems then. (affects update.sub)
084.) Specifying used global variables from modules in particular, so developer knows, which variables are really used within subroutines, started for several subs, not finished at all.
      Additionally updating subroutines from *.for to *.f90 partly. ...to be continued.
085.) Error message for unsteady restart from nth step (n>1) with steady calculation activated before;logical mistake that is catched. (affects input.sub)
086.) Get rid of some output frequency variables: Effects C5 and C6 lines (affects input.sub)
087.) Increase default MR1 size for Pardiso from 200000 to 300000 (affects initl.sub
088.) Boundary directio fix at 1D/2D transition (affects: LineTransitionCalc.sub)
089.) Fix tree resistance to c_wr = 0.0, if energy slope is to small. (affects get_element_cwr.sub)
090.) Bug fix for interpolation of elements in 1D, i.e. number of nodes for interpolated elements was not correct. (affects InterpolateProfs.sub)
--- committed ---

--- Nico Schrage, 09.01.2009 (released RMA�Kalypso 1.1.0 'rma-kalypso_1_1_0_20090109.exe')

001.) Reduce exchange conditions at 1D2D junctions only to the proper values they as the transition type intends it.
002.) Direction fix for boundary nodes in 1D2D line transition (affects BLINE.sub)
003.) Comments and code updates (affects coef25nt.sub); Preperation of comparability of the coef2* subroutines to make them a unique subroutine controlling the different options
004.) Update 1D2D-boundary exchange conditions and boundary conditions taken from the coef25.sub

--- committed ---

--- Nico Schrage, 29.01.2009 (RMAKalypso 1.1.1alpha1)

005.) Add possibility of reading a node's dry/wet status for proper restarting
006.) Increase accuracy of variables in *.2d file to minimize restart error. Problem is to prohibit mistakes with older models. That should be prevented.
007.) Speed up calculation of velocity distribution. Restart file was used to get the correct water stages for the distribution calculation. Problem was that restart was read after preperation of
      boundary conditions. This changed already months ago. Consequently this file reading that was pretty slow could be deleted.
008.) Set all variables (including depth) of dry nodes to zero.

--- Nico Schrage, 04.02.2009 (RMAKalypso 1.1.1alpha2)

009.) Introduce changes from coef25nt to the other coef2* subroutines: Goal is to make them comparable so the can be merged for reducing the amount of files.
010.) Release notes into RMA�Kalypso console output

--- committed ---

--- Nico Schrage, 13.02.2009 (released RMA�Kalypso Version 1.1.1 build 13.02.2009 with filename: rma-kalypso_1.1.1_build20090213.exe)

--- Monika Donner, 19.03.2009
001.) Corrections for cohesive Sediment:
      Using general formulations or definitions for densities:
      --> Transfering the approach for water density in all cohesive
      sediment calculations according to all SubR COEFxxx where 
      water density ROAVG [kg/m^3] is defined as: ROAVG=516.*1.935
      >> SubR SPROP, SEROSN, FORMBED, MEROSN, NEWBED, GETMAS, SHEAR
         KALYPSO-SHEAR        
002.) Corrections for cohesive Sediment:
      Using general formulations for suspended-water density GAW in all cohesive
      sediment calculations by using water density ROAVG, sediment density GACND
      bzw. GAC (~2650 kg/m�) and suspended sediment concentration VEL(6,J)[mg/l]:     
         GAW = (VEL(6,J)/1000.)*(1.-(ROAVG/GACND(J))) + ROAVG      
      The option to define GAW by user in the Control-File is overwritten by
      this new approach (>> SubR SPROP)
      >> SubR SPROP, SEROSN, FORMBED, MEROSN, NEWBED, GETMAS, SHEAR
         KALYPSO-SHEAR        
003.) Corrections for cohesive Sediment:
      Using general formulations for calculation the dry mass of suspended-sediment
      WEGTM by using Layer-Thickness TTLAYM [m], bulk density GAB, water density ROAVG
      and sediment density GACND bzw. GAC (~2650 kg/m�)in :          
         WEGTM =TTLAYM *(GABM -ROAVG)*GACM/ (GACM -ROAVG)     
      >> SubR SPROP, GETMAS,
004.) Corrections for cohesive Sediment:
      Using suspended-water density GAW for bed-shear-stress calculation. 
      Water density or 1000. kg/m� is deleted.  
      >> SubR SHEAR, KALYPSO-SHEAR 
005.) New Output for cohesive Sediment:
      Writing actual cohesive bed-structur with all layers and its thickness by
      using "Modell-schreiben" in order to prepare a restart option for cohesive bed.
      >> New SUBROUTINE write_KALYP_Bed (bedout) in "Modell-schreiben"
      Additional informations in SUBROUTINE GenerateOutputFileName and RMA10     
      >> SubR RMA10, Modell_Schreiben                                                 
--- Monika Donner, 19.03.2009

--- Monika Donner, 19.03.2009
006.) Correction in SubR second:
      Definition for integer :: itim
      >> SubR SECOND 
007.) Correction in SubR PipeSurfaceConnectionQs :
      Formula:  flow = PS1 * (-1.0)  is corrected  
      >> SubR PipeSurfaceConnectionQs                                                 
--- Monika Donner, 19.03.2009

--- Monika Donner, 01.04.2009
008.) Correction in SubR rma10 & GenerateOutputFileName:
      Deleting additional Variables for Bed-files                                               
--- Monika Donner, 01.04.2009

009.) Introducing data types to make program more modular. Important: Don not increase the storage size that is needed
      for the calcualtion. That means that no arrays should be created anymore that contain big gaps. Following modules are new:
      - folder: modules_components_general
        - mod_Node: Holds 'node' and 'linkedNode' definitions with editing subroutines and functions
        - mod_Arc: Holds 'Arc' definition with editing subroutines and functions, also to understand an arc as a vector.
        - mod_ContiLines: Holds 'ContiLine' definition with editing subroutines and functions
      - folder: modules_Components_special
        - mod_LineTransition: Holds 'TransLine1D2D' definition without subroutines and functions yet
        - mod_ManholeDefinitions: Holds 'pipeManhole' definition without subroutines and functions yet
        - mod_StorageElement: Holds 'StorageElement' definition with editing subroutines and functions
      - folder: modules_fileHandling: 
        - mod_fileType: Holds 'file' definition and subroutines/ functions
        - mod_fileHandler: Holds 'fileCtrl' and subroutines/functions (usage has to become more detailed)
      - folder: modules_hydraulics
        - mod_EnergyElevations: Holds 'energyLevel' and subroutines/ functions
      - folder: modules_numerics
        - mod_discreteFunction: Holds 'discreteFunction' and 'valuePair' definitions (rework this)
      The seperation of modules to folders has the intention to structure the code a bit regarding topics that are executed. The given structure is
      just something initial and can be improved by any developer. At critical points please talk to the other developers.
      The purpose of the modules is to generate much more general code that can be reused on other places. As we're all no programmers
      this is some introduction of object based thinking. For the future new elements should be introduced modulary in this more modern way to come
      to a higher efficiency in execution and programming.
010.) outcommenting of autoconverge code as it is not tested to be operative properly
011.) Versioning in RMA�Kalypso main routine
012.) Look for the end of equations to add, then exit loop to add equations: Not nice hotfix!
new features introduced/ started to be introduced:
013.) discrete function:
      Discrete function adresses different parts of the calculation. It can be used for any function, where discrete values are required. This may be
      waterstage-discharge relationship BC, volume-waterstage relationship BC (will be soon available), weirs and bridges etc..
014.) direction of continuity line:
      Basicly there is a new implementation for continuity lines. It will be step by step introduced to replace all the old remaining variables. Basic
      idea of the direction that was introduced concernes the storage elements. Here it is necessary to define inflow as positive discharge, while outflow
      needs to be negative discharge. Problem is, that Kalypso (1D/2D) writes out a continuity line in an arbitrary direction. The discharge is always
      defined as third component of cross product of velocity and continuityline (chord) vector. So it might differ from case to case depending on the
      definition direction of the continuity line.
015.) Storage Element:
      Storage Element is the concept for accumulating the flow through continuity lines or other bilancing cross sections. (They just need to be
      connected.) Generally it is just calculating the water volume ('content') that flew through a continuity line.
      Additionally a storage element might contain a volume-waterstage relationship to get the water level in the storage element at the current time
      step. This will be used as a new type of boundary condition.
      Another extension will be the definition of an arbirtrary number of inflows that contribute to the total volume inside the storage element.
016.) file controller:
      The file controller is meant to be a very general part of Kalypso to store the used files. It will be used to pass the files for reading and
      writing to the proper routines. All reading and writing routines shall be collected in the file controller.
--- Nico Schrage, 06.04.2009

017.) Deactivate time step handling within RMA; assumption that time step are properly defined. (affects inputd.for)
018.) Get rid of rausv during write out; Water Levels are not always updated!
--- Nico Schrage, 24.04.2009

019.) Critical bug fix at the 1D-2D line transition; inner 2D->1D boundary values were not transformed due to operative Marsh option.
      >> lineTransitionCalc
--- Nico Schrage, 27.04.2009

--- Monika Donner, 04.05.2009
020.) Correction in SubR rma10:
      Transfer vor outsuffix 'bed' for kohesive Material                                             
--- Monika Donner, 04.05.2009

--- Monika Donner, 07.05.2009
021.) Correction in SubR Coef25NT:
      Calculation for dispersion coefficient for sediment-transport (only!)
      was determined in a wrong way:
        DIFX = h x u* x ORT(j,8)
        DIFY = DIFX x ORT(j,9)
        --> dispersion in y-direction can be greater than in x-direction
      Correction for DIFY:
        DIFY = h x u* x ORT(j,9) 
022.) Correction in SubR FUNS for FDSED and DRODSD:
      Calculation for density of suspension depending on concentration "SED"
      Formula was not correct: influence on derivation of Momentum-x and -y
      over concentration.                                                  
--- Monika Donner, 07.05.2009

--- Monika Donner, 08.05.2009
023.) Correction in SubR COEF25nt:
      temporal weighting is corrected: for all equation alpha = 1.8
      MUST be used (no mix of alpha and alphaSN)     
      >> IF(ICYC .GT. 0) T1=T1 + AMU*H*(ALPHA/DELT)   
    
024.) Corrections in NEWBED:
      Reactivation of Marsh-Question in order to avoid maximum dep-rates
      >> if(wsll(nn) .lt. ao(nn)) go to 200  
      Change of temporal weighting of old and new deposition-Masses:
      >> TM(NN)=(TMTMP2+TMTMP1)/2.00     
      Reactivation of Marsh-Refreshing for new bed:
      >> ADB(N) and ADT(N) 

025.) Corrections in FORMBED:             
      Deactivation of Marsh-Refreshing for RESTART-beds (already done in NEWBED!!):
      >> AO(N), ADB(N) ADT(N) and so one
      --> otherwise destroyed z-elevation and instability by hydrodynamic
      Restarts!!  
      Averaging at mid-side-nodes for ALL parameters was added:
      >> new: VEL(6), ESRO(N), DEPINCR(N), BEDELO(N)                                                     
--- Monika Donner, 08.05.2009

--- Monika Donner, 12.05.2009
026.) Correction in SubR COEF25nt:
      Using temporal weighting ALTM like for all equation 
        >> IF(ICYC .NE. 0) T1=T1 + AMU*ALTM*H 
      
      Calculation for dispersion coefficient for sediment-transport (only!)
      was corrected by VX or VY only:
        >> SHEARV_X =SQRT((R*UBF)**2) * SQRT(FFACT)
        >> SHEARV_Y =SQRT((S*VBF)**2) * SQRT(FFACT)
        >> DIFX=SHEARV_X*H*ABS(ORT(NR,8))
        >> DIFY=SHEARV_Y*H*ABS(ORT(NR,9))
            
027.) Corrections in PRESR:
      Correction of Faktor for Water density from 1.94 to 1.935 as
      already used in other SubRs
      
      Calculation of DEN(N) = Density per node ist not sloved accurate
      ToDO: Guess about a better approach!!!

028.) Corrections in FUNS:
      Correction of Faktor for Water density from 1.94 to 1.935 as
      already used in other SubRs                                                                    
--- Monika Donner, 12.05.2009

--- Monika Donner, 13.05.2009
029.) Correction in SubR KALYP_SHEAR:
      Delete block with IT==1 question, because old bed-shear is already
      collected in NEWBED at the end of an iteration
      --> can cause an error, because first calculation of sediment
      must not be at IT=1, if hydrodynamic is calculated first.
      
      New Averaged sizes at midside nodes:
        >> ESRO(NN)=(ESRO(IMID(NN,1))+ESRO(IMID(NN,2)))/2.
        >> UST(NN)=(UST(IMID(NN,1))+UST(IMID(NN,2)))/2.

030.) Correction in SubR DEPSN:
      Default value at all nodes MUST be:
         DEPRAT(N)=0.0
      instead of settling velocity VS!!
        
      Delete block with IT==1 question, because old Dep-rate is already
      collected in the upper Part
      --> can cause an error, because first calculation of sediment
      must not be at IT=1, if hydrodynamic is calculated first.

031.) Reactivatation in SubR COEF25nt:
      Reactivatate of linear distribution for ALP1 and APL2
      for cohesive sediment (Quellen- & Senkenterm)                                                                                    
--- Monika Donner, 13.05.2009

032.) Correct calculation of element related friction factor lambda; lambda is calculated at each Gauss node, thus
      the element related lambda is the sum of the weighted lambdas at the Gauss nodes.
--- Nico Schrage, 14.05.2009

--- Monika Donner, 18.05.2009
033.) New Limit of maximal Sediment-concentration with 1500 mg/l in SubR UPDATE:
      Maximal Limit in order to avoid extrem Konzentration
      --> TODO: should be given by user in the CONTROL-Data
            
034.) Tests in SubR COEF25nt for Dispersion_Approach according to ELder:
      in C1 line with IDIFSW = 5
      Problems for Sediment under marsh-conditions
      Extrem Dispersion Coefficients (too lagre and to low). 
      Manual defined limits didn't stabilze the problem.
      --> but, use IDIFSW = 2 (in C1 line)
      NO changes, only tests                                                                                 
--- Monika Donner, 18.05.2009

--- Monika Donner, 20.05.2009
035.) Change in SubR FRONT for Dispersion-Approach DISP = 2:
      The call of COEF2DNT for sediment with Dispersion-Approach = 2
      should only be used for Kings Method: For Kings-Turbulence (IEDSW=2) enclosure
      (=SMAG) combined with Dispersion enclosure (IDIFSW=2). Reason for this change is
      to avoid a switch between different COEF-Routines (Coef25 and coef2d) for one model:
        >> ELSEIF(ISLP.EQ.1 .AND. IUTUB.EQ.1 .AND. IDIFSW.EQ.2 .and. IEDSW .EQ. 2) THEN
      
      TODO: Changes must be also implemented into FRONT_MKL!!!!!!!!!!     
            
036.) Changes and Corrections in SubR COEF25nt for Dispersion-Approach:
      - Whole dispersion bloc is moved down below "call turbulence", because
        turbulence parameters are/can be needed.
      - Dispersion enclosure (IDIFSW=2)is corrected and implemented: 
        >> ELSEIF (IDIFSW.EQ.2) THEN
          The approach was implemented according to COEF2dNT by combining
          turbulent diffusion with sediment dispersion.
          But here (and now), valid for all turbulence approaches!!                                                                              
--- Monika Donner, 20.05.2009

--- Edgar Nehlsen, 27.05.2009
037.) Changes in front_mkl:
       - missing query (IF(ITEQV(MAXN) .EQ. 2 etc.) at the beginning was added 
       - this causes that in case of sediment transport (a IDIFSW ne 0) ISLP is set to 1
         and later the right coef subroutine is chosen
       - before this chage it was not possible to use the pardiso solver to calculate sediment transport       
--- Edgar Nehlsen, 27.05.2009

--- Monika Donner, 08.06.2009
038.) Change for 'DRP' = Dropout Elements for Erosion & Deposition for cohesive
      AND sand sediments, but only if DRP1 or DRP2 are defined in CONTROL
      Old Version: DRP(Mat-Number) was restricted from 1 up to 9 classes
      Now its available for 90 classes.
      User has to define first row with 9 classes by 'DRP1'
      Second and all following rows with 9 classes by 'DRP2'
      Maximal number of classes are selected by DROPMAX
      >> SUBR INPUT, INITL, COEF2d, COEF2dNT,COEF25NT, COEF25, BEDSUR,
              BLKSANDMOD
039.) Change for Maximal and Minimal Concentration 
      'MAXSED' and 'MINSED' in CONTROL can be used for defining 
      restriction to C(min) and C(max)in.
      Default values are defined in INITL with SedHighPerm = 100000 and SedLowPerm = 0.0      
      >> SUBR INPUT, INITL, UPDATE, PARAKALYS

040.) New additional Outputs for Bed-File 
      Deposition rate, Erosion rates, Settling-Velocity, Shear Velocity were added 
      >> SUBR WRITE_KALYP_BED
--- Monika Donner, 08.06.2009


--- Monika Donner, 09.06.2009
041.a) Change for 'DRP' = Dropout Elements for Erosion & Deposition      
      .... (look at position 038.))is available for 85 classes.      
      >> SUBR INPUT, INITL, COEF25NT,BLKSANDMOD
      
041.b) Change for 'DRP' = Dropout Elements for Erosion & Deposition      
      Dropout should happen for Material-Classes equal wheather they are wet or dry.
        >> IF(ABS(IMMT) .EQ. iedrop(ned)) THEN 
      If-Question for second time is deleted.     
      >> SUBR COEF25, COEF25NT, COEF2d, COEF2dNT    
      
042.) Settling-Velocities for cohesive Sediment can now also be defined by Material-Class
      Please use therefore TYPE 3:
      >> CSS1.....3.....MAT-Class.....CRCON1.....VSS1.....CRCON2.....EXP2
             (new TYPE)            
      All parameters for Settling are now saved for each node, also if TYPE=2 
      is used. Maximal number of classes is fixed to 85   
      >> SUBR SPROP, SETVEL, INITLSED, BLKSEDMOD 
       
043.) Parameters for sand and cohesive Sediment are defined by type (integer, real a.s.o)     
      >> SUBR BLKSANDMOD, BLKSEDMOD 
        
044.) All Layer and settling Parameters MUST BE defined for each node, especially if elements
      are dry at the moment. 
      >>  IF(IMTREF(I).EQ.ABS(IMAT(N)) .OR.  IMTREF(I).EQ.0) THEN
      Otherwise problems for wetting elements, because layers are not existing. Erosion and 
      Sedimentation is excluded for dry and marsh-nodes in COEF2xx, DEPSN, MEROSN, SEROSN   
      >> SUBR BED, SPROP 
      
045.) ERROR in all COEF2-SubR's
      Erosion & Deposition-Rates are set to zero, if water is flowing below terrain elevation
      (in marsh). Rates to zero is needed for sand and also for cohesive sediment:      
        >> IF(LSS.gt.0 .or. LSAND.GT.0) THEN
      Only set to zero IF(WSELL .LT. ABED)               
      >> SUBR COEF25, COEF25NT, COEF2d, COEF2dNT             
--- Monika Donner, 09.06.2009

--- Monika Donner, 10.06.2009
046) NEW: Restart for cohesive Bed-data now available.
     Please define in CONTROL below "RESTART": 
       >>  BEDREST ****.bed 
     Bed-Restart can also be used without Restart Data for hydrodynamic or sediment transport.
     Only the actual Bed-Layer thickness is used in order to fill or empty predefined 
     Layer structure in CONTROL. All other parameters like settling velocities, critical 
     erosion-shear-stress, critical deposition a.s.o are collected from definitions done
     in CONTROL. The user has to take care about definitions of Layer structure for each 
     roughness class in CONTROL and its consistency to combined Bed-Restart-Data. 
     Only some Errors are fixed like:
       - inconsistency of number of Layers (>> no Transfer of restart values for Node) 
       - inconsistency of Maximal Nodes (>> STOP)
       - inconsistency of Layer-Thickness (>> is accepted and Restart bed is transferred)
     
     If a given Layer-Thickness in Bed-Restart-Data is greater than Thickness defined in CONTROL, 
     predefined Thickness is increased. Therefore FORMBED is called again in order to 
     reconstruct bed-levels and Sum of Layer-Thickness.              
     >> NEW SUBR READ_KALYP_BED
     >> SUBR FILE, SPROP, RDKALYPSO, BLK10MOD
      
047.) Definition of Initial BED-Layer-Thickness is saved as THICKOND(KN,Layer) for preparing
      deposition processes also in BED-LAYERS:
      - actual Bed-Layer-Thickness THICKO(NN,L) 
      - initial, maximal and predefined Bed-Layer-Thickness THICKOND(NN,L)       
      Change in deposition processes (>> NEWBED) will be implemented soon... :-))   
      >> SUBR BED, BLKSEDMOD, INITLSED  
--- Monika Donner, 10.06.2009

048.) update from *.for to *.f90, including introduction of 'implicit none' and ',only:' for block-modules:
      - agen.for to agen.f90
049.) Remove counter of read data lines (ndatln); affects: bcs.for; elflows.for; getbc.for; input.for, inputd.for, wind.for
050.) Rename 'contiLines' array to 'ccls'
051.) Restructure weir implementation (beginning)
      - QCurves, tabular data or weir formula were originally all controlled by NJT=10. Now they can accessed by njt=10, 11 or 12
      - auxiliary implementation so far was, that user has to give 'ENERGY' line in the control file to determine, whether the
        QCurves or the tabular data approach should be used; this decision can be now done for each control structure individually
        as the input file sets up the weir depending on the input data structure. Both data types can be defined in a mixed way
        within the control structure definition file.
      - Control structures with QCurves are completely implemented with data type definitions. The implementation can be adapted for
        the existing control structure types as well in an easy way (affects incstr.
      - complete restructuring of cstrc2d.for and cstrc.for; the confusing code with many repititions of code are simplified, numerical
        derivatives are now calculated within logical loops
      - sorting algorithm for 2D weirs to define left upstream node at first is repaired; it didn't work (affects reweir2Kalypso.f90)
      - adapt call of wform.for (affects gtwflows.for, load3.for)
      - introduce a linked discreteFunction type to mod_discreteFunction to be able to deal with QCurves
      - introduce a complete new subroutine to calculate flow through weir with QCurve (W_QCurves.f90); will be moved to data type of weirs soon
052.) Increase number of possible nodes for a continuity line from 350 to 500. This must be done 
053.) Deactivate some code parts from autoconverge (affects input.for)
054.) Special handling of system dependent preparations in zvrs.for called from file.for is removed; it is not needed anymore.
055.) Reorganizing of PARDISO mkl-call
      - update mkl_solver.for to mkl_solver.f90
      - Get rid of global arrays, use save attribute in mkl_solver.f90 instead
      - Find dynamically the necessary size of the arrays that are used to run PARDISO, i.e. BUFFSIZL is not used for PARDISO anymore
056.) Order of reading restart data an initial data is problematic; qgen calculates distribution of velocity based on the initial water
      levels, if restarting the boundary conditions are first prepared and then restart values are read, thus the distribution can't be
      calcualted correctly. Therefore an additional call to get the initial values at first is introduced to input.for and the auxiliary 
      call of getting the initial values in qgen.for is removed (affects qgen.for and input.for)
057.) Refactoring of hgen subroutine; much more is necessary.
058.) Usage of storage elements as part of continuity line to be able to generate boundary conditions with storage element; thus
      introduction of HS line as Volume-waterstage relationship (IMPLEMENTATION IS NOT FINISHED!)
059.) Introducing fenodes data type; purpose is in general to get rid of arrays. Special reason in the current context is a better
      identification for boundary conditions (recent implementation does not disturb the original nop and cord array approach). Together
      with this implementation a boundary condition type implementation is done.
      - mod_boundaryCondition: Purpose is the generation of BC objects for an easier code reading
      - mod_fenode: Shall replace the according arrays in the future
060.) For model partitioning some stuff is introduced that will be specified in detail later!
--- Nico Schrage, 22.06.2009


--- M. Hassan Nasermoaddeli, at this stage the new package of Bank Evolution is introduced.
-------- possibly a new release ??????????
061.)  The package is introduced in a subfolder (modules_bankevolution) and is in a mudular form. It computes the non-cohesive
      bank evolution of the river bank (left and right bank) in steady as well unsteady cases. The bank evolution(bank_erosion.f90) includes avalnche
      of bank-toe (avalanche.for) due to bank-toe erosion in submerged area, which results in undercutting zone in this region and overhang formation
      above water level. Cantilever failure in the form of shear failure (canilever.f90),  as well as tensile failure(tensile.f90) are 
      simulated in this process including pore pressure distribution in the bank. Bank profiles are defined as continuity lines with extra Id line " PRF"
      following the profile number which must follow the cc1 or cc2 line of the corresponding contiunity line in control file. The bank profile information
      can be read either from a seperate data file (UNIT = IPROFIN), or the continuity line can be assigned as the initial bank profile with bank Id = 0
      i.e. PRF  0.
      The program first computes the tensile failure (unsteady=> rise of water), then avalanche of submerged bank profile and finally computes cantilever
      failure, if each of the process should take process according to their respective criteia.
      The list of subroutines/modules in this package, accompanied by a short discription are given as follows:
      
      1) Bank_erosion.f90 (SubR bank_evolution (CallCounter)):
       It is the main profgram which computes morphological evolution of the bank profiles defined as continuity lines in control file.
       It includes following subroutines:
          *  function average_water_level(k): It is an internal function , which computes the average water level across the profile.
          *  SubR output1(profileIN, filename, unitt): It produces the output file for profiles after each stage of morphological evolutions.
          *  SubR file_error (filename, ierror) : controls the error messages.
          *  SubR DistributeWastedMass(WastedVolume , CurrentProfile, FirstPoint,LastPoint, Distribution, EffectiveWidth, fenode, nn, ElementSource)
             It distribute the failed bank volume as source them along the bank-toe by linear or binomial Probability Mass Function.
          *  SubR HasPrnodeFenode(ThisProfile, ProfileNode , increment): It check if a profile node has a conjugate fe-node and if not searches to find the bank-toe.
          *  SubR MakeFenodes (fenod, no, callcount): It creates derived data type Fenode out of node eleveations and water level.
          *  SubR UpdateFenodes (fenod, no)  : It updates Fenodes after bed erosion has taken place.
      2) Tensile.f90 (MODULE tensile): It computes tebsile failure of an overhang , when it is partly submerged and contains an explicit interface subroutine: 
          *  SubR tensile_failure(pr,fenode,side,newwater_elev, pot_nose_dist ,new_front,number_newnodes,lost_nodes) : It is the main subroutine , which computes tensile failure,
             updates bank profile after failure and assigns the wasted mass to the bed as source term for suspended sediment transport. It includes an internal function 
          *  function q_fenode(conjugate_node), which find the fe node which receives the source term.
      3) Avalanche.f90 (Module avalanch_modul): It computes the avalnche process of submerged area and form the new bank profile afterwards. It includes an explicit interface subroutine:
          * SubR avalanche (trans_pr,totalnode, fenode, last_submerged_fenode, index_lowest_fenode,EffectiveWidth_Overhang,delvolume)!,lsubmerge,rsubmerge): which does the main task of simulation
            of planar slip of the bank surface due to higher slope than crtical angle of repose defined by the user (at the moment hard code).
          * SubR ResuspensionRate (sourceterm, delz, lowernode, uppernode, mode), which assign the extra mass of high slope area to the lower nodes of elements after adjustment the profile slope
            to stable shape.
      4) Module_projection.f90 (Module Projectn) : An explicit interface SubR is embedded in Module Projectn which is called from Avalanche SubR and project vertically the oversteepend nodes on a projection line
         starting form the lowest node:
          * SubR projection(fenode,pointA_distance,pointB,angle,start,endd,newprofile,current_index,side,oldprofile,critical_slop,nose,front,oldpr_index , lost): it does the projection process
            and computes the lost volue and assigns it to the variable lost.
          * SubR intersect(profil,pivotnode,angle,start,p,r,distance,elevation,indx): it computes the intersection of projection line with the profile.
          * function slopeofelement(x0,z0,x1,z1) : it computes the current slope of profile element.
      5) Cantilever.f90 (module cantilever): it computes cantilver failure (shear type) of the overhang if the saftey factor is less than 1.0, and include the following explicit interface subroutine:                  
          * SubR cantilever_failure( AVAL_PR , WATERELEV , UNSATURATED_SLOPE , EffectVolume , fenode ): it computes if the cantilver failure takes place, if so it makes the new geometry of profile
            after failure and computes the produced wasted volume.
          * SubR COINCID (L, N , M , OUTPROFILE ): It is an internal subroutine , which finds out if the new edge of overhang after failure conicides with an available profile node, if not creats
            a new node for intersection.
          * SubR  SIMPLE_PROJECTION ( BEGIN  ,UPPERBOUND ,INCREMENT , CURRENT_CANTI_INDEX ) computes the projection of overhang nodes on an extrapolation line with a unsaturated angle of repose
            in overhang zone.
          * FUNCTION SUCTIONHEIGHT ( WATER_LEVEL , ELEVATION): it computes the negative pore pressure in the bank as a linear distribution.
          * SubR EffectiveVolume (start,endd,inc, origin, OverhangVolume) : it computes the effective volume of the failed overhang volume based on EffectiveArea(contributing area) of the elements
            connected to the desired node.
          * SubR EffectiveArea (NEWTRIBAREA,N): it is not an explicit interface SubR, which can be invoked from any other subroutine. It computes the contributing effective area of the elements
            connected to a node, IRRESPECTIVE of dry-/wetness of the elements.
          * POLYGON_AREA ( START, N , R , PROFIL): It is a (public) subroutine, which computes the area of a closed polygon, used for computation of wasted volume of overhang.   
      6) Makeprofile.F90 (Module make_profile): it creates profile out of continuity lines, when there is no file given for them using the following explicit interface subroutine
          * SubR MAKEPROFILE (CCLine, NumberFenodes, bankprofile,WithMideSide): it creates the bank profiles with and without midside nodes, which will be later assigned to the
           object CCL (continuity line)as a pointer in input.f90.
      7) ReadBankProfiles.f90 (Module ASSIGNROFILES): it assignes the profile data in a seperate data file to each contnuity line defined by the user in control file 
        (CC-line followed by PRF ID) using the following Subroutine:
          * SubR READPROFILES (PROFILEUNIT): read the input data of profile, opened with the unit ID 'IPROFIN'.
      8) Potentialnose.f90 (mk_potentialnose): it computes the intersection of the
         current water level with bank profile using :     
          * mk_potentialnose(temp_prof,pot_nos)
      9) Init_profile.f90 (Module init_type): it initilize derived data types
         Profile, Prnode(profile nodes) nd fenodes.
     10) Shareprofile.f90 (module share_profile): it includes the golbal
         datas for bank_evolution pachage.
     11) types.f90 (Module types): it includes the derived data types used in 
         bank_evolution package (profile, Prnode, fenode and potential_nose).
062.)  In file.f90 the profile data file (UNIT = IPROFIN, FNAM = 18) is opened
      if in control file in data file definition part the name of a file follows
      the ID PROFIL.
063.)  In input.f90 the corresponding data of profiles are read from profile unit 
      and the variable(derived data type) BANKROFILE with related FENODES (derived data type)
      are created. Derived data types are defined in a seperate module (types.f90). 
      In the case of initial profiles (PRF 0), profiles are made out of 
      continuity lines. In both cases the bank profiled if pointed to by a pointer in
      Contiline data structure.  the following modules has been added
      in  USE statement : ASSIGNROFILES. make_profile, types, share_profile,only :BANKPROFILES , fenodes, BANKEVOLUTION.
063.)  BLK10MOD has been modified to include new variables IPROFIN.     
064.)  RMA10.f90 has been modified to activate bank evolution if 
      required(BANKEVOLUTION=.TRUE., decided in input.f90):
       IF (BANKEVOLUTION) THEN
        CallCounter = CallCounter + 1
        CALL bank_evolution (CallCounter)
       endif 
065.) In module Mod_Contilines, USE types has been added to include data types regarding
      bank profile, which is pointed to by a pointer named " MorphoProfile",
     ,if profiles are available, within the data type(Object) "Contiline". A logical 
      switch has been also added to this data type(object) named HasProfile
     ,which is .true. when a MorphoProfile is available.
066.) I had activated a variable definition for SPEC in BLK10MOD, which later I noticed,
      it was defined some where else. Therefore, I removed my changes.
067.) A bug was fixed regarding division by zero in SANDBED [ RATIO=vel(3,n)/(vel(3,n)+diff) ],
      Now it looks like this:
      if ( abs( vel(3,N) ) <= 0.0009 ) cycle 
	    RATIO=vel(3,n)/(vel(3,n)+diff)
068.) In inputd.f90, SLUMP is deactivated in the case BANKEVOLUTION is desireed. 
      Since slump process is already included in avalanche SubR. Include BANKEVOLUTION 
      in the USE statement USE share_profile, ONLY : BANKEVOLUTION.
     
      IF((LSAND .GT. 0  .OR.  LBED .GT. 0) .AND. DELT .GT. 0.) THEN                             
	     if (.NOT. bankevolution) CALL SLUMPIT 
069.) A bug was fixed in Module_projection to prevent fenode number to be zero.	
--- M.Hassan Nasermoaddeli, 26.06.2009	      
     
--- M.Hassan Nasermoaddeli, 29.06.2009	
070.) A few bugs were fixed regarding mass waste computation in SubR ResuspensionRate 
      and DistributeWastedMass. Now the mass waste is computed in g/(m^2.s),formerly in mg/(m^2.s)
      ,which is consitent with the rest of the program. More over the global variable 
      SGSAND has been used instead of local variable RHOS to preserve the consistency.    
071.) Fix the bug regarding mass waste calculation in tensile.for 
072.) IN subroutine DistributeWastedMass, contributing area of dry elements were ignored in TRIBAREA, 
      now it is calculated in DryTRIBAREA .
--- M.Hassan Nasermoaddeli, 29.06.2009	
     
--- M.Hassan Nasermoaddeli, 30.06.2009 
073.) Assign the sediment initial proprities ALSO to dry elemnets, for numerical stability 
      in unsteady flow. It is done in INSAND.FOR by the following substitution:
       IF(IMAT(N) .NE. 0) THEN     instead of IF(IMAT(N) .GT. 0) THEN                                         
074.) Remove a bug in write format in subroutine output1 within bank_erosion.f90.
--- M.Hassan Nasermoaddeli, 30.06.2009 


--- Monika Donner, 07.07.2009
075.) NEW: Deposition for cohesive Sediment is now also fed in BedLayers.     
     Deposition for Cohesive Sediment till today was only filling up Suspended Layers.
     Now Deposition is also filling up Bed Layers, IF all Suspended Layers are already full.
     The Layer, which can increase to maximal thickness, is now transferred to the lowest
     and last Bed Layer             
     >> SUBR NEWBED          
076.) Correction in writing out Erosion and Deposition rates:
      - Written out Erosion rate EDOT(NN) from SUBR MEROSN is in [kg/m� x m/s] with DELT 
        must be divided by DELT and multiplied with 1000.0
      - Written out Erosion rate SERAT(NN) from SUBR SEROSN is already in [g/m� x m/s] without DELT 
      - Written out Deposition rate DEPRAT(NN) from SUBR DEPSN is in [m/s] without DELT and without C
        must be multiplied with C (VEL(6,NN)   
      >> SUBR WRITE_KALYP_BED
--- Monika Donner, 07.07.2009


077.) comment out the difinition of fenodes in initl.for (made by Nico), since the
      same variable has been defined in the Bank_evolution package.
078.) comment out the application of fenodes in RDKALYPSO.for (made by Nico), since the 
      same variable has been defined in the Bank_evolution package.
079.) comment out the definitaion of data type fenodes in Mod_Fenode module (made by Nico),
      since the same variable has been defined in the Bank_evolution package.
--- M.Hassan Nasermoaddeli, 07.07.2009 


--- Monika Donner, 07.07.2009
080.) Error while compiling, Correction:
        open (unit = 4343, file = outName)         
     >> SUBR Modell-Schreiben          
081.) Error while compiling, Correction:
        if (ProfileID ==0 .and. BANKEVOLUTION) then      
      >> SUBR INPUT
082.)Error while compiling : no intent(in) defintion possible. Correction
       type (discreteFunctionGroup), pointer :: QCurves
     >> SubR mod_ControlStructure
--- Monika Donner, 07.07.2009


--- Edgar Nehlsen, 10.07.09
083.) Error while compilung, Correction:
        Enlarge Character Line256
      >> SUBR Modell_schreiben
084.) Error while debugging, Correction:
        Variable PERM is now set as allocatable
        Actually it is not used when the deafult values are used for the PARDISO solver
      >> SUBR mkl_solver
--- Edgar Nehlsen, 10.07.09


--- Monika Donner, 14.07.2009
085.) Special Corrections for cohesive Sediment-definition
      Transfer to node for Layer defined attributes like THICKO(J,K), GBO(J,K) and
      so on, should be done by real number of Layers at each node, and not by the 
      running local number of layers
      Look at inner-loop: DO K=1, NLAYO(J) or DO K=1, NLAYTND(J) 
      >> SubR SPRPOP, BED
086.) Middling Sediment and Layer attributes at midside-nodes for suspended and bed layers
      was prepared. At midside-nodes the minimal (!!) Number of Layers must be used, in order to 
      avoid averaging with dummys.                          
      Look at:  NLAYTND(NN)= MIN (NLAYTND(IMID(NN,1)),NLAYTND(IMID(NN,2))) 
      All MAX(...) arguments were changed to MIN(...)                      
      >> SubR FORMBED, SEROSN, MERSON, SPRPOP, BED                         
087.) NEW OPTIONS for all Boundary-Conditions:
      Now fast definitions for 'BC'-Blocs in the CONTROL-Data is Possible. For the 
      First simulation a full 'BC'-Bloc must be defined. For all following time
      steps all BC-Lines can be skip, if Iterations and simulation types are the same.
      If some setting should be change, just use a new complete 'BC'-Bloc. These    
      reduced 'BC'-Bloc options can be used with and without hydrographs.
      - Example without hydrograph:        
         DT        0.5000
         QC             1       0    0.50  -2.355   0.000  20.000  300.00
         HC             2       0   -1.61   00.00    20.0  -100.0        
         ENDSTEP   
      - Example with hydrograph:        
         DT        0.5000            
         ENDSTEP            
      >> SUBR INPUTD, GETBC   
--- Monika Donner, 14.07.2009

--- M.Hassan Nasermoaddeli, 07.07.2009 
088.) SUBR Input : Add the definition of the variable DirPointer as 
        REAL(KIND=8) :: dirPointer
089.) MODULE Mod_ControlStructure : Add the double precision label 'd' to two last 
      arguments in calling subroutine.
      addValueTriple (because of compilation error):
        call addValueTriple (thisCstrc, 0.0d0, -500.0d0, -500.0d0)
        call addValueTriple (thisCstrc, 0.0d0, 8900.0d0, 8900.0d0)
--- M.Hassan Nasermoaddeli, 07.07.2009 

--- M.Hassan Nasermoaddeli, 17.07.2009
090.) Defining a fixed tolerance(1 cm) for submergence of bank overhang.
      IF ( (old_pr(i)%prnode(integertemp)%elevation - pr%water_elev) <= -0.01 )then
        >> SUBR BANK_EVOLUTION
091.) Fixing bug regarding ouput generation for multiple bank profiles:
      -Adding profile number i as a new argument in subroutine output1.
          for example:     call output1 (pr, exner_pr, 11, i)
      -Appending each profile to the previous one in output.
          Refer to    inquire (file = filename, EXIST= exists) in SUBR output1
      -Adding bank profile number and Contiline number to the head of each profile
       in SUBR output1.
      -Output after tensile failure is made now only if overhangs are submereged.    
          IF (Lsubmerged .or. Rsubmerged ) CALL output1 (profil,tens_pr, 21, i)
        >> SUBR OUTPUT1
        >> SUBR BANK_EVOLUTION
092.) Fixing deallocation bug of variables Ladded_nodes and Radded_nose by seperating
      their cooresponding if statement:
      refer to : if (Rsubmerged) then
                 deallocate ( Radded_nodes)	 ENDIF
093.) Fix the bug regarding distribution of failed / wasted mass from bank failure
      at bank-toe, in the case no bank erosion has happened in either of bank sides.
         IF( (FirstNode == 0).OR.(LastNode == 0) ) CYCLE  LeftRightBank                 
       >> SUBR DistributeWastedMass  
094.) Include a warning message if the distance coordinate of undercutting front is
      computed negative. In this case program is 'PAUSED', so that the user saved
      the already generated results and tries to find the error in the PROFILE data.
       >> MODULE AVALANCHE  
       >> MODULE PROJECTION    
095.) Bug Fix: In the case the deepest profile node(bank-toe) for both sides of bank
      are identical include this node once in aval_pr (avalanche profile).
          refer to IF( (ava_pr%prnode(n-1)%distance == temp_pr(j)%prnode(p)%distance) &
   &       .and.(ava_pr%prnode(n-1)%elevation == temp_pr(j)%prnode(p)%elevation)) THEN
       >> MODULE AVALANCHE      
096.) Bug Fix: In the case the projected node of overhang coincides with front of
               undercutting, make the fe_nodenumber negative.
              - tens_pr%prnode(i+p)%fe_nodenumber = - ABS(tens_pr%prnode(i+p)%fe_nodenumber)
       >> MODULE AVALANCHE      
097.) In the early phase of formation of undercuting, if the projection of the first node
        over water surface is beyond the space between nose and front, do not project it.
          -Refer to   if (oldprofile%prnode(start)%fe_nodenumber > 0 ) & 
&            newprofile%prnode(current_index + j)%attribute = 'profile'
       >> MODULE PROJECTION
098.) Now a mixture of profiles with PROFILE ID = 0 (internal profiles) and PRofile ID> 0
      (external profiles) is possible. This allows coexistance of profiles connected to 
      contilines( given in a seperate data file followed by command PROFILE in in control.r10)
      and those are generated directly from contilines (PROFILE ID = 0).
        >> Module Assignprofile /SUBR READPROFILE
        >> SUBR Input.for
099.) Introduce a new line in control file 'GTP' (Geothechical Properties) of sand: 
         - Please refer to data dictionary (variable discription) block in BLKSANMOD.
      
         - REAl         :: critical_slope,crepose,repose,EFFECTIVE_COHESION
     +     ,FRICTION_ANGLE, MATRIC_ANGLE        
           Therefore excluding these variables from Mudule param.
        >> SUBR INSAND.FOR
        >> MODULE BLKSANMOD
        >> MODULE CANTILEVER
        >> MODULE PARAM
        >> MODULE TENSILE
--- M.Hassan Nasermoaddeli, 17.07.2009  
 
--- M.Hassan Nasermoaddeli, 23.07.2009          
 100.)Include the new data lines in documentation RMA-Kalypso_ManualControlFile.doc
        - Complete the definition of PROFILE data line in FILES block.
        - Add data line PRF in Auxilary Geometry Input block.
        - Add data line GTP (geotechnical properties) in SAND block.
        - Add data line POR (pore pressure distribution function over water table)in Sand block.
--- M.Hassan Nasermoaddeli, 23.07.2009          

--- M.Hassan Nasermoaddeli, 27.07.2009           
101.) Introduce a variable, which reflects the extra soil cohesion due to
       vegetation roots in bank stability modelling.(Real :: ROOT). It is read in SubR INSAND
       in data line GTP.
        >> MODULE  BLKSANMOD
        >> MODULE  CANTILEVER
        >> SUBR    INSAND
102.) Introduce three parameters (EXPO1, EXPO2, EXPO3), which defines the pore pressure distribution
       in the riverbank over water table. Earlier only a linear distribution was possible, which was
       not realistic!this distribution is used in bank stability analysis.The distribution is in the form :
       - suction force per unit weight = INTEGRAL(EXPO3 * h^3 + EXPO2 * h^2 + EXPO1 * h) from 0 to h. 
        h is the elevation above water table. Two new subroutines and one function were developed to 
        compute integral using Simpson rule.They are in CANTILEVER.F90.
        >> MODULE  BLKSANMOD
        >> MODULE  CANTILEVER
        >> SUBR    INTEGRAL       : The main program calling INTEGRAL_TRAPZ in a loop.
        >> SUBR    INTEGRAL_TRAPZ : The Sinpson rule for summation of area under pore pressure function FUNC().
        >> FUNCT.  FUNC           : The pore pressure distribution function.
103.) Reducing critical saftey factor of bank stability from 1.1 to SAFTEYFACTOR = 1.0.
       >> MODULE   CANTILEVER
104.) Fixing a bug regarding retaining existing overhang shape (front and nose), in the case the cantilever failure
      doesnot occur.
       >> MODULE   CANTILEVER        
105.) Increasing the accuracy of Function POLYGON_AREA from REAL to REAl(KIND = 8).
       >> FUNCT.   POLYGON_AREA
106.) Fixing a few bugs in sorting nodes, if tensile failure happens. USE INIT_TYPE module to initilize 
       PROFIL in each cycle over profiles, before sorting them to it.
       >> SUBR.    BANK_EVOLUTION
107.) Fixing a bug regarding finding the closest profile node under overhang node with non zero 
       fe_node number. This function (q_fenode) is called , whenever the eroded node in overhang (due
       to tensile failure) has no conjugated fe_node to receive its mass as source term.
       >> MODULE   TENSILE       
108.) Fixing a bug in computation of RHOBS, in the case that the profile node has no conjugated fe_node(q=0),
       SGSAND(q) would trigger an error. Now the function q_fenode computes the nearest fenode to it. SGSAND(q_fenode(q)).
       >> MODULE   TENSILE
109.) Chaning an if statment to include a physical fix tolerance of 1 cm in checking development of base point.
       - base point is propogation of the front point of undercut, when a front is already available.
       -if( (rel_dd - rel_dist_oldfront )> 0.01 )then 
       >> MODULE PROJECTN
110.) Fixing a few bugs:
      - Initialize array index_lowest = 0
      - Exclude profile nodes with FRONT and NOSE attribute in finding local minima ( they might be accounted as
         local minma wrongly) and correct the rest of if block in finding local minima.
      - Set nose elevation to current water level instead of average water level of profile (point%elevation = wsl1)
      - Fix the error in SUBR. ResuspensionRate, if either of lower node or upper node in a 1D profile element has no
        conjugated FE_node. In this case the computed source term resulting from avalanche is assigned to the node
        which has a conjugate Fe_node. This special case override the rule that the eroded upper node mass is 
        assigned to the lower node as source term.
       >> MODULE AVALANCHE_MODUL 
--- M.Hassan Nasermoaddeli, 27.07.2009           
                              
--- Monika Donner, 30.07.2009 
111.) Error while using wet Bulk density and Erosion Rate for suspended Layer erosion.
      User defined Parameters for EACH Layer should be used:
      Defined wet Bulk density GABND(N) and Erosion Rate ERCND(N) per Node in Control-file 
      Line "CSS3" is now no more used. But the defined Sus.Layer attributes in in Control-file 
      Line "CSS4" with wet Bulk density GBND(N,L) and Erosion Rate EROST(N,L) per Node and 
      Suspended Layer are used.                             
      >> SubR FORMBED, SEROSN, MERSON, GETMAS, NEWBED
112.) Output form FORMBED with all Layers at each Node is deactivated, because all
      informations are written now into each BED-File.                                     
      >> SubR FORMBED
113.) Middling all Sediment and Layer attributes at midside-nodes for suspended and bed layers
      was prepared. At midside-nodes the minimal Number of Layers must be used, in order to 
      avoid averaging with dummys.                                             
      >> SubR SPRPOP, BED  
--- Monika Donner, 30.07.2009 


--- M.Hassan Nasermoaddeli, 30.07.2009 
114.) Correcting the reading of bank profiles , when there is no profile data file (meaning that 
      each CCL line with PRF ID itself is a bank profile). Now all cases (all PRF = 0, all PRF /=0
      and a mix of these two case) should work.
      >> SubR INPUT
115.) A bug was fixed when producing midside nodes for Conuity lines . After finishing the creation
      of midside nodes for each Continuity line, the varaible tmpSeg should be nullified. Now it is
      done by satring reading each continuiy line. (NULLIFY (tmpSeg))
      >> SubR CHECK
--- M.Hassan Nasermoaddeli, 30.07.2009 
      
116.) Increasing the number of maximum nodes within a continuity line to 3535; the "strange" number was chosen, because it can be
      easily searched and replaced by another number.
      TODO: Make the size of a continuity line variable; use a linked list in future to transfer data instead of a fixed-size-array
      (affects: BLK10Mod, check, initl, input, load, parakalyps, qgen, qgenTransition, QKalypsoCalc, RDKalypso, Reordering)
117.) Sorting the order of the read-in-files in the FILES-Block in input according to the manual.
      (affects: input)
118.) Add the oportunity to specify the time step in different units (e.g. hours, minutes, seconds, milli seconds); hours remains as standard;
      The time unit specification can be given as additional information in the DT-line.
119.) Add new possibility to write out Error-Message by using a message string.
      TODO: The Error-handling in RMA�Kalypso should be reworked completely
      (Affects: ErrorMessagesAndStop)
120.) Add Error messages for some missing input lines during boundary condition
      TODO: A generalized way of reading in data should be established!
      (Affects: ErrorMessagesAndStop, getBC, inputD)
121.) Move generation of the simulation model m_SimModel temporarily from the program unit the to the main subroutine RMA_Kalypso.subroutine,
      because from time to time there is an unsolved problem with the memory adress of the simulationModel-instance; this does not happen,
      if the m_SimModel is generated in the subroutine
      TODO: This needs to be fixed with a further development of the object-based approach
      (affects: rma_Kalypso.program; rma_Kalypso.subroutine)
122.) Introduce possibility to have larger discharges as specified by 8 numbers. This is mainly from interest in combination with Kalypso 1D/2D.
      User can use either the old 'QC'-line or a new modified 'QCFF'-line or 'QC *'-line (see also change No. 52 from release 1.1.0)
      (affects: sbgen)
123.) Add some ErrorMessages
      (affects: sbgen)
124.) bugfix (tvol is allocated with number of elemens and not with number of roughness classes)
      (affects: front_mkl3)
125.) Update some code and move re-initialization in front of loop, where it is used; bugfix the generation of the continuity line objects
      (affects: check)
126.) Including the flibs-library in version 0.9 (December 2008) from sourceforge (http://flibs.sourceforge.net/);
      It includes many modern general programming functionalities, that can be used for free. For documentation purposes to use something from that, 
      please visit the web-page above!
      Attention: For usage, don't include the files to your software project (e.g. in Visual Studio); please just give the include-directory in the 
      compiler settings; If someone will use anything from the library please specify the include-directory in the change and send an information via
      Email.
127.) Add some file handling functions/ subroutines
      subroutines:
      - openFileObject (open a file unit)
      - closeFileObject (close a file unit)
      functions:
      - newFile (create a new file object)
      - findFreeUnit (find a unit that can be used to open a file)
      - isFileUnitOpen (inquire a unit-no.)
      - fileExists (by name)
128.) Enable lists of files using the flibs,v0.9; Please add include path \flibs\datastructures to your compiler settings
129.) Introduce option of distributed calculations: A model may be split into several parts. They must then share a common boundary, where they exchange
      their values. The formulation must be implicit, i.e. the result must be considered in the calculation, the global calculation is done by the 
      so called Schwarz-Iteration around the Newton-iteration. Thus a calculation step will be converged by converging the model in the sense of the Schwarz-iteration.
      In the end each sub-domain model must be completely Schwarz-converged, i.e. the last Schwarz-iteration step of each sub-domain must get in first place new boundary
      conditions from the neighbours without bigger changes compared to the last Schwarz-iteration (under a set Schwarz-convergence-border) and in second place each sub-domain
      must be fully Newton-converged in the last Schwarz iteration.
      For making the Schwarz iteration operable, the model must communicate with the neighbours. Normally the distribution is done by a wrapper/ controlling routine, like
      Kalypso, that distributes the out-written boundary conditions to the neighbours. Besides it collects the converged/ not converged/ diverged informations to decide how a
      distributed calcualtion may continue. Therefore the main routines and many modules were adapted. The main Schwarz iteration control is executed from the rma_kalypso.subroutine.
      It is calling the subroutines/ functions from the SchwarzIterationControl_Helper.module
      (affected and new routines/ modules: bline1, input, rma10; mod_contiLines, mod_model, mod_node, mod_discreteFunction, mod_SchwarzIterationControl_Helper, const_modelConvConstants)
--- Nico Schrage, 10.08.2009


130.) Bug fix during reading of boundary conditions; Specification of a time step length should be sufficient, i.e. if no dates are
      given, there should not be a read error. Read error would occur, since there is no fixed format necessary.
      
--- Nico Schrage, 15.08.2009

131.) Deleting non-sense output in OutpuMESS.OUT for cohesive Sediment
     >> SUBR NEWBED     
--- Monika Donner, 28.08.2009

132.) bugfixing: Declaration mistake at parameter for PARDISO
      (affects: mkl_solver.f90)
133.) Introduce "implicit none" to the junction coef-Subroutine
      (affects: coef1DJunction.f90)
134.) Get rid of XHT-scaling at junctions (for sigma-Transformation) and some code clenaing
      (affects: coef1DJunction.f90)
135.) A lot of code cleaning; especially for junctions the NLSTEL (ID-no. of last element, where an equaiton occurs) was buggy
      (affects: FRONT.for)
136.) To pass variables of defined type with variable structure and size, the calling and the addressed subroutines should be contained in modules; thus some routines
      - are from now on contained in modules
      - address the modules holding the called subroutines
      (affects: getgeo1, rdkalypso, model, getgeo, getinit, initl, input, rma10, RMAKalypso)
137.) Skipping parameter assignment in getgeo for junction elements
      (affects: getgeoms.f90)
138.) get rid of neighbourhood relations in terms of arrays, it costs too much memory as the size is allocated with the maximum number of nodes within any continuity line; instead a neighbourhood
      relation list is introduced to the m_simModel and contained data structures.
      (affects: ParaKalyps.f90, pasche_trees.f90, Mod_Node.f90)
139.) Some refactoring (arc -> localArc) because of name conflict
      (affects rdkalyps.f90)
140.) Introduce some handling for 1D Junctions
      (affects rdkalyps.f90)
141.) Introduce node-type usage in 1D-Profile interpolation
      (affects rdkalyps.f90)
142.) Update front_mkl to f90 and bugfix regarding parameter definition for PARDISO.
      (deleted sub: front_mkl.for added sub: front_mkl.f90)
143.) Introduce a FEmesh type defintion for the storage of the mesh structure
      (added module: Mod_meshModelFE.f90 in folder modules_Components_general)
144.) Introduce a decimal tree structure to hold huge amount of node numbers and find them fast
      (added module: Mod_Node_DecimalTree.f90 in folder modules_Components_general)

--- Nico Schrage, 17.09.2009

145.) Bugfix in fill_slopes; when checking the nodes without slope, the current node must first be taken from the mesh before dealing with the neighbours
      (affects: Pasche_trees.f90)

--- Nico Schrage, 25.09.2009

146.) Delete writing of interpolated node results to reduce the amount of necessary  memory; IR and IN lines will be ignored!
147.) Reduce the degree of polynomials for 1D approach from 0:12 to 0:4

--- Nico Schrage, 27.09.2009

148.) Completing comments regarding mathematical formulation of momentum equation.
        >> SubR: coef25, coef2dnt, coef2
149.) Correcting the explanation of the Variable ITURB in comment block.
        >> SubR Turbulence  
150.) Now it is possible to create restart file for profiles after the keyword PRFREST in file block of control file.
      SubR : file, rma10, ReadBankProfiles, input
151.) Addition the option of refine mesh adaptation in tensile failure computation by variable refine.
        >>SubR: INSAND; Module : BLKSANDMOD ,Tensile.
152.) Removing the bug regarding correct computation of control nodes (last submerged node and bank-toe node)
      by introducing new Module : ControlNodes including explicit subroutine CriticalNodes. These nodes determine
      the extent of ditribution of failed material at bank-toe.
        >>SubR/Modules: ControlNodes, Avalanche, DistributeWastedMass, bank_erosion.
153.) Changing wasted mass distribution algorithm. Due to great amount of source term, the ADV-Diff equation couldn't converge.
      even with 10% of this volume it couldn't converge. It was decided to summ all the waste mass together and assign it directly to the 
      bank-toe via the same distribution fuction used to be applied for distribuing source term at bank-toe.Now it is smoothly distributed 
      over bank-toe. Therefore, the former subroutines, used to compute the source term were deactivated, which includes:
        >>SubR/Module  EffectiveVolume,   EffectiveArea, ResuspensionRate  and the algorithm for this purpose at the end of Module projection
      was commented out.
      the other affected subroutines:
        >> SubR/Module DistributeWastedMass,  Avalanche, Cantilever                
154.) Include node filters for the following cases:
       a) When front and nose are very close together (<=0.001 m) 
          >>  SubR : Avalanche
       b) When basepoint has no conjugate fenode, it is filtered out
          >>  SubR: Cantilever
       c) When non-conjugated nodes(without linked fenodes)are closer than 1 cm together.
          >>  SubR: Cantilever
155.) Bug fix: correcting an error in computation of negative pore pressure in the overhang.
       Now the area of the pore pressure distribution's curve to the y-axe is computed as matric force.
          >>  SubR: Cantilever                           
156.) Bug fix: the profile after avalanche was limited only to the left bank down to talweg in case only left bank is available.
      now the correct number of profile nodes are preserved after avalanche in the mentioned case.
        >> Module Avalanche
157.) Several new yet unpredicted profile node adaptation scenarios were added to the node adaptation algorithm. 
      SubR: Tensile, Avalanche, Module_projection, Cantilever.        
158.) Bug fix:the computation of lost mass "lost" was corrected.
        >> Module projection
159.) Bug fix: The updating of elevation of bank-toe nodes due to deposition of failed mass was not included in the output profiles. 
      It was due to the fact that the whole mass waste was assigned to the source term in ADV-DIFF equation (see below for more information).
      Now after cantilever failure(output) the output data includes the final shape of profile including bank-toe aggradation due to mass waste. 
        >> Module  Avalanche , Bank_erosion
160.) Global variables ava_pr and canti_pr were removed and made local.
      SubR: Avalanche, cantilever, tensile and bank_erosion.
161.) Potential nose computation was improved for the case of uneven zig-zag profile.
       >> SubR: Bank_erosion, Potentialnose        
    
--- M.Hassan Nasermoaddeli, 01.10.2009 

162.) Correction of an error in computation of pore pressure force.
       >> Module Cantilever
163.) Creation of an output file "SF.txt" to log the time of cantilever failure.
       >> Module: Cantilever, Tensile and SubR: bank_erosion, output1.

--- M.Hassan Nasermoaddeli, 07.10.2009

164.) Message level reduction (msglvl = 1 -> msglvl = 0) to reduce output from MKL; it's anoying! For using a higher msglvl set it in front_mkl.f90
      (affects: front_mkl.f90)
165.) Some improvements for distributed calcualtions, i.e.
      - 'Schwarz' iteration output
      - introduction of an inner BC-improvement algorithm wrapper, where any improvement algorithm can be introduced
      - handling of stop-events

--- Nico Schrage, 09.10.2009

166.) Some little refactoring
      (affects: Bline1.f90)
167.) Commenting of matrix output (debugging option); some improvements on output
      (affects: coef2*.for, testoutput.f90)
168.) Adaptations for distributed calculations:
      - manual setting of convergence border (input.for)
      - a-priori setting of inner boundary condition type (getbc.for, inputd.for)
      - changing of boundary condition update behaviour (rma10.for)
      - direction fix of nodes at the edge of exchange boundaries
      (affects: input.for, getbc.for, inputd.for, rma10.for, modules related to distributed calculations)
169.) improve updating informations for relative changes
      (affects: update.f90)
170.) Make direction fix for edge-nodes of Q-boundary lines a seperate subroutine
      (affects: qgen.for)
      
--- Nico Schrage, 21.10.2009

171.) Include wind shear stress calculation by means of windf.f90 file; modernize wind.for to wind.f90
      (affects: wind.f90, sbgen.sub)
172.) Store and calculate residual and viscosities in each element and write it into the FE lines to be able 
      - to visualize residuals in Microstation
      - to compare really calculated viscosities with minimum viscosities
      (affects: BLK10MOD, coef25nt, initl, Modell_schreiben)
173.) Cleaning source code
      (affects: LineTransitionCalc)
174.) Enable setting of initial velocities; values in Control file, line C3 are taken
      attention, if user wants to have 0.0 velocities everywhere (like at the beginning of lake solution procedure) unom must be set to 0.0d0!
      (affects: input, getinit)
      
--- Nico Schrage, 06.11.2009

175.) updated wind.f90 for the input of external winddata (global variable at diffenrent times)
176.) new: getind.for; this subroutine is necessary for the input of external wind data (global variable at different times)
177.) added possibility of a fixed direction of inflow at waterstage boundary conditions
      (affects: bfrom.for, geth.for, hgen.for, initl.for, load3.for, sbgen.for)
178.) new: getwave.for; this subroutine interpolates wavedata of extrenal nodes
179.) added input and output of a flow direction for discharge boundary conditions of an extrenal hydrograph in check.for

--- Eva Falke, 10.11.2009

180.) fix compilation problems
      (affects file.sub, sbgen.sub)
181.) Allocation of weighting factor for h-boundary conditions adapted to ccl size
      (affects hgen.sub)
      
--- Nico Schrage, 10.11.2009

182.) fix compile problems
      (affects: getwind.sub, wind.sub)

--- Nico Schrage, 11.11.2009

183.) Add factor to speed up bed evolution in case of cohesive sediment simulation.
      (affects: input, serosion, merosion, newbed, blksedmod)
      
--- Edgar Nehlsen, 20.11.2009

183b.) Allocate ESTIFM array correctly for coef usage; seems not to be senseful, but makes it 'compilable'
      (affects BLKECOM)
183c.) Reverting the friction multiplicator for Marsh flowto quadratic distribution; there's no knowledge about better behaviour of a linear distribution
      of the friction multiplicator; it needs to be discussed in detail, what to use!
      (affects: coef25nt)
184.) Some declarations!
      (affects: coef25nt)
185.) Interpolate restart results for interpolation profiles in 1D, i.e. not only vel but as well vold, vdot, vdoto
      (affects: getinit)
186.) Hard coded maximum number of equations can now be set in control file, thus the default value can be reduced to 2000000
      (affects: initl)
187.) Add missing initializations
      (affects: load3)
188.) Create list of default initializations according to manual to be able to change PARDISO options easily
      (affects: mkl_solver)
189.) Change definitions slightly; variable passing to PARDISO is still not without errors; perhaps wrong libraries are linked
      (affects mkl_solver)
190.) Adapt to write junction elements correctly
      (affects: Modell_schreiben)
191.) Change error message for 1D-nodes in Geo-approach without data
      (affects: rdkalypso, errormessageandstop)
192.) Reduce maximum change tolerance to 0.3 [mm] respectively [mm/s] if restarting
      (affects: update)

--- Nico Schrage, 27.11.2009

193.) Adapt number of elements in reordering sequence to interpolated nodes of 1D-approach, if restarting.
      (affects RDKalyps.for)
194.) Increase the tolerance for absolute changes if using the relative change check during convergence
      (affects update.for)
195.) Improvements for restarting with interpolated profiles.
      (affects: getinit, getbc, modell_schreiben, rdkalypso)      

--- Nico Schrage, 30.11.2009

196.) Write out variables (vel, vold, vdot, vdoto) with higher precision (scientific format)
      (affects Modell_schreiben)
197.) Write out type of 1D-2D transition to result file for proper restarting
      (affects Modell_schreiben)
198.) Delete commented code
199.) Add some comments      


--- Nico Schrage, 02.12.2009

200.) Fix critical bug in distribution calculation at 1D/2D transitions
      (affects: QgenTransition)
201.) Format fix with higher accuracy, so it remains readable for BCE2d
      (affects: Modell_schreiben)
202.) Beauty farm
      (affects: front_mkl)
      
--- Nico Schrage

203.) bug fix at Q-distribution calculation at 1D-2D transitions: Marsh parameters of midside nodes were used. They're not updated correctly as a linear shape function should be used.

--- Nico Schrage, 11.12.2009

204.) Adding the fiber-break mode force equilibrium equation for computation of shear strength of vegetation root.
      Now in the control file in the position of data corresponding to ROOT, the shear strength of the root in Newton
      should be given.
      (affects: cantilever.f90)
      
--- M.Hassan Nasermoaddeli, 17.12.2009
      

205.) Extend precision of some variables in reordering
      (affects: reordering.f90, blkasteph.for)
206.) minor changes

--- Nico Schrage, 18.12.2009

207.) additional kilometre information at supercritical flow
      (affects coef1dpolynomials.f90)
208.)
version information

--- Nico Schrage, 22.12.2009 (version 1.2.0 beta build 2009/12/22)

209.) Increase number of digits for number of active equations in console
      (affects load3.for)
210.) Correct calculation of water level at midside nodes for purpose of w-q-relationships
      (affects coef25nt.for)
211.) Increase number of entries in w-q-relationship tables
      (affects stfltab.for)
212.) Add some line read checks
      (affects RDKalypso.f90)

--- Nico Schrage, 08.01.2010

213.) Start modernization of element inflow handling
      (affects lnflo.sub, elflows.sub)
214.) Add some documentation concerning element inflow definitions

--- Nico Schrage, 12.01.2010

215.) Accuracy of Q-output at continuity lines for BC-generation (origin from Eva)
      (affects check.for)
216.) Flushing the Q-output file (iocon)
      (affects check.for)
217.) Add writing and reading of result informations on interpolated 1D-elements for proper restarting; this only works, if no
      numbering changes/ model changes are incorporated.
      (affects: rdkalypso.f90, modell_schreiben.f90)
218.) Some code modernization.
      (affects: front_mkl.f90)

--- Nico Schrage, 15.04.2010 (released RMA·Kalypso Version 1.2.0 Release Candiate 1 build 15.04.2010 with filename: rma-kalypso_1.2.0_RC1_<sys>_build20100415.exe)
