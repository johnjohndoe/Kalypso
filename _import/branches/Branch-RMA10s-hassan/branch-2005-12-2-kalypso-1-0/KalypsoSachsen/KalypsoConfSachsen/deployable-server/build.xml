<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="Kalypso-Sachsen: server" default="deploy-lfug" basedir=".">

    <!-- 
		Description: central build file for the Sachsen Project.
		
		Targets which have a description element are so-called public-targets,
		that is, targets that you (the deployer) are more likely to use
		to deploy the files. Public targets appear with a dark green circle
		in the ant-outline and the ant-view (other targets are light green).
		
		The default target is the deploy target to use when deploying for
		the LFUG.
		
		______________________________________________________________________
		Checklist:
		
		: Server-Deploy for BCE :
		1. deploy-data
		2. deploy-models
		3. deploy-services
		
		: Server-Deploy for LFUG :
		1. deploy-lfug
		
		______________________________________________________________________
		Or, when in the development process (only within BCE):
		
		* redeploy-services
		* redeploy-XXXService
	-->

    <property name="project.path" value="${workspace}/KalypsoConfSachsen" />
    <property name="src.path" value="${project.path}/deployable-server/webdav" />

    <property name="dist" value="${project.path}/deploy/server" />
    <property name="dist.webdav" value="${dist}/webdav" />

    <property file="deploy.properties" />
    <property name="deploy.webapps" value="${tomcat.server.cataling_home}\\webapps" />
    <property name="deploy.webdav" value="${tomcat.server.cataling_home}\\webapps\\webdav" />

    <target name="prepare">
        <echo message="Creating the required directories...." />
        <mkdir dir="${dist}" />
        <mkdir dir="${dist.webdav}" />
        <mkdir dir="${dist.webdav}/prognose" />
    </target>

    <target name="clean">
        <echo message="Cleaning all subprojects..." />
        <delete dir="${dist}" />
        <ant antfile="${workspace}/KalypsoBuild/central-build/build-core.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoServiceCalc/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoServiceMetaDoc/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoServiceObs/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoServiceUser/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoOptimize/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelSpree/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelElbePolte/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelWavos/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
             
<!--TODO: clean other models -->             
             
        <ant antfile="${workspace}/KalypsoModelNA/etc/ant/build.xml"
             target="clean"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoAdapterPSICompact/etc/ant/build.xml"
             target="clean"
             inheritall="false" />
        <ant antfile="${workspace}/KalypsoPSICompactImpl/build.xml"
             target="clean"
             inheritall="false" />
        <ant antfile="${workspace}/KalypsoDWD/etc/ant/build.xml"
             target="clean"
             inheritall="false" />
    </target>

    <target name="copy-data" depends="prepare">
        <echo message="Copy the data files to the local deploy dir" />
        <copy todir="${dist.webdav}/data">
            <fileset dir="${src.path}/data" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="copy-allconf" depends="prepare">
        <echo message="Copy the configuration for the server to deploy dir" />
        <!-- This is ok because there are currently only conf files in src.path 
	    TODO should some non-conf stuff come into this dir, then 
	         please update this target
	    -->
        <copy todir="${dist.webdav}">
            <fileset dir="${src.path}" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="co-sachsen-model-elbe-polte" depends="prepare">
        <echo message="Checkout the elbe-polte-model for Sachsen" />

        <antcall target="co-model">
            <param name="pPackage" value="KalypsoSachsen/Data/KalypsoElbePolte" />
            <param name="pName" value="ElbePolte" />
        </antcall>
    </target>

    <target name="co-sachsen-model-elbe-zwg" depends="prepare">
        <echo message="Checkout the elbe-zwg-model for Sachsen" />

        <antcall target="co-model">
            <param name="pPackage" value="KalypsoSachsen/Data/KalypsoElbeZwischengebiete" />
            <param name="pName" value="ElbeZWGe" />
        </antcall>
    </target>

    <target name="co-sachsen-model-schwarzeelster" depends="prepare">
        <echo message="Checkout the schwarze-elster-model for Sachsen" />

        <antcall target="co-model">
            <param name="pPackage" value="KalypsoSachsen/Data/KalypsoSchwarzeElster" />
            <param name="pName" value="SchwarzeElster" />
        </antcall>
    </target>

	<target name="co-sachsen-model-spree" depends="prepare">
        <echo message="Checkout the spree-model for Sachsen" />

        <antcall target="co-model">
            <param name="pPackage" value="KalypsoSachsen/Data/KalypsoSpree" />
            <param name="pName" value="Spree" />
        </antcall>
    </target>

    <target name="co-sachsen-model-weisseelster" depends="prepare">
        <echo message="Checkout the weisse-elster-model for Sachsen" />

        <antcall target="co-model">
            <param name="pPackage" value="KalypsoSachsen/Data/KalypsoWeisseElster" />
            <param name="pName" value="WeisseElster" />
        </antcall>
    </target>

    <target name="co-sachsen-models" depends="co-sachsen-model-schwarzeelster,co-sachsen-model-spree,co-sachsen-model-weisseelster,co-sachsen-model-elbe-polte,co-sachsen-model-elbe-zwg">
    </target>

    <!-- Callable CVS checkout target 
		pPackage: the module to checkout
		pName: name of the Directory that will be created
	-->
    <target name="co-model">

        <pathconvert targetos="windows" property="copath">
            <path path="${dist.webdav}/prognose/${pName}" />
        </pathconvert>

        <exec executable="cmd.exe" dir="${project.path}/deployable-server">
            <arg line="/C start cvs-co.bat ${user.name} ${copath} ${pPackage}" />
        </exec>

        <delete includeemptydirs="true" failonerror="false">

            <!-- remove all CVS files -->
            <fileset dir="${dist.webdav}/prognose/${pName}" defaultexcludes="false">
                <include name="**/CVS/*" />
                <include name="**/CVS/**" />
                <include name="**/.cvs*" />
            </fileset>

        </delete>
    </target>

    <target name="build-basic" depends="prepare">
        <echo message="Building basic projects" />

        <!-- use the central build-core script for the common projects -->
        <ant antfile="${workspace}/KalypsoBuild/central-build/build-core.xml"
             target="build-core"
             inheritAll="false" />

        <ant antfile="${workspace}/KalypsoDWD/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />
        
        <ant antfile="${workspace}/KalypsoDWD/etc/ant/build.xml"
             target="build-filecopyservlet-war"
             inheritAll="false" />
    	
        <ant antfile="${workspace}/KalypsoAdapterPSICompact/etc/ant/build.xml"
             target="deploy"
             inheritall="false" />
    </target>

    <target name="build-UserService">
        <ant antfile="${workspace}/KalypsoServiceUser/etc/ant/project-build.xml"
             target="deploy"
             inheritAll="false" />
    </target>

    <target name="buildwar-UserService" depends="build-basic">
        <copy todir="${workspace}/KalypsoServiceUser/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoAdapterPSICompact/build/deploy" includes="**/*.jar" />
        </copy>
        <ant antfile="${workspace}/KalypsoServiceUser/etc/ant/build.xml"
             target="build-war"
             inheritAll="false" />
      
      <copy tofile="${dist}/Kalypso_UserService.war"
            file="${workspace}/KalypsoServiceUser/build/deploy/jaxrpc-kalypsoservice_user.zip"
            overwrite="true" />
    </target>

    <target name="buildwar-ObsService" depends="build-basic">
        <copy todir="${workspace}/KalypsoServiceObs/build/build-war/WEB-INF/lib" overwrite="true">
            <fileset dir="${workspace}/KalypsoAdapterPSICompact/build/deploy" includes="**/*.jar" />
        </copy>
        <ant antfile="${workspace}/KalypsoServiceObs/etc/ant/build.xml"
             target="build-war"
             inheritAll="false" />
      
      <copy tofile="${dist}/Kalypso_ObservationService.war"
            file="${workspace}/KalypsoServiceObs/build/deploy/jaxrpc-kalypsoservice_observation.zip"
            overwrite="true" />
    </target>

    <target name="buildwar-CalcService" depends="build-basic">
        <!-- Build calc-service client in order to resolve dependencies to model plugins -->
        <ant antfile="${workspace}/KalypsoServiceCalc/etc/ant/build.xml"
             target="build-client"
             inheritAll="false" />

        <!-- Build the plugins -->
        <ant antfile="${workspace}/KalypsoOptimize/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelSpree/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelNA/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelElbePolte/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />
        <ant antfile="${workspace}/KalypsoModelWavos/etc/ant/build.xml"
             target="deploy"
             inheritAll="false" />

        <!-- Copy plugins in CalcService -->
        <copy todir="${workspace}/KalypsoServiceCalc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoModelElbePolte/build/deploy" includes="**/*.jar" />
        </copy>
        <copy todir="${workspace}/KalypsoServiceCalc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoModelWavos/build/deploy" includes="**/*.jar" />
        </copy>
        <copy todir="${workspace}/KalypsoServiceCalc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoModelSpree/build/deploy" includes="**/*.jar" />
        </copy>
        <copy todir="${workspace}/KalypsoServiceCalc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoModelNA/build/deploy" includes="**/*.jar" />
        </copy>
        <copy todir="${workspace}/KalypsoServiceCalc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoOptimize/build/deploy" includes="**/*.jar" />
        </copy>

        <!-- Finally build CalcService War -->
        <ant antfile="${workspace}/KalypsoServiceCalc/etc/ant/build.xml"
             target="build-war"
             inheritAll="false" />
      
      <copy tofile="${dist}/Kalypso_CalculationService.war"
	        file="${workspace}/KalypsoServiceCalc/build/deploy/jaxrpc-kalypsoservice_calculation.zip"
    	    overwrite="true" />
    </target>

    <target name="buildwar-MetaDocService" depends="build-basic">
        <copy todir="${workspace}/KalypsoServiceMetaDoc/build/build-war/WEB-INF/lib">
            <fileset dir="${workspace}/KalypsoAdapterPSICompact/build/deploy" includes="**/*.jar" />
        </copy>
        <ant antfile="${workspace}/KalypsoServiceMetaDoc/etc/ant/build.xml"
             target="build-war"
             inheritAll="false" />
      
      <copy tofile="${dist}/Kalypso_MetaDocService.war"
            file="${workspace}/KalypsoServiceMetaDoc/build/deploy/jaxrpc-kalypsoservice_metadoc.zip"
            overwrite="true" />
    </target>

    <target name="buildwar-DWDFileCopyServlet" depends="build-basic">
        <ant antfile="${workspace}/KalypsoDWD/etc/ant/build.xml"
             target="build-filecopyservlet-war"
             inheritAll="true">
            <property name="web.xml" value="${project.path}/deployable-server/dwdfilecopy/web.xml" />
        </ant>
      
      <copy tofile="${dist}/KalypsoDWDFileCopyServlet.war"
            file="${workspace}/KalypsoDWD/build/deploy/KalypsoDWDFileCopyServlet.war"
      	  overwrite="true" />
    </target>
    
    <target name="build-services-dev"
            depends="build-basic,buildwar-CalcService,buildwar-MetaDocService,buildwar-ObsService,buildwar-UserService, buildwar-DWDFileCopyServlet">
        <echo message="Building all services" />
    </target>

    <target name="deploy-allconf" depends="copy-allconf">
        <echo message="Deploying all conf stuff to ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\srvconf" overwrite="true">
            <fileset dir="${dist.webdav}/srvconf" includes="**/*" excludes="**/CVS/**" />
        </copy>
        <copy todir="${deploy.webdav}\\vorhersageconf" overwrite="true">
            <fileset dir="${dist.webdav}/vorhersageconf" includes="**/*" excludes="**/CVS/**" />
        </copy>
        <copy todir="${deploy.webdav}" overwrite="true">
            <fileset file="${dist.webdav}/*.ini" includes="**/*" />
        </copy>
    </target>

    <target name="deploy-data"
            depends="copy-data"
            description="Deploy the data (Observation repositories)">
        <echo message="Deploy the data files to ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\data" overwrite="true">
            <fileset dir="${dist.webdav}/data" includes="**/*" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="deploy-model-elbe-polte"
            depends="co-sachsen-model-elbe-polte"
            description="Deploy the elbe-polte-model">
        <echo message="Deploy the elbe-polte-model on ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\prognose" overwrite="true">
            <fileset dir="${dist.webdav}/prognose" includes="**/*" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="deploy-model-elbe-zwg"
            depends="co-sachsen-model-elbe-zwg"
            description="Deploy the elbe-zwge-model">
        <echo message="Deploy the elbe-zwge-model on ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\prognose" overwrite="true">
            <fileset dir="${dist.webdav}/prognose" includes="**/*" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="deploy-model-spree"
            depends="co-sachsen-model-spree"
            description="Deploy the spree-model">
        <echo message="Deploy the spree-model on ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\prognose" overwrite="true">
            <fileset dir="${dist.webdav}/prognose" includes="**/*" excludes="**/CVS/**" />
        </copy>
    </target>

    <target name="deploy-model-weisseelster" depends="co-sachsen-model-weisseelster" description="Deploy the weisse-elster model">
        <echo message="Deploy the models on ${tomcat.server}" />

        <copy todir="${deploy.webdav}\\prognose" overwrite="true">
            <fileset dir="${dist.webdav}/prognose" includes="**/*" excludes="**/CVS/**" />
        </copy>
    </target>


    <target name="deploy-models" depends="clean,deploy-model-spree,deploy-model-weisseelster,deploy-model-elbe-zwg,deploy-model-elbe-polte" description="Deploy the models">
        <echo message="Deploy the models on ${tomcat.server}" />
    </target>

    <target name="deploy-services"
            depends="deploy-allconf,build-services-dev"
            description="Deploy (first time) all services and configuration">
        <echo message="Deploying all services to ${tomcat.server}" />

        <!-- Calculation Service -->
        <ant antfile="${workspace}/KalypsoServiceCalc/etc/ant/build.xml"
             target="deploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
        
        <!-- MetaDoc Service -->
        <ant antfile="${workspace}/KalypsoServiceMetaDoc/etc/ant/build.xml"
             target="deploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
        
        <!-- Observation Service -->
        <ant antfile="${workspace}/KalypsoServiceObs/etc/ant/build.xml"
             target="deploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
        
        <!-- User Service -->
        <ant antfile="${workspace}/KalypsoServiceUser/etc/ant/build.xml"
             target="deploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
        
        <!-- DWDFileCopy Daemon -->
        <copy todir="${deploy.webapps}" overwrite="true" file="${workspace}/KalypsoDWD/build/deploy/KalypsoDWDFileCopyServlet.war" />
    </target>

    <target name="redeploy-UserService"
            depends="buildwar-UserService,deploy-allconf"
            description="Redeploy service and configuration with PSI-Fake Implementation">
        <echo message="Redeploying User Service" />
        <ant antfile="${workspace}/KalypsoServiceUser/etc/ant/build.xml"
             target="redeploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
    </target>

	<!-- TODO: das geht so nicht! psicompact-fake muss garantiert vor buildwar-ObsService aufgerufen werden
		dies ist aber so nicht garantiert...
	--> 
    <target name="redeploy-ObsService"
            depends="clean,buildwar-ObsService,deploy-allconf"
            description="Redeploy service and configuration with PSI-Fake Implementation">
        <echo message="Redeploying Observation Service" />
        <ant antfile="${workspace}/KalypsoServiceObs/etc/ant/build.xml"
             target="redeploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
    </target>

    <target name="redeploy-MetaDocService"
            depends="buildwar-MetaDocService,deploy-allconf"
            description="Redeploy service and configuration with PSI-Fake Implementation">
        <echo message="Redeploying MetaDoc Service" />
        <ant antfile="${workspace}/KalypsoServiceMetaDoc/etc/ant/build.xml"
             target="redeploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
    </target>

    <target name="redeploy-CalcService"
            depends="buildwar-CalcService,deploy-allconf"
            description="Redeploy service and configuration with PSI-Fake Implementation">
        <echo message="Redeploying Calculation Service" />
        <ant antfile="${workspace}/KalypsoServiceCalc/etc/ant/build.xml"
             target="redeploy"
             inheritAll="false">
            <property file="deploy.properties" />
        </ant>
    </target>

    <target name="redeploy-services"
            depends="redeploy-UserService,redeploy-ObsService,redeploy-CalcService,redeploy-MetaDocService"
            description="Redeploy services and their configuration">
        <echo message="Redeploying all services" />
        
        <!-- DWDFileCopy Daemon -->
        <copy todir="${deploy.webapps}" overwrite="true" file="${workspace}/KalypsoDWD/build/deploy/KalypsoDWDFileCopyServlet.war" />
    </target>

    <target name="build-services-lfug"
            depends="build-basic,buildwar-CalcService,buildwar-MetaDocService,buildwar-ObsService,buildwar-UserService, buildwar-DWDFileCopyServlet">
        <echo message="Build for LFUG (using real PSICompact)" />
    </target>

  	<target name="copy-webdav" depends="clean,copy-allconf,copy-data,co-sachsen-models" description="Copies everything which goes into the webdav directory">
  	</target>
  
    <target name="deploy-lfug"
            depends="build-services-lfug,copy-webdav"
            description="Deploy as File in the ${dist} dir for LFUG">
        <echo message="Copying the wars and all other stuff to ${dist} - Ready for sending to LFUG" />
    </target>
  
</project>
