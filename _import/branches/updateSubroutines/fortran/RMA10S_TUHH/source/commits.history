features für Kalypso bis dahin implementiert

Polynomansatz
-------------
- Implementierung eines alternativen eindimensionalen Ansatzes für natürliche Fließgewässer mittels Abbildung durch Polynomfunktionen
  - Implementierung basiert auf den Komponenten WasserTIEFE und Fließgeschwindigkeit
  - Implementierung berücksichtigt Polynome bis zum Grad 4 (5 Koeffizienten). Es können beliebig viele Polynome verwendet werden. Dazu müssen allerdings die Gültigkeitsbereiche eindeutig definiert sein
  - Implementierung einer automatischen Interpolation von Profilen zwischen Originalprofilen. Polynome werden gewichtet nach Entfernung zu den Nachbarn interpoliert.

1D-2D-Kopplung
--------------
- Implementierug einer generellen Modellkopplung zwischen 1D- und 2D-Bereichen. Die Kopplung ist bislang nur für die Kombination mit dem Polynomansatz vorgesehen.
  - Funktionsweise: - Reduktion der Freiheitsgrade auf einen 2D-WasserSTAND
                    - Impulsgleichung 1D wird ersetzt mit Identitätsbedingung, dass 2D-Linienabfluss gleich dem 1D-Kopplungsknotenabfluss sein muss.
                    - Kontinuitätsgleichung 1D bleibt bestehen, wird aber nur von einer Seite gespeist.
                    - Impulsgleichungen 2D werden durch eine Bedingung für den nötigen spezifischen Abfluss ersetzt. Auf der Basis des 1D-Abflusses und WasserSTANDES wird eine q-Verteilung bestimmt, die jeweils an den Knoten eingehalten werden muss.
                    - Kontinuitätsgleichungen 2D werden auf eine einzige Kontinuitätsgleichung reduziert.

Bauwerksimplementierung
-----------------------
- Implementierung der Interpolation aus Kurvenscharen anstelle einer tabellarischen Interpolation; außerdem Verwendung von Energiehöhen, um bei Abflussnull weiter rechnen zu können.
  - Verwendung von Kurvenscharen, d.h. Stützstellenauswertung mittels linearer Funktionen
  - Funktionen Oberwasserstand als Funktion des Unterwasserstandes bei gegebenem Q. Je Abfluss Q ein funktionaler Zusammenhang.
  - Verwendung von Energiehöhen zur Darstellung

Randbedingungen
---------------
- Zusätzlich zur originalen RMA 10S Methode werden Q-Ränder nun per Verteilungsberechnung bestimmt. Der Vorteil ist, dass schon am Rand eine sinnvolle v-Verteilung vorhanden ist, so dass das Modell in der Länge aussagekräftiger wird.
- Einbau von HQ-Randbedingungen als Tabellenfunktion

autoconverge
------------
- Einbau des gesonderten Programms autoconverge aber ohne Tests.

Rauheitskorrektur
-----------------
- Benutzer kann Rauheitswerte korrigieren. Dabei können die festen Rauheitsparameter der Rauheitsklassen bestehen bleiben und nur die Elemente mit einem Faktor auf die entsprechenden Parameter verändert werden.

History geführt ab dem 27.02.2008
---------------------------------
- Kopplung hat starke Probleme bei der Kontinuität verursacht. Grundsätzlich haben Modelle konvergiert, aber der Abfluss ist immer kleiner geworden mit fortschreitender Berechnung. Die numerische Ursache war, dass die Abflussidentität auf der 2D- und 1D-Seite sich jeweils hoch oder runter geschaukelt haben. Alternativ wurden nun die Impulsgleichungen auf der 2d-Seite beibehalten und der WasserSTAND der 1D-Seite als Rand verwendet.
  - Impulsgleichungen 2D werden durch den WasserSTAND auf der 1D-Seite berandet (innere Randbedingung).
  - dies ist bisher nur 2D-1D ERFOLGREICH getestet.
  
Änderungen 12.03.2008
---------------------
bugfix - H-Q-Beziehung als Randbedingung in coef1DFE hat nicht die korrekten Wasserstände berücksichtigt.
(coef1DFE)
bugfix - ErrorMessagesAndStop had wrong entry
(ErrorMessagesAndStop)

Nico Schrage


Änderungen 27.05.2008
---------------------
Mit dem 27.05.2008 wurde ein Versionstag eingeführt. Die erste Version heißt v_0_0_1. Sie ist Grundlage des Vergleiches von RMA10S 3.5g mit RMA10SK. Ab diesem Punkt muss geprüft werden, inwiefern Änderungen gegenüber RMA10S 3.5g eingetreten sind. Von der Version aus wird exakt dokumentiert, was sich im Detail geändert hat.
Außerdem wurde mit dem Datum ein Branch eingeführt, der dazu gedacht ist, die Subroutinen zu aktualisieren, d.h. auf f90 zu bringen und veraltete Strukturen (z.B. Jumpmarks) zu eliminieren.

Version 0.0.1 (tag gesetzt)
---------------------------
001.) initialer Startpunkt für Versionierung

--- Nico Schrage, 27.05.2008

Version 0.0.2 (laufende Änderungen)
-----------------------------------
001.) Neuschreiben der Routinen DEL, REWET nach neuer Struktur; Löschen aller Sprungmarken
      und Strukturieren der Schleifen
002.) rma10.for wurde nicht korrekt aus HEAD übernommen in Version 0.0.1. sie muss mit
      Datei-Version 1.32 von HEAD überschrieben werden für Version 0.0.1

--- Nico Schrage, 27.05.2008 (0.0.2beta1)

003.) Anpassung des rewettings an Marsh-Algorithmus. Dazu wird zunächst die "reale
      Fließtiefe" über der slot Tiefe des Marshbereiches bestimmt. Daraufhin wird der
      Wasserstand über die slot-Tiefe der benachbarten Modellknoten berechnet und die
      Wassertiefe in die Rechentiefe (virtuelle Fließtiefe) umgerechnet. Diese Option
      läuft parallel zur alten Implementierung, in der der Marsh-Algorithmus nicht
      berücksichtigt wird.
004.) Berücksichtigung von head losses beim rewetting ausgeschaltet; HLOS wird weiterhin
      berechnet, jedoch beim Extrapolieren der Werte nach außen nicht berücksichtigt. Kann
      ohne Probleme wieder eingeschaltet werden.
005.) Format updates in coef11nt.for: Loops 290, 360 and 365 were changed to become 'normal' do-loops
006.) Minor change in RMA10.for without relevance (splitting a line into to lines)
007.) Write out kilometer if present to the list of changes in the console output: Purpose is to
      find the problematic position of 1D-nodes, that were interpolated. From those nodes,
      the user doesn't know, where it is accept with the knowledge of the kilometer.
008.) bug in LOAD3.FOR: Initializing NodeIsDry was done with the wrong running variable
009.) bug in input.for: testoutput was initialized, if C7 line was not available
010.) catch ERROR in input.for, if user defines more than 90 iterations in steady or unsteady definition.
      Introduce new Error messages 1008 or 1009 in ErrorMessagesAndStop.for.
011.) Interpolate restart values for 1D midside nodes from the corner nodes, if restart was activated,
      but no restart value is available. It's done in getinit.for.
012.) Move the interpolation from restart values of interpolated nodes to a place after the RESTARTTEST
      loop within getinit. This provides the possiblity to introduce the structures of Kalypso applications
      into the other restart files/ model files, too.
013.) coef1DPolynomials.f90 has more changes (because of equation mistakes):
      - momentum equation should use -sidft instead of + sidft (momentum equation and derivatives)
      - correction in Term A2 in the derivative of the momentum equation over depth, where dv/dt has to be replaced by dh/dt
      - delete old code in Term A1 of the derivative of the momentum equation over depth
      - correction of the time derivative of the derivative of the continuity equation over depth
      - exchange wrong names of terms in the derivative of the continuity equation over depth
014.) Introduce ERROR output into file, if at stage flow boundary conditions, the water stage is out of the specified range.
      The ErrorMessageAndStop subroutine is called from stfltab.for. In ErrorMessageAndStop the errors 4002 and 4003 are introduced

--- Nico Schrage, 05.06.2008 (0.0.2beta2

015.) Correct derivative according to h of dh/dt was not considered. Hence the d^2a/dhdt was wrong. Now derivative is considered.
016.) Correct implementation of flow coefficient on the GAUSS nodes. The flow coefficient was calculated by using the nodal values of the
      element's corner nodes. Correct is to calculate the flow coefficients by the water depth present at the particular GAUSS node for both
      element's corner nodes. According to the linear weighting approximation. The two values should be interpolated between to obtain the
      particular GAUSS node's value.
      
--- Nico Schrage, 10.06.2008 (0.0.2beta5)

017.) Cleaning code of coef1DPoly.subroutine by deleting calculations of values for corner nodes of 1D elements. These values are not necessary.
      Deleted: d2ahdh, Intah, qh, dqhdh, d2qhdh, bei, dbeidh, d2beidh
018.) Improve declaration section in FindPolynom.subroutine.

--- Nico Schrage, 12.06.2008 (0.0.2beta6)

019.) Correct water stage calculation for marsh nodes in 2D-subroutines at water stage - discharge boundary conditions. Calculation should consider
      the 'real' water stage, i.e. coef25, coef25nt, coef2d, coef2dnt
020.) Add missing declaration in control structure subroutine (cstrc) of ws1 and ws2
021.) Remove output of object number for errors, with no object relation
022.) comments (getinit)
023.) Introduce local copy of upstream and downstream water stages at weirs. These values can be edited. This is necessary if flow direction is turning
      around (wtform)
024.) Move value assigning out of if-statement, when searching for the correct position in the data table of weirs. Comments. (incstrc)
025.) Change the calculation of the average water stage at a certain continuity line. This is done for the calculation of the inner boundary condition
      at 1D-2D-couplings to get the water stage at the 1D-node. Dry nodes of the 2D-line were considered. This is changed. Attention, because this 
      might have an effect on 2D-boundaries with the option QKALYPS
026.) comment concerning consideration of possibly rewetted nodes at 1D-2D-transitions; this has to be done

--- Nico Schrage, 01.07.2008 (0.0.2beta7)
