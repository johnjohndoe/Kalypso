<?xml version="1.0" encoding="UTF-8"?>
<section id="sec-modellintegration-allgemein">
  <title>Grundlagen</title>

  <para>Das Programmsystem KALYPSO ist in der Lage, eine Vielzahl
  verschiedenartiger Modelle unter einer einheitlichen Benutzeroberfläche zu
  integrieren. Die Integration eines neuen Modelltyps (eines neuen
  Rechenkerns) erfolgt dabei auf zwei Ebenen.</para>

  <figure vendor="sachsen-anhalt">
    <title>Übersicht Modellintegration</title>

    <mediaobject vendor="">
      <imageobject>
        <imagedata fileref="img/modellintegration/sachsen-anhalt/modellintegration_uebersicht.png"
                   scale="40" />
      </imageobject>
    </mediaobject>
  </figure>

  <para>Serverseitig wird das Modell (bzw. der Rechenkern) über eine
  feststehende Java-Schnittstelle implementiert.Hier erfolgt die für den
  jeweiligen Rechenkern spezifische Programmierung wie <abbrev>z. B.</abbrev>: Anstoßen des
  nativen Programms (.exe), Lesen und Schreiben der speziellen Formate.</para>

  <para>Clientseitig werden alle Modelle gleichermaßen behandelt, sie
  unterscheiden sich lediglich in ihrer Datenspezifikation. Aus diesem Grund
  ist es nötig, die Modelldaten formal mit Hilfe von GML-Schemata zu
  spezifizieren.</para>

  <para>Grundvoraussetzung für die Integration eines Modells ist, dass sich
  das Modell prinzipiell von außen ansteuern lässt. Im Einzelnen bedeutet
  dies:</para>

  <itemizedlist>
    <listitem>
      <para>Oberflächenloser Rechenkern</para>
    </listitem>

    <listitem>
      <para>Offene Formate aller Ein- und Ausgabedateien.</para>
    </listitem>
  </itemizedlist>

  <para>Über diese beiden Grundbausteine (Modell-Plugin und
  Datenspezifikation) hinaus gibt es noch eine Reihe von
  Konfigurationsdateien, welche bestimmte Programmabläufe wie zum Beispiel das
  <guilabel>Anlegen einer Rechenvariante</guilabel> und den
  Vorhersage-Assistenten steuern.</para>

  <para>Zur Integration des Modell sind zusammengefasst die folgenden Schritte
  durchzuführen:</para>

  <variablelist>
    <varlistentry>
      <term>Serverseitig</term>

      <listitem>
        <itemizedlist>
          <listitem>
            <para>Modellanalyse in Bezug auf Ein- und Ausgabe</para>
          </listitem>

          <listitem>
            <para>Modellabstraktion in Form eines
            GML-Applikationsschemas</para>
          </listitem>

          <listitem>
            <para>Erstellen der Konvertierungsroutinen für Modellformate (<abbrev>z. B.</abbrev>
            Zeitreihen)</para>
          </listitem>

          <listitem>
            <para>Implementation des CalcJob-Interface
            (<interfacename>org.kalypso.services.calculation.job.ICalcJob</interfacename>)</para>
          </listitem>

          <listitem>
            <para>Installation und Konfiguration des Rechendienstes</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>
  </variablelist>

  <variablelist>
    <varlistentry>
      <term>Clientseitig</term>

      <listitem>
        <itemizedlist>
          <listitem>
            <para>Anlegen eines Modellprojekts</para>
          </listitem>

          <listitem>
            <para>Aufbau des (Grund-)Modells gemäß zuvor definiertem
            GML-Applikationsschema, dabei evtl. Übernahme vorhandener
            Modelldaten (<abbrev>z. B.</abbrev>: Parameterdateien)</para>
          </listitem>

          <listitem>
            <para>Erstellen von Ansichtsvorlagen für die Grunddaten (Karten,
            Tabellen, etc.)</para>
          </listitem>

          <listitem>
            <para>Anlegen der Modellkonfiguration (.model Verzeichnis;
            modelspec.xml)</para>
          </listitem>

          <listitem>
            <para>Erstellen von Ansichtsvorlagen für die
            Rechenvarianten</para>
          </listitem>

          <listitem>
            <para>Optional: Konfiguration des Vorhersageassistenten</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>Im Weiteren wird die Durchführung dieser Modellintegration in der von
  uns empfohlenen Reihenfolge im Detail beschrieben.</para>

  <section>
    <title>Modellspezifikation und Grunddaten</title>

    <section>
      <title>Spezifikation</title>

      <para>Die Spezifikation der Modell-(Grund-)Daten erfolgt in Form von
      XML-Schemata (*.xsd). Die Spezifikation muss konform zum GML2-Standard
      des OGC erfolgen (siehe auch <xref linkend="abschn_5_2" />).</para>

      <para>Da die XML Schemata später über den Rechendienst zur Verfügung
      gestellt werden (siehe auch das Interface
      <interfacename>org.kalypso.contribs.java.net.IUrlCatalog</interfacename>),
      ist es sinnvoll, die Schemadefinitionsdateien direkt in den
      Programmquellen des Modell-Plugins abzulegen. Dabei ist frei wählbar, ob
      die Modellspezifikation in einer einzelnen Datei abgelegt ist oder auf
      mehrere Dateien verteilt wird. Verweise (Importe) der Schemata
      untereinander sollten immer mit relativen Pfaden erfolgen.</para>
    </section>

    <section>
      <title>Modelldaten</title>

      <para>Nach der Spezifikation der Modell-Daten können bereits die
      Modelldaten in Form einer GML-Datei erstellt werden. Diese muss
      natürlich gegen die XSD-Schemata validieren. Die Modelldaten können
      dabei so angelegt werden, dass alle Daten in einer einzelnen GML-Datei
      abgelegt oder alternativ über mehrere Dateien verteilt werden. Je nach
      Größe des Modells kann es sinnvoll sein, die Modelldaten aus bestehenden
      Modelldaten automatisch generieren zu lassen. Hierzu wird natürlich eine
      spezielle Programmierung benötigt, welche am besten ebenfalls im
      Modell-Plugin abgelegt wird.</para>
    </section>

    <section>
      <title>Vorlagen</title>

      <para>Liegen die Modelldaten zumindest teilweise vor, können jetzt schon
      Karten- und Tabellenvorlagen, die auf die Modellgrunddaten zugreifen,
      erstellt werden. Es empfiehlt sich, die Vorlagen möglichst frühzeitig
      anzulegen, um eventuelle Fehler in den Daten bzw. der Datenmodellierung
      rechtzeitig zu erkennen. Darüber hinaus können die Vorlagen natürlich
      auch zur Eingabe der Modellgrunddaten verwendet werden. Neben den
      (GIS-basierten) Modelldaten können weitere im Projekt abgelegte
      GIS-Daten visualisiert werden (<abbrev>z. B.</abbrev> ESRI Shapes). Die Ablage der
      Modelldaten ist zwar im Wesentlichen frei wählbar, sollte aber dennoch
      nach einem festen Schema erfolgen (siehe <xref
      linkend="abschn_5_1" />).</para>
    </section>
  </section>

  <section>
    <title>Spezifikation der Rechenvarianten</title>

    <para>Nach dem Erstellen der Grunddaten besteht der nächste Schritt darin,
    die Rechenvarianten zu spezifizieren. Eine Rechenvariante besteht stets
    aus einem Unterverzeichnis des Projektes, welches durch Vorhandensein der
    Datei <filename>.calculation</filename> als solches gekennzeichnet ist.
    Die Datei <filename>.calculation</filename> enthält dabei die für die
    Berechnung benötigten Steuerdaten, insbesondere den Zeitraum der
    Modellrechnung, welcher für den Import von Zeitreihen aus dem
    Zeitreihen-Dienst benötigt wird.</para>

    <section>
      <title>Modellprojekt</title>

      <para>Bevor mit der Spezifikation begonnen werden kann, muss im
      KALYPSO-Arbeitsbereich (<guilabel>Navigator</guilabel>) ein neues,
      leeres Projekt über <menuchoice>
          <guimenu>Datei</guimenu>

          <guimenuitem>Neu</guimenuitem>
        </menuchoice> angelegt werden. Das neue Projekt enthält lediglich die
      Datei <filename>.project</filename>, welche jetzt um die Zeile
      <programlisting>&lt;nature&gt;org.kalypso.ui.ModelNature&lt;/nature&gt;</programlisting>im
      Unterpunkt &lt;natures&gt; ergänzt werden muss, um es als
      KALYPSO-Modell-Projekt zu kennzeichnen. Neue Dateien und Verzeichnisse
      können im Projekt ebenfalls über den Menüpunkt <menuchoice>
          <guimenu>Datei</guimenu>

          <guimenuitem>Neu</guimenuitem>
        </menuchoice> erstellt werden.</para>
    </section>

    <section>
      <title>Die Datei <filename>.calculation</filename></title>

      <para>Die Datei <filename>.calculation</filename> ist eine Datei im
      GML-Format, welche beim Erzeugen einer Rechenvariante automatisch
      angezeigt wird. Zu diesem Zweck muss als Vorlage eine Datei
      <filename>.calculation.template</filename> im Verzeichnis
      <filename>/.model/</filename> des Projektes angelegt sein. Die Vorlage
      wird beim Erstellen einer Rechenvariante automatisch in das neue
      Verzeichnis übernommen und mittels der Standard-Feature-Ansicht
      visualisiert. Dabei können durch Vergabe von Platzhaltern bestimmte
      Felder automatisch vorbelegt werden. Folgende Platzhalter sind
      definiert: <itemizedlist>
          <listitem>
            <para>:startsim: Vorgeschlagener Startpunkt der Simulation</para>
          </listitem>

          <listitem>
            <para>:startforecast: Vorgeschlagener Startpunkt der Vorhersage
            (Ist-Zeitpunkt)</para>
          </listitem>

          <listitem>
            <para>:endsim: Vorgeschlagener Endpunkt der Simulation</para>
          </listitem>

          <listitem>
            <para>:user: Anmeldename des Benutzers</para>
          </listitem>

          <listitem>
            <para>:scenarioId: ID des beim Start gewählten
            Anwendungsszenario</para>
          </listitem>

          <listitem>
            <para>:scenarioName: Name des Anwendungsszenario</para>
          </listitem>

          <listitem>
            <para>:scenarioDescription: Beschreibung des
            Anwendungsszenario</para>
          </listitem>
        </itemizedlist>Soll die Anzeige der <filename>Datei
      .calculation</filename> (=zweite Seite des Wizards zur Erzeugung einer
      Rechenvariante - Menü <menuchoice>
          <guimenu>Rechenvariante</guimenu>

          <guimenuitem>Neu</guimenuitem>
        </menuchoice>) eine spezielle Formatierung erhalten, kann auch eine
      Vorlagendatei im GFT-Format unter dem Namen
      <filename>.calculation.view</filename> im Verzeichnis
      <filename>/.model/</filename> abgelegt werden. Diese wird dann zur
      Visualisierung herangezogen.</para>
    </section>

    <section>
      <title>ANT-Skripte und Launches</title>

      <para>Das modellspezifische Verhalten <abbrev>z. B.</abbrev> beim Erstellen von
      Rechenvarianten wird anhand von Eclipse-Launches definiert, welche im
      Projektverzeichnis unter <filename>.model/launch</filename> abgelegt
      werden. Ein <quote>Launch</quote> ist dabei ein allgemeiner
      Eclipse-Mechanismus, welcher das definierte Starten eines (nicht
      zwangsläufig) externen Prozesses ermöglicht (siehe auch die
      Eclipse-Dokumentation.</para>

      <para>Bisher werden bei KALYPSO ausschließlich die durch Eclipse bereits
      vordefinierten ANT-Launches benutzt, welche das Starten von ANT-Skripten
      beschreiben. Daneben existieren aber auch vordefinierte Typen zum
      Starten externer Programme und Java-Anwendungen.</para>

      <para>Die Zuordnung, bei welcher Aktion welcher Launch gestartet wird,
      erfolgt über die Benennung. Folgende Launches werden zur Zeit von
      KALYPSO benutzt:</para>

      <variablelist>
        <varlistentry>
          <term>createCalcCase.launch</term>

          <listitem>
            <para>Wird zur Erzeugung einer neuen Rechenvariante aufgerufen.
            Das Verzeichnis der Rechenvariante ist zum Zeitpunkt des Aufrufs
            bereits erstellt und die Datei <filename>.calculation</filename>
            wurde bereits angelegt.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>updateCalcCase.launch</term>

          <listitem>
            <para>Wird aufgerufen, um die Rechenvariante zu aktualisieren.
            Entspricht dem Menüpunkt <menuchoice>
                <guimenu>Rechenvariante</guimenu>

                <guimenuitem>Zeitreihen Aktualisieren</guimenuitem>
              </menuchoice>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>runCalculation.launch</term>

          <listitem>
            <para>Wird zur Berechnung einer Rechenvariante aufgerufen.
            Entspricht dem Menüpunkt <menuchoice>
                <guimenu>Rechenvariante</guimenu>

                <guimenuitem>Berechnung durchführen</guimenuitem>
              </menuchoice>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>exportVorhersagen.launch</term>

          <listitem>
            <para>Wird aus dem Vorhersage-Assistenten zur Ablage der
            Prognosezeitreihen aufgerufen.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>Darüber hinaus können aus dem Vorhersage-Assistenten noch
      beliebige selbstbenannte Launches aufgerufen werden, dies ist abhängig
      von der konkreten Konfiguration des Modells. Ein typischer Fall ist zum
      Beispiel der Aufruf der Neuberechnung eines Gebietsniederschlagsmodell
      aus dem Assistenten.</para>

      <para>Damit die Skripte <quote>wissen</quote>, um welche Rechenvariante
      es sich beim Aufruf handelt, werden im Falle von ANT-Launches eine Reihe
      von vordefinierten Variablen gesetzt, die innerhalb des Skriptes
      verwendet werden können. Folgende vordefinierte Variablen werden zur
      Zeit benutzt:</para>

      <variablelist>
        <varlistentry>
          <term>project.dir</term>

          <listitem>
            <para>Absoluter Dateipfad auf das Verzeichnis des Projekts.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>project.url</term>

          <listitem>
            <para>Wie <filename>project.dir</filename>, nur in Form einer URL
            mit Protokoll <filename>file</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>calc.dir</term>

          <listitem>
            <para>Absoluter Dateipfad auf das Verzeichnis der
            Rechenvariante.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>calc.url</term>

          <listitem>
            <para>Wie <filename>calc.dir</filename>, nur in Form einer URL mit
            Protokoll <filename>file</filename>.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Modell-Plugin</title>

    <para>Nachdem die Modellstruktur und die grundsätzlichen Aktionen zur
    Erzeugung und Behandlung von Rechenvarianten definiert sind, beginnt jetzt
    die Kapselung des Rechenkerns in Form eines Modell-Plugins.</para>

    <para>Bevor jedoch mit der Modellintegration begonnen werden kann, muss
    ein neues Eclipse-Plugin für die serverseitige Codierung angelegt werden.
    Das Plugin wird die Codierung für dass Anstossen des Rechenkerns und die
    Modellspezifikation in Form von GML-Applikationsschemata enthalten.</para>

    <para>Das serverseitige Modell-Plugin wird realisiert, indem das
    Java-Interface
    <filename><interfacename>org.kalypso.services.calculation.job.ICalcJob</interfacename></filename>
    implementiert wird (siehe auch JavaDoc des Interface). Im Falle einer
    Berechnung wird die Methode <guilabel>run</guilabel> der jeweiligen
    Implementation eines Modelltyps aufgerufen. Darüber hinaus liefert die
    <interfacename>ICalcJob</interfacename>-Implementation noch die
    Spezifikation der erwarteten Ein- und Ausgangsdaten in Form einer
    XML-Datei über die Methode <guilabel>getSpezifikation</guilabel>. Die
    XML-Datei muss gegen das Schema
    <filename>/etc/schemas/model/modelspec.xsd</filename> im Projekt
    <filename>KalypsoCore</filename> validieren.</para>

    <para>Entsprechend der Spezifikation wird der
    <guilabel>run</guilabel>-Methode unter anderem eine Liste der vom Client
    gelieferten Eingangsdateien übergeben. Innerhalb des Aufrufs müssen je
    nach Modell die Eingangsdaten in die vom Rechenkern benötigten Formate
    konvertiert und die externe Anwendung angestossen werden. Zu diesem Zweck
    steht ein temporäres Verzeichnis zur Verfügung.</para>

    <para>Ist das Berechnungs-Interface implementiert, muss dieses noch in der
    Konfigurationsdatei des Berechnungs-Dienstes,
    <filename>webdav/srvconf/ICalculationService/modelltypen.properties</filename>,
    angemeldet werden und steht dann für Berechnungen des gewünschten
    Modelltyps zur Verfügung.</para>

    <para>Die modellspezifischen GML-Applikationsschemata werden ebenfalls
    über den Rechendienst an den KALYPSO-Client übergeben. Dazu müssen diese
    in Form einer <interfacename>IUrlCatalog</interfacename>-Implementierung
    in der Konfigurationsdatei
    <filename>webdav/srvconf/ICalculationService/classCatalog.properties</filename>
    angemeldet werden.</para>
  </section>

  <section id="sec_konfigAssi">
    <title>Konfiguration des Vorhersage-Assistenten</title>

    <para>Die bislang geschilderte Methode beschreibt ausschließlich die
    Datenmodellierung und die Integration im Expertenmodus.</para>

    <para>Um die Funktionen des Vorhersage-Assistenten zur vereinfachten
    Benutzerführung nutzen zu können, muss im Projektverzeichnis
    <filename>/.model/</filename> die Datei
    <filename>calcWizard.xml</filename> angelegt werden. Die Datei besteht aus
    einer Liste der im Assistenten zu verwendenden Seiten sowie deren
    Parametrisierung.</para>

    <para>Eine Auflistung der bisher zur Verfügung stehenden Seiten-Typen
    ergibt sich aus der Objekthierarchie sowie deren JavaDoc. Werden
    spezielle, nicht vorhandene Seiten benötigt, können weitere durch
    Implementierung des Java-Interfaces
    <interfacename>org.kalypso.simulation.ui.wizards.calculation.IModelWizardPage</interfacename>
    zum Programm hinzugefügt werden.</para>

    <para>Die beiden ersten Seiten des Assistenten <guilabel>Vorhersage
    erzeugen</guilabel> und <guilabel>Steuerparameter</guilabel> sind dabei in
    jedem Vorhersage-Assistenten vorhanden und sind nicht
    konfigurierbar.</para>
  </section>

  <section>
    <title>Zusammenfassung/Checkliste</title>

    <para>Zusammengefasst müssen die folgenden Schritte durchgeführt
    werden:</para>

    <itemizedlist>
      <listitem>
        <para>Projekt anlegen und .project editieren</para>
      </listitem>

      <listitem>
        <para>Modellschemata und Modelldaten erzeugen</para>
      </listitem>

      <listitem>
        <para>Karten-/Tabellen-Vorlagen für Grunddaten erstellen</para>
      </listitem>

      <listitem>
        <para>Dateien .calculation.template und .calculation.view
        erzeugen</para>
      </listitem>

      <listitem>
        <para>Launches und evtl. ANT-Skripte definieren</para>
      </listitem>

      <listitem>
        <para>Karten-/Tabellen-/Zeitreihen-Vorlagen für Rechenvarianten
        erstellen</para>
      </listitem>

      <listitem>
        <para>Implementation des Modell-Plugin Interfaces
        <filename>ICalcJob</filename></para>
      </listitem>

      <listitem>
        <para>Konfiguration des Rechendienst-Servers</para>
      </listitem>

      <listitem>
        <para>Datei calcWizard.xml erzeugen</para>
      </listitem>

      <listitem>
        <para>Vorlagen für Vorhersage-Assistenten erstellen</para>
      </listitem>
    </itemizedlist>
  </section>
</section>