<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 sp2 U (http://www.altova.com) by Monika Thül (BCE GmbH) -->
<!-- edited with XMLSPY v2004 rel. 4 U (http://www.xmlspy.com) by Gernot Belger (Björnsen Beratende Ingenieure GmbH) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="xml.model.kalypso.org" targetNamespace="xml.model.kalypso.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="modeldata">
		<xs:annotation>
			<xs:documentation>Clientseitige Modellspezifikation, bestimmt, woher und wohin Ergebnis- und Eingangsdaten kommen.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="input" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Liste der Eingabedaten. Bestimmt woher die Eingangsdaten gelesen werden. Muss mindesten der Liste der vom Rechendienst geforderten ID entsprechen. Es können aber auch mehr sein.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>ID der Eingangsdaten. Jede serverseitig geforderte ID muss hier vorkommen.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="path" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>Clientseitiger Pfad deser Eingangsdaten. Kann eine Datei oder ein Verzeichnis sein, kann relativ zum Projekt oder relativ zur Rechenvariante sein.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="relativeToCalcCase" type="xs:boolean" use="required">
							<xs:annotation>
								<xs:documentation>Falls true, wird der Pfad relativ zur Rechenvariante aufgelöst, sonst relativ zum Projekt.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="optional" type="xs:boolean" use="optional" default="false"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="output" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>List der Ergebnisdaten. Bestimmt, wohin die Ergebnisse geschrieben werden. Muss der Liste der Ergebnisse des Rechendienstes entsprechen.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>ID dieses Ergebnis. Jede vom Server gelieferte ID muss hier eingetragen sein.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="path" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>Ablagepfad auf Clientseite. Immer relativ zur Rechenvariante.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="relativeToCalcCase" type="xs:boolean" use="required">
							<xs:annotation>
								<xs:documentation>Falls true, wird der Pfad relativ zur aktuellen Rechenvariante, sonst relativ zum aktuellen Projekt aufgelöst.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="clearAfterCalc" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Hier kann festgelegt werden, welche Daten gelöscht werden, bevor die Ergebnisse zurückgeholt werden.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="path" type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>Alle Daten die dieser Pfad beschreibt werden gelöscht.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="relativeToCalcCase" type="xs:boolean" use="required">
							<xs:annotation>
								<xs:documentation>Falls true, wird der Pfad relativ zur aktuellen Rechenvariante, sonst relativ zum aktuellen Projekt aufgelöst.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="typeID" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Die ID der CalcJob Implementation respektive des Rechenmodells.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="modelspec">
		<xs:annotation>
			<xs:documentation>Serverseitige Modellspezifikation, bestimmt, welche Ergebnis- und Eingangsdaten es gibt.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="input" type="ns1:DataType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Liste der Eingabedaten. Bestimmt woher die Eingangsdaten gelesen werden. Muss mindesten der Liste der vom Rechendienst geforderten ID entsprechen. Es können aber auch mehr sein.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="output" type="ns1:DataType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>List der Ergebnisdaten. Bestimmt, wohin die Ergebnisse geschrieben werden. Muss der Liste der Ergebnisse des Rechendienstes entsprechen.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="typeID" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Die ID der CalcJob Implementation respektive des Rechenmodells.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DataType">
		<xs:attribute name="id" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>ID der Daten.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string" use="optional" default="">
			<xs:annotation>
				<xs:documentation>Beschreibung der Daten. TODO: könnte auch eine Spezifikation sein, z.B: eine URL auf das Schema.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="optional" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>false or not set means input is required, true means input is not required</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
</xs:schema>
