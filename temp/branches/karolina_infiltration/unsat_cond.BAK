!     Last change:  KV   16 Sep 2008    4:19 pm

!
! This code is part of the library 'Kalypso-NA'.
! KALYPSO-NA is a deterministic, non-linear, detailed Rainfall-Runoff-Model (RRM).
! The model permits a complete simulation of the land bound
! part of the global water balance as a reaction on observed precipitation events.
! Copyright (C) 2004  HAMBURG UNIVERSITY OF TECHNOLOGY, Department of River and
! Coastal Engineering (in co-operation with Bjoernsen Cunsulting Engineers)
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public License
! as published by the Free Software Foundation, version 2.1.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
!
! For information please contact:
! HAMBURG UNIVERSITY OF TECHNOLOGY, Department of River and
! Coastal Engineering. Denickestr. 22, 21073 Hamburg, Germany.
! Dipl.-Ing. Jessica Hübsch:   phone: +49 40 42878 4181 mail: j.huebsch@tuhh.de
! See our web page: www.tuhh.de/wb
!
!
! HAMBURG UNIVERSITY OF TECHNOLOGY, Department of River and
! Coastal Engineering, hereby disclaims all copyright interest in
! the library 'Kalypso-NA'.
!
! Jessica Hübsch, 16 August 2004
! Research Associate
!
!***********************************************************************************************
   subroutine unsat_cond(kcita,alpha,kff,n,l,bof,bmax,wp,ilay,i,bofho,kh1,bof_kho,ndx1,it)

  !**************************************ÄNDERUNGEN***********************************************


!     Date      Programmer      	Description of change
!     ====      ==========      	=====================
!  20.04.2007   Karolina-Villagra       Estimation of unsaturated hydraulic conductivity. Van Genuchten model
!                                       Calculation of geometric form of conductivity

!***************************************EIN-/AUSGABE********************************************
!c    Eingabe:
!c              kff     saturated hydraulic conductivity (mm/d)
!               n       van Genuchten parameter (-)
!               alpha   van Genuchten parameter (1/cm)
!               l       pore size distribution parameter  (-)
!

!c    Ausgabe:
!c
!c              Kcita    unsaturated hydraulic conductivity     (mm/d)
!c
!******************************************VARIABLEN********************************************

USE generic_LOGGER
USE Units
IMPLICIT NONE
include	'include\param.cmn'
include      'include\is.cmn'

INTEGER:: i,ilay,ndx1,it
REAL   :: n,alpha,kff,l,bmax,wp,bof,m
REAL   :: Se
REAL   :: kho,kh1(maxndx,maxlay,2*idimnutz2),bofho,ko,bof_kho(maxndx,maxlay,2*idimnutz2),bof_ko,k1
REAL,INTENT(OUT):: kcita


!Calculation of kh as a function of soil moisture
m=1.-(1./n)

!Calculation of upper conductivity Kho

if (i .eq. 1) then
   if (ilay .eq. 1) then
       bof_ko=bofho
   else
       bof_ko=bof_kho(ndx1,ilay-1,it)
   END if
   if (bof_ko .lt. wp) then
      bof_ko=wp
   end if
   Se=(bof_ko)/(bmax)
   ko=(Se**l)*(1.-(1.-Se**(1./m))**m)**2.
   if (bof_ko .lt. wp) then
      ko=0.
   end if
   !if (bof_ko .lt. wp) then
   !   call writeLogIntRealReal( 7,'Fehler in der Berechnung ! Berechnung Negativ!', &
   !   & 'Error calculating the soil tension, Negative denominator ','','',0,'bof',bof,&
   !   &'residual water content',wp,'unsat_cond')
   !   CLOSE(nerr)
   !   call writeFooter()
   !   stop
   !else
      kho=kff*ko
   !end if
!   WRITE(nres,*)'bof_para kho',bof_ko
else
!WRITE(nres,*)'kho_1',kho
    kho=kh1(i-1,ilay,it)
end if
!WRITE(nres,*)'kho_2',kho


! Calculation of down-conductivity kh1

if (bof .lt. wp) then
    bof=wp
end if
Se=(bof)/(bmax)
k1=(Se**l)*(1.-(1.-Se**(1./m))**m)**2.

!if (bof .lt. wp) then
!   call writeLogIntRealReal( 7,'Fehler in der Berechnung ! Berechnung Negativ!', &
!   & 'Error calculating the soil tension, Negative denominator ','','',0,'bof',bof,&
!   &'residual water content',wp,'unsat_cond')
!   CLOSE(nerr)
!   call writeFooter()
!   stop
!else
    kh1(i,ilay,it)=kff*k1
    !WRITE(nres,*)'kh1',kh1(i,ilay,it)
    !WRITE(nres,*)'bof_kh1',bof



!end if

kcita=(kho+kh1(i,ilay,it))/2.

end


