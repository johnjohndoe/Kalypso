<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 sp2 U (http://www.altova.com) by Gernot Belger (BCE GmbH) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="featureview.template.kalypso.org"
	xmlns:kalypso="types.template.kalypso.org" targetNamespace="featureview.template.kalypso.org"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xs:import namespace="types.template.kalypso.org" schemaLocation="./layerTypes.xsd" />

	<xs:element name="featuretemplate">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="layer" minOccurs="0">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="kalypso:layerType" />
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="view" type="ns1:featureviewType" minOccurs="0"
					maxOccurs="unbounded">
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="featureview" type="ns1:featureviewType" />
	<xs:complexType name="featureviewType">
		<xs:complexContent>
			<xs:extension base="ns1:compositeType">
				<xs:attribute name="typename" type="xs:QName" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="controlType">
		<xs:sequence minOccurs="0">
			<xs:element ref="ns1:layoutData" />
		</xs:sequence>
		<xs:attribute name="style" type="xs:string" use="required" />
		<xs:attribute name="tooltip" type="xs:string" use="optional" default="" />
		<xs:attribute name="visible" type="xs:boolean" use="optional" default="true" />
		<xs:attribute name="enabled" type="xs:boolean" use="optional" default="true" />
	</xs:complexType>
	<xs:complexType name="propertyControlType">
		<xs:complexContent>
			<xs:extension base="ns1:controlType">
				<xs:attribute name="property" type="xs:QName" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="layoutType" />
	<xs:complexType name="layoutDataType" />
	<xs:complexType name="compositeType">
		<xs:complexContent>
			<xs:extension base="ns1:controlType">
				<xs:sequence minOccurs="0">
					<xs:element ref="ns1:layout" />
					<xs:element ref="ns1:control" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="composite" type="ns1:compositeType" substitutionGroup="ns1:control" />
	<xs:element name="group" substitutionGroup="ns1:composite">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:compositeType">
					<xs:attribute name="text" type="xs:string" use="required" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="control" type="ns1:controlType" />
	<xs:element name="label" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType">
					<xs:attribute name="text" type="xs:string" use="optional" default="" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="text" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType">
					<xs:attribute name="editable" type="xs:boolean" use="optional" default="true" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="button" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="radiobutton" substitutionGroup="ns1:control">
		<xs:annotation>
			<xs:documentation>
				The radio button just sets the value of a feature to the given value
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType">
					<xs:attribute name="text" type="xs:string" use="optional" default="" />
					<xs:attribute name="valueToSet" type="xs:string" use="required" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="combo" substitutionGroup="ns1:control">
		<xs:annotation>
			<xs:documentation>A combo let the user choose between severel values.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType">
					<xs:sequence>
						<xs:element name="entry" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									An entry represant a slectable item from the combo box. The
									label is the string diaplyed to the user. The value (string
									element content) will be parsed by the appropriate
									IMarhsallingTypeHandler to the required value.
								</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="label" type="xs:string" />
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="checkbox" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType">
					<xs:attribute name="editable" type="xs:boolean" use="optional" default="true" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="table" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="subcomposite" substitutionGroup="ns1:control">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:propertyControlType" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="layout" type="ns1:layoutType" abstract="true" />
	<xs:element name="gridLayout" substitutionGroup="ns1:layout">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:layoutType">
					<xs:attribute name="horizontalSpacing" type="xs:int" use="optional" default="5" />
					<xs:attribute name="verticalSpacing" type="xs:int" use="optional" default="5" />
					<xs:attribute name="marginWidth" type="xs:int" use="optional" default="5" />
					<xs:attribute name="marginHeight" type="xs:int" use="optional" default="5" />
					<xs:attribute name="numColumns" type="xs:int" use="optional" default="2" />
					<xs:attribute name="makeColumnsEqualWidth" type="xs:boolean" use="optional"
						default="false" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="layoutData" type="ns1:layoutDataType" abstract="true" />
	<xs:element name="gridData" substitutionGroup="ns1:layoutData">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ns1:layoutDataType">
					<xs:attribute name="verticalAlignment" type="xs:string" use="optional"
						default="2" />
					<xs:attribute name="horizontalAlignment" type="xs:string" use="optional"
						default="2" />
					<xs:attribute name="widthHint" type="xs:int" use="optional" default="-1" />
					<xs:attribute name="heightHint" type="xs:int" use="optional" default="-1" />
					<xs:attribute name="horizontalIndent" type="xs:int" use="optional" default="0" />
					<xs:attribute name="horizontalSpan" type="xs:int" use="optional" default="1" />
					<xs:attribute name="verticalSpan" type="xs:int" use="optional" default="1" />
					<xs:attribute name="grabExcessHorizontalSpace" type="xs:boolean" use="optional"
						default="false" />
					<xs:attribute name="grabExcessVerticalSpace" type="xs:boolean" use="optional"
						default="false" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
</xs:schema>
