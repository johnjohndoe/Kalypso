# *******************************************************
# Configure loggers to log the renew debug informations
# Add new lines to define new loggers for each new 
# package/class which should use the log4j framework. 
# The difined RenewLog Appender can be reused for
# new loggers. There is no root logger
# defined, because this would also log the simulation
# trace output. To separate the simulation trace output 
# from the java debug messages, there should be separate
# loggers for each used java package.
# *******************************************************

log4j.logger.de=DEBUG, RenewLog, RenewConLog
log4j.logger.de.renew.engine.simulator.SimulationThreadPool=INFO
log4j.logger.CH=ERROR, RenewLog, RenewConLog
log4j.logger.jamr=ERROR, RenewLog, RenewConLog

# define a RollingFileAppender to write the log messages to
# a log file.
log4j.appender.RenewLog=org.apache.log4j.RollingFileAppender
# set the name and location of the log file
# The Java Property logs.home could be used to specify 
# the file name.
# If the property logs.home was not manually set, the property 
# holds by default the path to a ${user.home}/renewlogs
# directory in the users home directory. 
# The property "${user.home}" and all other defined
# java system properties could be used to define
# the log file locations.
log4j.appender.RenewLog.File=${logs.home}/renew.log
# set the maximal log file size
log4j.appender.RenewLog.MaxFileSize=250KB
# set the number of backup files 
log4j.appender.RenewLog.MaxBackupIndex=0
# define the log message output format
log4j.appender.RenewLog.layout=org.apache.log4j.PatternLayout
log4j.appender.RenewLog.layout.ConversionPattern=%d %p %c - %m%n

# define a console appender for error output
log4j.appender.RenewConLog=org.apache.log4j.ConsoleAppender
# Uncomment the following line if the console appender should only print error messages 
#log4j.appender.RenewConLog.threshold=WARN
log4j.appender.RenewConLog.layout=org.apache.log4j.PatternLayout
log4j.appender.RenewConLog.layout.ConversionPattern=%p: %m%n


# *******************************************************
# Configure a logger for the simulation trace output.
# To log simulation traces define loggers with the 
# following name pattern: 
# simulation.[net name].[place/transition name] where
# [net name] and [place/transition name] must be replaced
# with the name of the net or the name of the net element
# for with the messages should be logged.
# The defined logger logs all simulation trace messages
# to a file simulation.log in the logs directory given
# by the logs.home property.
# *******************************************************

log4j.logger.simulation=DEBUG, SimFileLog
# replace the previous line with the following line, if
# the simulation traces should also be printed in the
# console window.
#log4j.logger.simulation=DEBUG, SimFileLog, SimConLog

# define a console appender for the simulation trace output
log4j.appender.SimConLog=org.apache.log4j.ConsoleAppender
log4j.appender.SimConLog.layout=org.apache.log4j.PatternLayout
log4j.appender.SimConLog.layout.ConversionPattern= %m%n

# define a RollingFileAppender to write the simulation trace
# to a log file
log4j.appender.SimFileLog=org.apache.log4j.RollingFileAppender
log4j.appender.SimFileLog.File=${logs.home}/simulation.log
log4j.appender.SimFileLog.MaxFileSize=500KB
log4j.appender.SimFileLog.MaxBackupIndex=0
log4j.appender.SimFileLog.layout=org.apache.log4j.PatternLayout
log4j.appender.SimFileLog.layout.ConversionPattern= %m%n

