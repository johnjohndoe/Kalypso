package org.kalypso.model.wspm.pdb.db.mapping;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name = "event", schema = "pdb_admin", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Event implements java.io.Serializable
{

  private int id;

  private WaterBody waterBody;

  private String name;

  private Date creationDate;

  private Date editingDate;

  private String editingUser;

  private Date measurementDate;

  private String source;

  private String type;

  private String description;

  private Set<WaterlevelFixation> waterlevelFixations = new HashSet<WaterlevelFixation>( 0 );

  public Event( )
  {
  }

  public Event( final int id, final WaterBody waterBody, final String name, final Date creationDate, final Date editingDate, final String editingUser )
  {
    this.id = id;
    this.waterBody = waterBody;
    this.name = name;
    this.creationDate = creationDate;
    this.editingDate = editingDate;
    this.editingUser = editingUser;
  }

  public Event( final int id, final WaterBody waterBody, final String name, final Date creationDate, final Date editingDate, final String editingUser, final Date measurementDate, final String source, final String type, final String description, final Set<WaterlevelFixation> waterlevelFixations )
  {
    this.id = id;
    this.waterBody = waterBody;
    this.name = name;
    this.creationDate = creationDate;
    this.editingDate = editingDate;
    this.editingUser = editingUser;
    this.measurementDate = measurementDate;
    this.source = source;
    this.type = type;
    this.description = description;
    this.waterlevelFixations = waterlevelFixations;
  }

  @Id
  @Column(name = "id", unique = true, nullable = false, precision = 8, scale = 0)
  public int getId( )
  {
    return this.id;
  }

  public void setId( final int id )
  {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "water_body", nullable = false)
  public WaterBody getWaterBody( )
  {
    return this.waterBody;
  }

  public void setWaterBody( final WaterBody waterBody )
  {
    this.waterBody = waterBody;
  }

  @Column(name = "name", unique = true, nullable = false, length = 100)
  public String getName( )
  {
    return this.name;
  }

  public void setName( final String name )
  {
    this.name = name;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "creation_date", nullable = false, length = 22)
  public Date getCreationDate( )
  {
    return this.creationDate;
  }

  public void setCreationDate( final Date creationDate )
  {
    this.creationDate = creationDate;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "editing_date", nullable = false, length = 22)
  public Date getEditingDate( )
  {
    return this.editingDate;
  }

  public void setEditingDate( final Date editingDate )
  {
    this.editingDate = editingDate;
  }

  @Column(name = "editing_user", nullable = false, length = 50)
  public String getEditingUser( )
  {
    return this.editingUser;
  }

  public void setEditingUser( final String editingUser )
  {
    this.editingUser = editingUser;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "measurement_date", length = 22)
  public Date getMeasurementDate( )
  {
    return this.measurementDate;
  }

  public void setMeasurementDate( final Date measurementDate )
  {
    this.measurementDate = measurementDate;
  }

  @Column(name = "source")
  public String getSource( )
  {
    return this.source;
  }

  public void setSource( final String source )
  {
    this.source = source;
  }

  @Column(name = "type", length = 50)
  public String getType( )
  {
    return this.type;
  }

  public void setType( final String type )
  {
    this.type = type;
  }

  @Column(name = "description")
  public String getDescription( )
  {
    return this.description;
  }

  public void setDescription( final String description )
  {
    this.description = description;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
  public Set<WaterlevelFixation> getWaterlevelFixations( )
  {
    return this.waterlevelFixations;
  }

  public void setWaterlevelFixations( final Set<WaterlevelFixation> waterlevelFixations )
  {
    this.waterlevelFixations = waterlevelFixations;
  }

}
