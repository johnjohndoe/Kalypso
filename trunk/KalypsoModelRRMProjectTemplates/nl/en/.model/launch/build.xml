<project default="fake">

	<property name="modell.template.dir" value="${project.dir}/.templates/Modell" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: fake                      nur damit das Projekt nicht schreit
      - - - - - - - - - - - - - - - - - -->
	<target name="fake" />

	<target name="info">
		<echo message="project dir ${project.dir}" />
		<echo message="project url ${project.url}" />
		<echo message="calc dir    ${calc.dir}" />
		<echo message="calc url    ${calc.url}" />
	</target>

	<!-- 
		 ================================= 
          target: create			Rechenvariante erzeugen
         ================================= 
    -->
	<target name="create" description="Creating the calculation case">
		<echo message="Rechenvariante anlegen: ${calc.dir}" />
		
		<!-- copy others -->
		<copy todir="${calc.dir}">
			<fileset dir="${project.dir}/.model/calcCaseTemplate" includes="*/**" excludes="**/.svn/**" />
		</copy>

		<!-- copy models -->
		<copy todir="${calc.dir}/.models">
			<fileset dir="${project.dir}/Basis/.models" includes="*.gml" excludes="**/.svn/**" />
		</copy>
		
        <!-- Put some default values into calculation.gml -->
        <kalypso.changeGml gmlURL="${calc.url}/.models/calculation.gml" createQName="{org.kalypso.na.control_v2}NAControl">
          <property featurepath="" featureProperty="editor" value="${user.name}" />
          <property featurepath="" featureProperty="creationTime" value="${kalypso.currentTime}" />
        </kalypso.changeGml>		
	</target>

	<target name="setProperties" depends="info">
		<echo message="set up variables" />
		<kalypso.gmlProperty gmlURL="${calc.url}/.models/calculation.gml">
			<property name="startsim" featurepath="/" featureProperty="startsimulation" />
			<property name="stopsim" featurepath="/" featureProperty="endsimulation" />
			<property name="interval.amount" featurepath="/" featureProperty="minutesTimestep" />
		</kalypso.gmlProperty>

		<echo message="from           ${startsim}" />
		<echo message="to           ${stopsim}" />

		<!-- correct times for filters -->
		<script language="javascript">
			intervalAmount = java.lang.Integer.parseInt(project.getProperty("interval.amount"));
			startsimTime = javax.xml.bind.DatatypeConverter.parseDateTime( startsim );
			startsimTime.add(java.util.Calendar.MINUTE, -intervalAmount);
			project.setProperty("startsim", javax.xml.bind.DatatypeConverter.printDateTime( startsimTime ));
			
			stopsimTime = javax.xml.bind.DatatypeConverter.parseDateTime( stopsim );
			stopsimTime.add(java.util.Calendar.MINUTE, 3*intervalAmount);
			project.setProperty("stopsim", javax.xml.bind.DatatypeConverter.printDateTime( stopsimTime ));
		</script>
	</target>

	<target name="updateOmbrometer" depends="setProperties">
		<!-- updateOmbrometer: ombrometer von Datacenter (oder lokal)-abholen -->
		<echo message="update ombrometer (precipitation gauge - measurement)" />
		<delete dir="${calc.dir}/Precipitation" />
		<mkdir dir="${calc.dir}/Precipitation" />
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/ombrometer.gml" featurePath="ombrometerMember" context="${calc.url}" targetobservationdir="${calc.dir}/Precipitation">
			<source property="NRepository" from="${startsim}" to="${stopsim}" />
		</kalypso.copyObservation>
	</target>


	<target name="updatePegelMessung" depends="setProperties">
		<echo message="update gauging stations (measurement)" />
		<delete dir="${calc.dir}/Gauge" />
		<mkdir dir="${calc.dir}/Gauge" />
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/ObsQMapping.gml" featurePath="mappingMember" context="${calc.url}" targetobservationdir="${calc.dir}/Gauge">
			<source property="inObservationLink" from="${startsim}" to="${stopsim}" />
		</kalypso.copyObservation>
	</target>

	<target name="updateZuflussMessung" depends="setProperties">
		<echo message="update inflow - tributary/ inflow (measurement)" />
		<delete dir="${calc.dir}/Tributary" />
		<mkdir dir="${calc.dir}/Tributary" />
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/ObsQZuMapping.gml" featurePath="mappingMember" context="${calc.url}" targetobservationdir="${calc.dir}/Tributary">
			<source property="inObservationLink" from="${startsim}" to="${stopsim}" />
		</kalypso.copyObservation>
	</target>

	<target name="updateObsT" depends="setProperties">
		<echo message="update temperature (measurement)" />
		<delete dir="${calc.dir}/Climate" />
		<mkdir dir="${calc.dir}/Climate" />
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/ObsTMapping.gml" featurePath="mappingMember" context="${calc.url}" targetobservationdir="${calc.dir}/Climate">
			<source property="inObservationLink" from="${startsim}" to="${stopsim}" />
		</kalypso.copyObservation>
	</target>

	<target name="updateObsE" depends="setProperties">
		<echo message="update evaporation (measurement)" />
		<kalypso.copyObservation gml="${project.url}/.model/observationConf/ObsEMapping.gml" featurePath="mappingMember" context="${calc.url}" targetobservationdir="${calc.dir}/Climate">
			<source property="inObservationLink" from="${startsim}" to="${stopsim}" />
		</kalypso.copyObservation>
	</target>

	<target name="updateAll" depends="updateOmbrometer,updatePegelMessung,updateObsT,updateObsE,updateZuflussMessung" description="Aktualisiert eine Rechenvariante">
		<echo message="update all time series: ${calc.dir}" />
	</target>


	<target name="update" depends="updateAll" description="Aktualisiert eine Rechenvariante">
		<echo message="update time series: ${calc.dir}" />
	</target>

	<target name="setBasicModel" description="Ersetzt das Basismodell durch das Modell in der Rechenvariante">
		<echo message="Rechenvariante als Basismodell Ã¼bernehmen: ${calc.dir}" />

		<copy file="${calc.dir}/.models/modell.gml" tofile="${project.dir}/Basis/.models/modell.gml" overwrite="true" />
        <copy file="${calc.dir}/.models/hydrotop.gml" tofile="${project.dir}/Basis/.models/hydrotop.gml" overwrite="true" />
		<copy file="${calc.dir}/.models/parameter.gml" tofile="${project.dir}/Basis/.models/parameter.gml" overwrite="true" />

		<eclipse.refreshLocal resource="${project.path}/Basis/.models" depth="one" />
	</target>
	<!--
        =================================
        target: runCalculation
        =================================
      -->
	<target name="runCalculation" depends="setProperties" description="Runs the simulation">
		<echo message="Simulation is running: ${calc.path}" />
		<kalypso.runCalculation calcCaseFolder="${calc.path}" typeid="KalypsoNA">
			<input id="MetaSteuerdaten" path=".models/calculation.gml" relativeToCalcCase="true" />
			<input id="Modell" path=".models/modell.gml" relativeToCalcCase="true" />
			<input id="Control" path=".models/expertControl.gml" relativeToCalcCase="true" />
			<input id="Hydrotop" path=".models/hydrotop.gml" relativeToCalcCase="true" />
			<input id="Parameter" path=".models/parameter.gml" relativeToCalcCase="true" />

            <input id="PrecipitationTimeseries" path="ZR_Niederschlag" relativeToCalcCase="true" />
            <input id="TemperatureTimeseries" path="ZR_Temperatur" relativeToCalcCase="true" />
            <input id="EvaporationTimeseries" path="ZR_Verdunstung" relativeToCalcCase="true" />

            <input id="ZuflussDir" path="Tributary" relativeToCalcCase="true" />
			<input id="PegelDir" path="Gauge" relativeToCalcCase="true" />
			<input id="ErgebnisDir" path="Results" relativeToCalcCase="true" />
			<input id="LZSIM_IN" path="InitialValues" relativeToCalcCase="true" />

			<output id="OUT_ZML" path="Results" relativeToCalcCase="true" />

			<clearAfterCalc path="Results/Aktuell" relativeToCalcCase="true" />
		</kalypso.runCalculation>
		<antcall target="copyResults" />
	</target>

	<!-- ================================= 
          target: copyResults   copy results to timestamped dir             
         ================================= -->
	<target name="copyResults" description="Copies the results into a time-stamped folder.">
		<tstamp>
			<format property="now" pattern="yyyy.MM.dd_(HH_mm_ss)" />
		</tstamp>

		<property name="result.path" value="${calc.path}/Results" />
		<property name="result.dir" value="${calc.dir}/Results" />

		<property name="result.path.aktuell" value="${result.path}/Aktuell" />
		<property name="result.dir.aktuell" value="${result.dir}/Aktuell" />

		<property name="result.dir.time" value="${result.dir}/${now}" />
		<property name="result.path.time" value="${result.path}/${now}" />

		<echo message="Writing copy of results to: ${result.path.time}" />
		<copy todir="${result.dir.time}">
			<fileset dir="${result.dir.aktuell}" includes="**/*" />
		</copy>
	</target>
</project>